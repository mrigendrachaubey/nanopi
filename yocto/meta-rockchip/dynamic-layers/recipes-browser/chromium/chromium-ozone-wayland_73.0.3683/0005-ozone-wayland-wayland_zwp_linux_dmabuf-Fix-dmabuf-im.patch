From eb202160d19d20fcc2c0f01f01e4ae7772cdd499 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Wed, 15 May 2019 17:07:56 +0800
Subject: [PATCH 5/6] ozone: wayland: wayland_zwp_linux_dmabuf: Fix dmabuf
 import error

The wayland server(e.g. weston) might expect invalid modifier to be
DRM_FORMAT_MOD_INVALID.

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc b/ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc
index 08d5dbf8b..f90e3c434 100644
--- a/ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc
+++ b/ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc
@@ -54,12 +54,14 @@ void WaylandZwpLinuxDmabuf::CreateBuffer(base::File file,
   for (size_t i = 0; i < planes_count; i++) {
     uint32_t modifier_lo = 0;
     uint32_t modifier_hi = 0;
-    if (modifiers[i] != DRM_FORMAT_MOD_INVALID) {
+    if (modifiers[i] && modifiers[i] != DRM_FORMAT_MOD_INVALID) {
       modifier_lo = modifiers[i] & UINT32_MAX;
       modifier_hi = modifiers[i] >> 32;
     } else {
       DCHECK_EQ(planes_count, 1u) << "Invalid modifier may be passed only in "
                                      "case of single plane format being used";
+      modifier_lo = DRM_FORMAT_MOD_INVALID & UINT32_MAX;
+      modifier_hi = DRM_FORMAT_MOD_INVALID >> 32;
     }
     zwp_linux_buffer_params_v1_add(params, fd.get(), i /* plane id */,
                                    offsets[i], strides[i], modifier_hi,
-- 
2.11.0

