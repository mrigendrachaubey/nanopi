From d1916d05cbb27cde1ebe5ee6fe504e0bd3478805 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jose.dapena@lge.com>
Date: Fri, 5 Apr 2019 18:43:11 +0000
Subject: [PATCH 1/7] LocalFrameView: fix DisallowLayoutInvalidationScope GCC
 build
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

GCC visibility evaluation is different from Clang. In this case build
breaks because the lambda function declared in .h does not have
access to ForAllChildLocalFrameViews yet. Moving the implementation
of DisallowLayoutInvalidationScope constructor and destructor to .cc
fixes the problem.

BUG=chromium:819294

Change-Id: I82e8b135aa911c878413998a24cacce03d2662c9
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1550373
Commit-Queue: Jos√© Dapena Paz <jose.dapena@lge.com>
Reviewed-by: Daniel Cheng <dcheng@chromium.org>
Cr-Commit-Position: refs/heads/master@{#648270}
---
 .../blink/renderer/core/frame/local_frame_view.cc  | 24 ++++++++++++++++++++++
 .../blink/renderer/core/frame/local_frame_view.h   | 21 ++-----------------
 2 files changed, 26 insertions(+), 19 deletions(-)

diff --git a/third_party/blink/renderer/core/frame/local_frame_view.cc b/third_party/blink/renderer/core/frame/local_frame_view.cc
index cd2459665..62ce4a741 100644
--- a/third_party/blink/renderer/core/frame/local_frame_view.cc
+++ b/third_party/blink/renderer/core/frame/local_frame_view.cc
@@ -4406,4 +4406,28 @@ void LocalFrameView::UpdateVisibility(bool is_visible) {
   }
 }
 
+#if DCHECK_IS_ON()
+LocalFrameView::DisallowLayoutInvalidationScope::
+    DisallowLayoutInvalidationScope(LocalFrameView* view)
+    : local_frame_view_(view) {
+  local_frame_view_->allows_layout_invalidation_after_layout_clean_ = false;
+  local_frame_view_->ForAllChildLocalFrameViews([](LocalFrameView& frame_view) {
+    if (!frame_view.ShouldThrottleRendering())
+      frame_view.CheckDoesNotNeedLayout();
+    frame_view.allows_layout_invalidation_after_layout_clean_ = false;
+  });
+}
+
+LocalFrameView::DisallowLayoutInvalidationScope::
+    ~DisallowLayoutInvalidationScope() {
+  local_frame_view_->allows_layout_invalidation_after_layout_clean_ = true;
+  local_frame_view_->ForAllChildLocalFrameViews([](LocalFrameView& frame_view) {
+    if (!frame_view.ShouldThrottleRendering())
+      frame_view.CheckDoesNotNeedLayout();
+    frame_view.allows_layout_invalidation_after_layout_clean_ = true;
+  });
+}
+
+#endif
+
 }  // namespace blink
diff --git a/third_party/blink/renderer/core/frame/local_frame_view.h b/third_party/blink/renderer/core/frame/local_frame_view.h
index 572188420..1c2c268ca 100644
--- a/third_party/blink/renderer/core/frame/local_frame_view.h
+++ b/third_party/blink/renderer/core/frame/local_frame_view.h
@@ -732,25 +732,8 @@ class CORE_EXPORT LocalFrameView final
     STACK_ALLOCATED();
 
    public:
-    DisallowLayoutInvalidationScope(LocalFrameView* view)
-        : local_frame_view_(view) {
-      local_frame_view_->allows_layout_invalidation_after_layout_clean_ = false;
-      local_frame_view_->ForAllChildLocalFrameViews(
-          [](LocalFrameView& frame_view) {
-            if (!frame_view.ShouldThrottleRendering())
-              frame_view.CheckDoesNotNeedLayout();
-            frame_view.allows_layout_invalidation_after_layout_clean_ = false;
-          });
-    }
-    ~DisallowLayoutInvalidationScope() {
-      local_frame_view_->allows_layout_invalidation_after_layout_clean_ = true;
-      local_frame_view_->ForAllChildLocalFrameViews(
-          [](LocalFrameView& frame_view) {
-            if (!frame_view.ShouldThrottleRendering())
-              frame_view.CheckDoesNotNeedLayout();
-            frame_view.allows_layout_invalidation_after_layout_clean_ = true;
-          });
-    }
+    explicit DisallowLayoutInvalidationScope(LocalFrameView* view);
+    ~DisallowLayoutInvalidationScope();
 
    private:
     UntracedMember<LocalFrameView> local_frame_view_;
-- 
2.11.0

