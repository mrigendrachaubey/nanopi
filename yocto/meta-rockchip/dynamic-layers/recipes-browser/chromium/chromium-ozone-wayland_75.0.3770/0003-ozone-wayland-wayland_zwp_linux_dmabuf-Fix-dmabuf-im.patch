From 0e3fa0009393d73d6ffd658582f59ccad64f78f9 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Tue, 28 May 2019 08:34:51 +0000
Subject: [PATCH 3/5] ozone: wayland: wayland_zwp_linux_dmabuf: Fix dmabuf
 import error

The wayland server(e.g. weston) might expect invalid modifier to be
DRM_FORMAT_MOD_INVALID.

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc b/ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc
index 67b6f7500..d17a03c82 100644
--- a/ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc
+++ b/ui/ozone/platform/wayland/host/wayland_zwp_linux_dmabuf.cc
@@ -52,13 +52,12 @@ void WaylandZwpLinuxDmabuf::CreateBuffer(base::ScopedFD fd,
   for (size_t i = 0; i < planes_count; i++) {
     uint32_t modifier_lo = 0;
     uint32_t modifier_hi = 0;
-    if (modifiers[i] != DRM_FORMAT_MOD_INVALID) {
-      modifier_lo = modifiers[i] & UINT32_MAX;
-      modifier_hi = modifiers[i] >> 32;
-    } else {
+    if (modifiers[i] == DRM_FORMAT_MOD_INVALID) {
       DCHECK_EQ(planes_count, 1u) << "Invalid modifier may be passed only in "
                                      "case of single plane format being used";
     }
+    modifier_lo = modifiers[i] & UINT32_MAX;
+    modifier_hi = modifiers[i] >> 32;
     zwp_linux_buffer_params_v1_add(params, fd.get(), i /* plane id */,
                                    offsets[i], strides[i], modifier_hi,
                                    modifier_lo);
-- 
2.11.0

