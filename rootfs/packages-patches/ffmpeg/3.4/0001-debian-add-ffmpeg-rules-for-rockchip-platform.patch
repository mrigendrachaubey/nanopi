From dbbc8af173577ddf80360763181c7c4dce4feccc Mon Sep 17 00:00:00 2001
From: Jacob Chen <jacob-chen@iotwrt.com>
Date: Thu, 18 Jan 2018 16:05:13 +0800
Subject: [PATCH] debian: add ffmpeg rules for rockchip platform

Signed-off-by: Jacob Chen <jacob-chen@iotwrt.com>
---
 debian/changelog                                   |  930 ++++++++++++++++
 debian/compat                                      |    1 +
 debian/control                                     |  782 ++++++++++++++
 debian/copyright                                   | 1132 ++++++++++++++++++++
 debian/ffmpeg-doc.doc-base                         |    9 +
 debian/ffmpeg-doc.install                          |    9 +
 debian/ffmpeg-doc.links                            |    2 +
 debian/ffmpeg.install                              |    6 +
 debian/ffmpeg.lintian-overrides                    |    9 +
 debian/ffmpeg.manpages                             |    1 +
 debian/gbp.conf                                    |    4 +
 debian/libav-tools.links                           |    6 +
 debian/libavcodec-dev.install                      |    4 +
 debian/libavcodec-extra57.install                  |    1 +
 debian/libavcodec-extra57.install.powerpc          |    2 +
 debian/libavcodec-extra57.lintian-overrides        |   10 +
 debian/libavcodec57.install                        |    1 +
 debian/libavcodec57.install.powerpc                |    2 +
 debian/libavcodec57.lintian-overrides              |    7 +
 debian/libavdevice-dev.install                     |    4 +
 debian/libavdevice57.install                       |    1 +
 debian/libavdevice57.install.powerpc               |    2 +
 debian/libavfilter-dev.install                     |    4 +
 debian/libavfilter-extra6.install                  |    1 +
 debian/libavfilter-extra6.install.powerpc          |    2 +
 debian/libavfilter-extra6.lintian-overrides        |   10 +
 debian/libavfilter6.install                        |    1 +
 debian/libavfilter6.install.powerpc                |    2 +
 debian/libavfilter6.lintian-overrides              |    7 +
 debian/libavformat-dev.install                     |    4 +
 debian/libavformat57.install                       |    1 +
 debian/libavformat57.install.powerpc               |    2 +
 debian/libavformat57.lintian-overrides             |    2 +
 debian/libavresample-dev.install                   |    4 +
 debian/libavresample3.install                      |    1 +
 debian/libavresample3.install.powerpc              |    2 +
 debian/libavresample3.lintian-overrides            |    6 +
 debian/libavutil-dev.install                       |    4 +
 debian/libavutil55.install                         |    1 +
 debian/libavutil55.install.powerpc                 |    2 +
 debian/libavutil55.lintian-overrides               |    7 +
 debian/libpostproc-dev.install                     |    4 +
 debian/libpostproc54.install                       |    1 +
 debian/libpostproc54.install.powerpc               |    2 +
 debian/libpostproc54.lintian-overrides             |    7 +
 debian/libswresample-dev.install                   |    4 +
 debian/libswresample2.install                      |    1 +
 debian/libswresample2.install.powerpc              |    2 +
 debian/libswresample2.lintian-overrides            |    7 +
 debian/libswscale-dev.install                      |    4 +
 debian/libswscale4.install                         |    1 +
 debian/libswscale4.install.powerpc                 |    2 +
 debian/libswscale4.lintian-overrides               |    7 +
 .../missing-sources/ffmpeg-web/src/less/style.less |  507 +++++++++
 debian/patches/0001-arm-thumb2-blx.patch           |   80 ++
 ...-dashenc-fix-min_seg_duration-option-size.patch |   31 +
 debian/patches/0005-float-dsp-i386.patch           |   57 +
 debian/patches/series                              |    3 +
 debian/qt-faststart.1                              |   36 +
 debian/rules                                       |  281 +++++
 debian/source/format                               |    1 +
 debian/tests/control                               |    8 +
 debian/tests/encdec                                |  443 ++++++++
 debian/tests/encdec-extra                          |    7 +
 debian/tests/encdec-extra_list.txt                 |   13 +
 debian/tests/encdec_list.txt                       |   61 ++
 debian/tests/examples                              |   19 +
 debian/upstream/signing-key.asc                    |   32 +
 debian/watch                                       |    3 +
 69 files changed, 4612 insertions(+)
 create mode 100644 debian/changelog
 create mode 100644 debian/compat
 create mode 100644 debian/control
 create mode 100644 debian/copyright
 create mode 100644 debian/ffmpeg-doc.doc-base
 create mode 100644 debian/ffmpeg-doc.install
 create mode 100644 debian/ffmpeg-doc.links
 create mode 100644 debian/ffmpeg.install
 create mode 100644 debian/ffmpeg.lintian-overrides
 create mode 100644 debian/ffmpeg.manpages
 create mode 100644 debian/gbp.conf
 create mode 100644 debian/libav-tools.links
 create mode 100644 debian/libavcodec-dev.install
 create mode 100644 debian/libavcodec-extra57.install
 create mode 100644 debian/libavcodec-extra57.install.powerpc
 create mode 100644 debian/libavcodec-extra57.lintian-overrides
 create mode 100644 debian/libavcodec57.install
 create mode 100644 debian/libavcodec57.install.powerpc
 create mode 100644 debian/libavcodec57.lintian-overrides
 create mode 100644 debian/libavdevice-dev.install
 create mode 100644 debian/libavdevice57.install
 create mode 100644 debian/libavdevice57.install.powerpc
 create mode 100644 debian/libavfilter-dev.install
 create mode 100644 debian/libavfilter-extra6.install
 create mode 100644 debian/libavfilter-extra6.install.powerpc
 create mode 100644 debian/libavfilter-extra6.lintian-overrides
 create mode 100644 debian/libavfilter6.install
 create mode 100644 debian/libavfilter6.install.powerpc
 create mode 100644 debian/libavfilter6.lintian-overrides
 create mode 100644 debian/libavformat-dev.install
 create mode 100644 debian/libavformat57.install
 create mode 100644 debian/libavformat57.install.powerpc
 create mode 100644 debian/libavformat57.lintian-overrides
 create mode 100644 debian/libavresample-dev.install
 create mode 100644 debian/libavresample3.install
 create mode 100644 debian/libavresample3.install.powerpc
 create mode 100644 debian/libavresample3.lintian-overrides
 create mode 100644 debian/libavutil-dev.install
 create mode 100644 debian/libavutil55.install
 create mode 100644 debian/libavutil55.install.powerpc
 create mode 100644 debian/libavutil55.lintian-overrides
 create mode 100644 debian/libpostproc-dev.install
 create mode 100644 debian/libpostproc54.install
 create mode 100644 debian/libpostproc54.install.powerpc
 create mode 100644 debian/libpostproc54.lintian-overrides
 create mode 100644 debian/libswresample-dev.install
 create mode 100644 debian/libswresample2.install
 create mode 100644 debian/libswresample2.install.powerpc
 create mode 100644 debian/libswresample2.lintian-overrides
 create mode 100644 debian/libswscale-dev.install
 create mode 100644 debian/libswscale4.install
 create mode 100644 debian/libswscale4.install.powerpc
 create mode 100644 debian/libswscale4.lintian-overrides
 create mode 100644 debian/missing-sources/ffmpeg-web/src/less/style.less
 create mode 100644 debian/patches/0001-arm-thumb2-blx.patch
 create mode 100644 debian/patches/0004-avformat-dashenc-fix-min_seg_duration-option-size.patch
 create mode 100644 debian/patches/0005-float-dsp-i386.patch
 create mode 100644 debian/patches/series
 create mode 100644 debian/qt-faststart.1
 create mode 100755 debian/rules
 create mode 100644 debian/source/format
 create mode 100644 debian/tests/control
 create mode 100755 debian/tests/encdec
 create mode 100755 debian/tests/encdec-extra
 create mode 100644 debian/tests/encdec-extra_list.txt
 create mode 100644 debian/tests/encdec_list.txt
 create mode 100755 debian/tests/examples
 create mode 100644 debian/upstream/signing-key.asc
 create mode 100644 debian/watch

diff --git a/debian/changelog b/debian/changelog
new file mode 100644
index 0000000000..01ea94c064
--- /dev/null
+++ b/debian/changelog
@@ -0,0 +1,930 @@
+ffmpeg (7:3.4.1-1) unstable; urgency=medium
+
+  * New upstream release.
+    - Fixes CVE-2017-16840, CVE-2017-17081.
+
+  * debian/control:
+    - Bump standards version to 4.1.2.
+  * debian/patches:
+    - Drop patches applied upstream.
+
+ -- James Cowgill <jcowgill@debian.org>  Mon, 11 Dec 2017 17:31:16 +0000
+
+ffmpeg (7:3.4-4) unstable; urgency=medium
+
+  * debian/control:
+    - Require 3.4 avcodec/avfilter when 3.4 avutil is in use. (Closes: #882598)
+  * debian/patches:
+    - Add patch to fix random FTBFS on i386 caused by float precision issues.
+      (Closes: #882075)
+
+ -- James Cowgill <jcowgill@debian.org>  Sat, 25 Nov 2017 10:49:41 +0000
+
+ffmpeg (7:3.4-3) unstable; urgency=medium
+
+  * debian/patches:
+    - Add patch to fix dash muxer autopkgtest errors on big-endian.
+
+ -- James Cowgill <jcowgill@debian.org>  Sat, 18 Nov 2017 15:45:03 +0000
+
+ffmpeg (7:3.4-2) unstable; urgency=medium
+
+  * Upload to unstable.
+
+  * debian/control:
+    - Set Rules-Requires-Root: no
+  * debian/libavutil55.lintian-overrides:
+    - Add shlib-with-non-pic-code override on i386.
+  * debian/patches:
+    - Add patch to fix checkasm test on armhf. (Closes: #879800)
+    - Add patch to workaround incorrect use of drain packets in compat decode
+      api. (Closes: #879673)
+
+ -- James Cowgill <jcowgill@debian.org>  Thu, 09 Nov 2017 16:13:48 +0000
+
+ffmpeg (7:3.4-1) experimental; urgency=medium
+
+  * New upstream release.
+
+  * debian/control:
+    - Bump standards version to 4.1.1.
+    - Remove "Priority: extra" which is deprecated in policy 4.0.1.
+  * debian/copyright:
+    - Update debian/copyright using decopy.
+  * debian/patches:
+    - Drop patches applied upstream.
+  * debian/rules:
+    - Update build options and enabled libraries.
+  * debian/tests:
+    - Fix examples package test by using new build target.
+    - Update autopkgtest encdec lists.
+
+ -- James Cowgill <jcowgill@debian.org>  Sat, 21 Oct 2017 19:35:10 +0100
+
+ffmpeg (7:3.3.4-2) unstable; urgency=medium
+
+  * debian/patches/0004-Add-support-for-LibOpenJPEG-v2.2-git.patch:
+    - Add upstream patch to fix FTBFS with OpenJPEG 2.2. (Closes: #876805)
+
+ -- James Cowgill <jcowgill@debian.org>  Tue, 26 Sep 2017 11:42:03 +0100
+
+ffmpeg (7:3.3.4-1) unstable; urgency=medium
+
+  * New upstream bugfix release.
+    - Fixes CVE-2017-14054, CVE-2017-14055, CVE-2017-14056,
+      CVE-2017-14057, CVE-2017-14058, CVE-2017-14059, CVE-2017-14169,
+      CVE-2017-14170, CVE-2017-14171, CVE-2017-14222, CVE-2017-14223,
+      CVE-2017-14225.
+    - Fixes crashes on ARM due to misalignment. (Closes: #872503)
+
+  * debian/patches:
+    - Drop 0004-swscale-fix-gbrap16-alpha-channel-issues.patch,
+      applied upstream.
+
+ -- James Cowgill <jcowgill@debian.org>  Tue, 12 Sep 2017 23:44:51 +0100
+
+ffmpeg (7:3.3.3-4) unstable; urgency=medium
+
+  * debian/control:
+    - Bump standards version to 4.1.0 (no changes).
+  * debian/patches/0006-disable-ppc-scalarproduct.patch:
+    - Drop patch now that the GCC-7 toolchain bug is fixed.
+
+ -- James Cowgill <jcowgill@debian.org>  Wed, 06 Sep 2017 20:39:42 +0100
+
+ffmpeg (7:3.3.3-3) unstable; urgency=medium
+
+  * Add myself to the list of uploaders.
+  * Disable broken optimizations on ppc64el to fix FTBFS. (See: #871565)
+
+ -- James Cowgill <jcowgill@debian.org>  Wed, 16 Aug 2017 11:11:59 +0100
+
+ffmpeg (7:3.3.3-2) unstable; urgency=medium
+
+  * Team upload.
+  * Add 0005-arm-thumb2-blx.patch to fix SIGBUS on armhf.
+    Thanks to Jiong Wang. (Closes: #870622)
+
+ -- James Cowgill <jcowgill@debian.org>  Tue, 08 Aug 2017 21:53:47 -0400
+
+ffmpeg (7:3.3.3-1) unstable; urgency=medium
+
+  * Team upload.
+  * New upstream release.
+    - Fixes testsuite failure on arm64. (Closes: #870050)
+  * Add patches to fix testsuite failures on big-endian. (Closes: #870048)
+    - 0001-sws-tests-pixdesc_query-replace-rgb-based-pix-fmts-w.patch.
+    - 0002-swscale-fix-gbrap16-alpha-channel-issues.patch to fix. This patch
+      also fixes some other alpha channel issues with the gbrap16 pixel
+      formats.
+
+  * debian/rules:
+    - Disable more MIPS optimization options which might not be available on
+      all processors.
+
+ -- James Cowgill <jcowgill@debian.org>  Tue, 01 Aug 2017 16:08:54 +0100
+
+ffmpeg (7:3.3.2-1) unstable; urgency=medium
+
+  * Team upload.
+
+  [ Reinhard Tartler ]
+  * New upstream release. (Closes: #869112)
+    - Comes with internal ebur128 library, so drop build-dependency on
+      libebur128-dev.
+
+  [ James Cowgill ]
+  * debian/copyright:
+    - Update.
+  * debian/tests:
+    - Use '-pix_fmt yuv422p' in dnxhd autopkgtests.
+    - Update encdec_list.txt.
+
+ -- James Cowgill <jcowgill@debian.org>  Wed, 26 Jul 2017 21:06:44 +0100
+
+ffmpeg (7:3.2.6-1) unstable; urgency=medium
+
+  * Team upload.
+  * New upstream release.
+  * debian/control: Bump Standards-Version.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Wed, 21 Jun 2017 22:07:55 +0200
+
+ffmpeg (7:3.2.5-1) unstable; urgency=medium
+
+  * Team upload.
+  * New upstream release.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Mon, 22 May 2017 22:03:36 +0200
+
+ffmpeg (7:3.2.4-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 3.2.4.
+     - Fixes CVE-2016-9561, CVE-2017-5024 and CVE-2017-5025.
+  * Drop patches, included upstream:
+     - lavf-chromaprint-Update-for-version-1.4.patch
+     - libopenmpt-add-missing-avio_read-return-value-check.patch
+     - swscale-save-ebx-register-when-it-is-not-available.patch
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Fri, 10 Feb 2017 22:24:45 +0100
+
+ffmpeg (7:3.2.2-2) unstable; urgency=medium
+
+  * Cherry-pick patches from upstream:
+     - Fix building with chromaprint 1.4. (Closes: #851026)
+     - Fix building with --disable-pic on gcc-4.8.
+     - Fix heap-buffer-overflows when using libopenmpt.
+  * Re-enable chromaprint on sh4 and libx264 on powerpcspe.
+  * Update packaging copyright years.
+  * Switch from libmodplug to libopenmpt. (Closes: #849840)
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sat, 21 Jan 2017 22:39:40 +0100
+
+ffmpeg (7:3.2.2-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 3.2.2.
+  * Fix log messages in autopkgtest.
+  * Enable frei0r on powerpcspe.
+  * Drop --disable-tesseract.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Tue, 06 Dec 2016 23:58:20 +0100
+
+ffmpeg (7:3.2.1-1) unstable; urgency=medium
+
+  [ Balint Reczey ]
+  * Call dh_auto_install with -a/-i for -arch and for -indep targets
+    respectively
+
+  [ Andreas Cadhalpun ]
+  * Import new upstream bugfix release 3.2.1.
+  * Don't enable x11grab, which has been replaced with xcb.
+  * Add build-dependency on autodetected libxcb-shm0-dev. (Closes: #843144)
+  * Add explicit build-dependencies for autodetected features.
+  * Remove patches, fixed upstream.
+     - Revert-avformat-hls-Fix-missing-streams-in-some-case.patch
+     - apng-use-side-data-to-pass-extradata-to-muxer.patch
+     - doc-fix-spelling-errors.patch
+     - pixblockdsp-disable-altivec-optimizations-on-ppc64be.patch
+  * Disable libschroedinger entirely. (see #845037)
+  * Enable omx.
+  * Update build-dependencies for some ports.
+     - m68k: enable chromaprint
+     - powerpcspe: enable chromaprint, openal, opencv
+     - sh4: disable chromaprint
+  * Add streamcopy testing to the autopkgtest.
+  * Update encdec_list.txt.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sat, 26 Nov 2016 23:44:53 +0100
+
+ffmpeg (7:3.2-2) unstable; urgency=medium
+
+  * Fix FTBFS on powerpc and arch-independent build.
+  * Add patch to fix test failures on ppc64.
+    - pixblockdsp-disable-altivec-optimizations-on-ppc64be.patch
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Tue, 01 Nov 2016 00:42:03 +0100
+
+ffmpeg (7:3.2-1) unstable; urgency=medium
+
+  * Import new major upstream release 3.2.
+  * Drop patches, included upstream:
+    - ffmpeg_opt-Suggest-to-use-file-.-if-a-protocol-was-not-fo.patch
+    - lavf-mp3enc-write-encoder-delay-padding-upon-closing.patch
+    - doc-fix-spelling-errors.patch
+    - faq-use-relative-links-to-own-documentation.patch
+    - tests-checkasm-pixblockdsp-Test-8-byte-aligned-positions.patch
+  * Switch to SDL 2.
+  * Update comments in debian/rules and drop cruft.
+  * Update debian/copyright.
+  * Add patches to fix autopkgtest failures and spelling errors:
+    - apng-use-side-data-to-pass-extradata-to-muxer.patch
+    - Revert-avformat-hls-Fix-missing-streams-in-some-case.patch
+    - doc-fix-spelling-errors.patch
+  * Update debian/tests_encdec_list.txt.
+  * Build static libraries without -fPIC as required by policy 10.2.
+  * Disable uninstallable BDs on m68k and powerpcspe:
+    - powerpcspe: openal, netcdf, frei0r, opencv, x264 and chromaprint.
+    - m68k: chromaprint
+  * Avoid needlessly re-running configure.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sun, 30 Oct 2016 10:15:11 +0100
+
+ffmpeg (7:3.1.5-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 3.1.5.
+  * Use nasm instead of yasm.
+    - Unlike yasm it is actively maintained upstream.
+    - And it doesn't embed the full build path as DW_AT_comp_dir.
+      (This should make ffmpeg fully reproducible.)
+  * Drop patches, fixed differently upstream:
+    - disable-opj-static.patch
+    - libopenjpegenc-recreate-image-data-buffer.patch
+  * Add patches from upstream:
+     - doc-fix-spelling-errors.patch (Closes: #839542)
+     - faq-use-relative-links-to-own-documentation.patch (Closes: #841501)
+     - ffmpeg_opt-Suggest-to-use-file-.-if-a-protocol-was-not-fo.patch
+       (Closes: #785690)
+     - lavf-mp3enc-write-encoder-delay-padding-upon-closing.patch
+       (Closes: #797965)
+     - tests-checkasm-pixblockdsp-Test-8-byte-aligned-positions.patch
+       (LP: #1612058)
+  * Use debhelper compat 10.
+     - Parallel building is now the default.
+  * Revert: Enable all hardening options except pie.
+     - It doesn't have any effect, anyway.
+     - PIE is now the default.
+  * Adapt lintian overrides to PIE by default.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sat, 22 Oct 2016 22:33:02 +0200
+
+ffmpeg (7:3.1.4-1) unstable; urgency=medium
+
+  [ Ondřej Nový ]
+  * Disable librtmp support, because the built-in RTMP support is better.
+
+  [ Andreas Cadhalpun ]
+  * Import new upstream bugfix release 3.1.4.
+     - Fixes CVE-2016-7122, CVE-2016-7450, CVE-2016-7502, CVE-2016-7555,
+       CVE-2016-7562, CVE-2016-7785 and CVE-2016-7905. (Closes: #840434)
+  * Fix typos.
+  * Replace libopencv-dev build-dependency with libopencv-imgproc-dev.
+  * Improve build-time optimization for libavfilter-extra.
+  * Mention sofalizer in libavfilter-extra6 description.
+  * Remove redundant nocheck test.
+  * Add libopenjpegenc-recreate-image-data-buffer.patch to fix autopkg
+    test crashes.
+  * Let the encdec test print the command before executing it.
+  * Update encdec*_list.txt.
+  * Re-enable the libopenjpeg decoder.
+  * Enable libzmq on hurd, as it is now available there.
+  * Use 'set -e' to abort build on configure failure.
+  * Only set CC/CXX if they differ from the default.
+  * Set configure options for cross-building.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Tue, 11 Oct 2016 21:17:10 +0200
+
+ffmpeg (7:3.1.3-2) unstable; urgency=medium
+
+  * Team upload.
+
+  [ Balint Reczey ]
+  * Enable OCR using Tesseract in libavfilter-extra* (Closes: 822555)
+
+  [ Sebastian Ramacher ]
+  * debian/libavcodec*.lintian-overrides: Remove unused lintian override.
+  * debian/rules:
+    - Enable all hardening options except pie.
+    - Apply the same optimization for libavfilter extra flavor.
+  * debian/{control,rules}: Build libavfilter extra flavor with --enable-netcdf.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Wed, 28 Sep 2016 21:42:19 +0200
+
+ffmpeg (7:3.1.3-1) unstable; urgency=medium
+
+  * Team upload.
+  * New upstream release.
+  * debian/{rules,*.symbols}: Remove symbol files and generate tighter
+    dependencies using a dh_makeshlibs override. (Closes: #835645)
+  * debian/copyright: Fix dep5-copyright-license-name-not-unique.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Sun, 28 Aug 2016 12:12:44 +0200
+
+ffmpeg (7:3.1.2-1) unstable; urgency=medium
+
+  * New upstream release.
+  * debian/patches:
+    - fix-vaapi-default-values.patch: Removed, applied upstream.
+    - Revert-configure-Enable-GCC-vectorization-on-4.9-on-.patch: Removed,
+      included upstream.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Wed, 10 Aug 2016 20:42:29 +0200
+
+ffmpeg (7:3.1.1-4) unstable; urgency=high
+
+  * debian/control:
+    - Remove obsolete Conflicts.
+    - Remove obsolete Breaks against dmo packages.
+  * debian/patches/fix-vaapi-default-values.patch: Use local independent
+    default values. Thanks to Carl Eugen Hoyos. (Closes: #831529)
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Wed, 03 Aug 2016 15:16:59 +0200
+
+ffmpeg (7:3.1.1-3) unstable; urgency=medium
+
+  [ James Clarke ]
+  * debian/rules: Re-enable x264 on sparc64 as the linker has been fixed.
+    (Closes: #831582)
+
+  [ Sebastian Ramacher ]
+  * debian/patches/Revert-configure-Enable-GCC-vectorization-on-4.9-on-.patch:
+    Apply upstream patch to disable GCC vectorization.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Thu, 21 Jul 2016 20:26:12 +0200
+
+ffmpeg (7:3.1.1-2) unstable; urgency=medium
+
+  * Team upload.
+
+  [ Aurelien Jarno ]
+  * debian/rules: Fix FTBFS on mips64el by adding --disable-mips64r6. (Closes:
+    #830868)
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Tue, 12 Jul 2016 16:38:52 +0200
+
+ffmpeg (7:3.1.1-1) unstable; urgency=medium
+
+  * Team upload.
+  * New upstream release.
+  * debian/rules:
+    - Really build with opencv everywhere. (Closes: #827868)
+    - Remove obsolete comments.
+    - Build with --enable-libebur128.
+  * debian/patches
+    - lavf-mpegts-Return-small-probe-score-for-very-short-.patch: Removed,
+      included upstream.
+    - disable-opj-static.patch: Do not define OPJ_STATIC when building against
+      openjpeg 2.1.x.
+  * debian/control: Add libebur128-dev to B-D.
+  * debian/copyright:
+    - Add new copyright holders.
+    - Update copyright years.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Tue, 12 Jul 2016 09:37:46 +0200
+
+ffmpeg (7:3.0.2-4) unstable; urgency=medium
+
+  * debian/control: Switch to libopenjp2-7-dev. (Closes: #826812)
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Sat, 11 Jun 2016 11:19:42 +0200
+
+ffmpeg (7:3.0.2-3) unstable; urgency=medium
+
+  * Team upload.
+
+  [ Balint Reczey ]
+  * Build-depend on libx265-dev (>= 1.8)
+
+  [ Sebastian Ramacher ]
+  * debian/rules:
+    - No longer disable i686 optimization on i386 based architectures.
+    - Disable mips32r6 for all mips architectures.
+  * debian/copyright: Remove an extra 'with'.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Wed, 01 Jun 2016 20:43:32 +0200
+
+ffmpeg (7:3.0.2-2) unstable; urgency=medium
+
+  * Team upload.
+  * debian/rules: Build with --disable-mips32r6 on mips(el) to fix FTBFS
+    there.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Fri, 13 May 2016 16:49:23 +0200
+
+ffmpeg (7:3.0.2-1) unstable; urgency=medium
+
+  * Team upload.
+  * New upstream release (Closes: #823633).
+  * debian/patches/lavf-mpegts-Return-small-probe-score-for-very-short-.patch:
+    Upstream patch to fix regression in aac in mpegts. (Closes: #823098)
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Sun, 08 May 2016 19:53:57 +0200
+
+ffmpeg (7:3.0.1-3) unstable; urgency=medium
+
+  * Team upload.
+  * Upload to unstable.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Sun, 17 Apr 2016 19:24:37 +0200
+
+ffmpeg (7:3.0.1-2) experimental; urgency=medium
+
+  * debian/control: Let libavcodec-extra depend on an existing package.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Mon, 11 Apr 2016 20:26:41 +0200
+
+ffmpeg (7:3.0.1-1) experimental; urgency=medium
+
+  * Team upload.
+  * New upstream release.
+  * debian/*.install.powerpc: Remove extra -ffmpeg from filenames.
+  * debian/control: Bump Standards-Version.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Mon, 11 Apr 2016 17:51:27 +0200
+
+ffmpeg (7:3.0-1) experimental; urgency=medium
+
+  * Team upload.
+  * New upstream release.
+  * SONAME bump and no longer add -ffmpeg to SONAMES.
+  * debian/{rules,control}: Use automatic debug symbol packages.
+  * debian/patches/{build-make-out-of-tree-builds-bit-identical-to-in-tr,
+    doc-make-apidoc-output-independent-of-SRC_PATH}.patch: Removed, included
+    upstream.
+  * debian/missing-sources/ffmpeg-web/src/less/style.less: Update from GitHub.
+  * debian/copyright: Update copyright years and add new copyright holders.
+  * debian/rules:
+    - Honor nocheck.
+    - Simplify CPU check.
+    - No longer build with --enable-libvo_aacenc.
+    - Update use of --disable-mipsdspr1.
+    - Build with --enable-chromaprint and --enable-librubberband.
+    - Do not run tests for -indep builds.
+    - Always fail loop on error.
+  * debian/control:
+    - Update Vcs-Git.
+    - New Build-Depends: libchromaprint-dev, librubberband-dev.
+    - Removed Build-Depends: libvo-aacenc-dev.
+    - Update Description.
+
+ -- Sebastian Ramacher <sramacher@debian.org>  Tue, 08 Mar 2016 01:58:44 +0100
+
+ffmpeg (7:2.8.6-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.8.6.
+  * Update Standards-Version to 3.9.7.
+     - Move documentatation from /u/s/d/ffmpeg-doc/ to /u/s/d/ffmpeg/.
+  * Use https for the Vcs-Git link.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Tue, 02 Feb 2016 23:46:23 +0100
+
+ffmpeg (7:2.8.5-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.8.5.
+     - Fixes CVE-2016-1897 and CVE-2016-1898.
+  * Update doc-make-apidoc-output-independent-of-SRC_PATH.patch.
+  * Add patch to make out-of-tree builds bit-identical to in-tree-builds.
+  * Enable the now available opencv and frei0r on mips64el.
+  * Fix altivec-extra compile time optimization.
+  * Update copyright year for the debian files.
+  * Change priority of libavcodec*-extra* to extra.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Fri, 15 Jan 2016 20:23:56 +0100
+
+ffmpeg (7:2.8.4-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.8.4.
+  * Change section of libavcodec-extra from libs to metapackages.
+  * Re-enable libsoxr as glibc bug #793641 is now fixed in testing.
+  * Add patch to make apidoc output independent of SRC_PATH.
+  * Also build standard flavor in a subdirectory. (Closes: #804284)
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sun, 20 Dec 2015 23:12:56 +0100
+
+ffmpeg (7:2.8.3-1) unstable; urgency=medium
+
+  * Switch debian/watch to xz instead of gz.
+  * Import new upstream bugfix release 2.8.3.
+    Fixes CVE-2015-8363, CVE-2015-8364 and CVE-2015-8365. (Closes: #806519)
+  * Respect CC and CXX from the environment in debian/rules.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sat, 28 Nov 2015 11:39:49 +0100
+
+ffmpeg (7:2.8.2-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.8.2.
+     - videodsp: don't overread edges in vfix3 emu_edge. (Closes: #801745)
+  * Drop avcodec-vp8-Do-not-use-num_coeff_partitions-in-thread.patch
+    included upstream.
+  * Use system bootstrap for ffmpeg-doc.
+  * Remove now unused bootstrap sources.
+  * Add build-profile support for stage1, disabling frei0r, opencv and x264.
+  * Drop now unnecessary embedded-library lintian-overrides.
+  * Re-enable libdc1394 on sparc64, as libudev is working again.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Thu, 12 Nov 2015 23:58:49 +0100
+
+ffmpeg (7:2.8.1-1) unstable; urgency=medium
+
+  [ Balint Reczey ]
+  * Add myself to uploaders.
+
+  [ Andreas Cadhalpun ]
+  * Import new upstream bugfix release 2.8.1.
+  * Remove hls-only-seek-if-there-is-an-offset.patch included upstream.
+  * Add avcodec-vp8-Do-not-use-num_coeff_partitions-in-thread.patch to
+    fix CVE-2015-6761.
+  * Enable x264 on mips64el and opencv on alpha.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Thu, 15 Oct 2015 00:26:09 +0200
+
+ffmpeg (7:2.8-1) unstable; urgency=medium
+
+  [ Fabian Greffrath ]
+  * Pass the --dbg-package=ffmpeg-dbg parameter only to dh_strip.
+  * Add alternative Depends: libavcodec-ffmpeg-extra56 to libavcodec-dev and
+    ffmpeg-dbg to allow for building and debugging with this library installed.
+
+  [ Andreas Cadhalpun ]
+  * Import new major upstream release 2.8.
+  * Remove the transitional lib*-ffmpeg-dev packages.
+  * Drop old Breaks on kodi-bin.
+  * Drop workaround for sparc, which is no Debian architecture anymore.
+  * Re-enable x265 on alpha, as it's available again.
+  * Disable unavailable frei0r, opencv and x264 on mips64el.
+  * Disable libopenjpeg (#787275) and libschroedinger (#787957) decoders.
+    (Closes: #786670)
+  * Disable libdc1394 on sparc64, because it links against the broken due to
+    #790560 libudev1.
+  * Enable libsnappy support.
+  * Add new symbols.
+  * Update debian/copyright.
+  * Update debian/tests/encdec_list.txt.
+  * Add hls-only-seek-if-there-is-an-offset.patch. (Closes: #798189)
+  * Add 'Breaks: libavutil-ffmpeg54 (>= 8:0)' to the libraries.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Tue, 22 Sep 2015 15:15:20 +0200
+
+ffmpeg (7:2.7.2-2) unstable; urgency=medium
+
+  [ Reinhard Tartler ]
+  * Tighten breaks/replaces on libav-tools. (Closes: #793085)
+  * Take over the libav-tools package.
+
+  [ Andreas Cadhalpun ]
+  * Rename d/libav-tools-links.links to d/libav-tools.links.
+  * Disable libsoxr support to workaround glibc bug #793641.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Mon, 17 Aug 2015 22:45:02 +0200
+
+ffmpeg (7:2.7.2-1) unstable; urgency=medium
+
+  [ Reinhard Tartler ]
+  * Add myself to uploaders.
+  * Merge qt-faststart back into 'ffmpeg'.
+
+  [ Andreas Cadhalpun ]
+  * Upload to unstable.
+  * Import new upstream bugfix release 2.7.2.
+     - Make -xerror with multi-threading more robust. (Closes: #780344)
+  * Enable frei0r, opencv, x264, x265 on x32 and x265 on sparc64.
+  * Disable x264 on sparc64 due to #792921.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Mon, 20 Jul 2015 10:23:49 +0200
+
+ffmpeg (7:2.7.1-2) experimental; urgency=medium
+
+  [ Andreas Cadhalpun ]
+  * Build libavcodec-extra flavor.
+  * Add encdec-extra autopkgtest for the libavcodec-extra flavor.
+  * Add lib*-dev and libav-tools-links packages.
+  * Drop README.Debian.
+  * Remove bogus apng-ffm autopkg test.
+  * Explicitly build-depend on liblzma-dev used by the tiff decoder.
+  * Use the pkg-multimedia repository for the Vcs links.
+  * Use the plain lib*-dev packages for the test dependencies.
+  * Disable libssh on sparc due to #790067.
+  * Remove temporary gdb dependency on sparc64.
+  * Enable openal on sparc64.
+
+  [ Carl Eugen Hoyos ]
+  * Disable x265 on alpha due to #789807.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Thu, 09 Jul 2015 23:42:42 +0200
+
+ffmpeg (7:2.7.1-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.7.1.
+  * Use DEB_LDFLAGS_MAINT_STRIP for removing the Bsymbolic-functions flag.
+  * Use lissh-gcrypt-dev to avoid linking against libssl.
+  * Disable DH_VERBOSE in debian/rules.
+  * Add libavresample-ffmpeg2 and qt-faststart dependencies to ffmpeg-dbg.
+  * Enable opencv and zvbi on m68k, disable opencv on alpha.
+  * Remove unused, optional and private avpriv_emms_yasm from symbols file.
+  * Build an altivec flavor on powerpc.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sun, 21 Jun 2015 23:38:07 +0200
+
+ffmpeg (7:2.7-1) unstable; urgency=medium
+
+  * Import new major upstream release 2.7.
+     - Suggest new mpeg4_unpack_bframes bitstream filter instead of
+       VirtualDub/Avidemux. (Closes: #781510)
+  * Add new symbols.
+  * Change maintainer to the pkg-multimedia team and move myself to uploaders.
+  * Let ffmpeg suggest ffmpeg-doc.
+  * Fix encdec autopkgtest to not fail, when skipping tests.
+  * Restrict shlib-with-non-pic-code lintian override to i386.
+    Thanks to Jakub Wilk for the hint.
+  * Use '-strict -2' in the encdec autopkgtest also for probing/decoding.
+  * Disable loongson3 optimizations on mips, because they are not always
+    available.
+  * Update debian/copyright.
+  * Update debian/tests/encdec_list.txt.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Thu, 11 Jun 2015 00:47:35 +0200
+
+ffmpeg (7:2.6.3-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.6.3.
+  * Don't install the pc-uninstalled directory.
+    It is only useful in the source.
+  * Use 'set -e' in the autopkgtests.
+  * Explicitly build-depend on pkg-config.
+  * Enable gnutls and librtmp on sparc64, libvpx and libsdl on x32 and
+    opencv on powerpcspe, since they are now available.
+  * Disable i686 optimizations on (hurd-)i386, because i586 is still
+    supported.
+  * Temporarily use gdb in sparc64 builds to investigate test failures.
+  * Re-enable assembler optimizations on ppc64el, since they are
+    finally really fixed.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sun, 17 May 2015 22:03:38 +0200
+
+ffmpeg (7:2.6.2-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.6.2.
+  * Drop build-dependency on bc, the tests use awk since 2.6.
+  * Drop override_dh_strip in debian/rules, because binutils is now built
+    with --enable-deterministic-archives.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sun, 12 Apr 2015 22:51:20 +0200
+
+ffmpeg (7:2.6.1-1) unstable; urgency=medium
+
+  * Import new major upstream release 2.6.1.
+  * Add Breaks and Replaces on libav-tools (<< 6:9~), which shipped ff*
+    symlinks. Thanks to Andreas Beckmann. (Closes: #779664)
+  * Adapt debian/rules to changes in the configure script:
+     - Don't explicitly set shlibdir as it now defaults to libdir.
+     - Drop --disable-mips32r2, which has no effect anymore.
+     - Don't add --disable-mipsfpu on mips64(el) as it should work there.
+  * Enable libx265-dev on sparc, m68k and sh4, where it is now available.
+  * Update debian/missing-sources.
+  * Drop patches included upstream:
+     - configure-use-ar-and-ranlib-in-deterministic-mode-if.patch
+     - stop-embedding-the-build-date.patch
+  * Add new symbols to debian/*.symbols.
+  * Add autopkgtests:
+     - examples: compile the example programs
+     - encdec: test creating/reading files for many codec/format combinations
+  * Update debian/copyright.
+  * Add Breaks on kodi-bin (<= 14.0+dfsg1-1), because it uses internal FFmpeg
+    API, which was changed incompatibly.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Mon, 16 Mar 2015 23:53:34 +0100
+
+ffmpeg (7:2.5.4-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.5.4.
+  * Drop configure-enable-vsx-together-with-altivec-for-ppc64el.patch
+    included upstream.
+  * Add patches making the build binary reproducible.
+  * Stop using faketime.
+  * Correctly handle noopt in DEB_BUILD_OPTIONS.
+  * Disable assembler optimizations on ppc64el, as they don't work yet.
+  * Disable assembler optimizations on mips64(el), as they don't work yet.
+    Thanks to James Cowgill. (Closes: #776649)
+  * Fix dep5-copyright-license-name-not-unique lintian warnings.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sat, 14 Feb 2015 23:14:52 +0100
+
+ffmpeg (7:2.5.3-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.5.3.
+  * Add new av_*_ffversion symbols to the symbols files.
+  * Let the test suite continue after the first error.
+  * Update copyright year for debian packaging.
+  * Re-enable assembler optimizations on armel.
+  * Enable x265 on powerpcspe, as it's now available there.
+  * Add configure-enable-vsx-together-with-altivec-for-ppc64el.patch to fix
+    test failures on ppc64el.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sat, 10 Jan 2015 11:36:54 +0100
+
+ffmpeg (7:2.5.1-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.5.1.
+  * Enable assembler optimizations on ppc64el. They should work now.
+  * Enable rtmp on powerpcspe, x265 on hppa and zvbi on hurd and kfreebsd,
+    as they are now available there.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Tue, 16 Dec 2014 01:20:40 +0100
+
+ffmpeg (7:2.5-1) unstable; urgency=medium
+
+  * Import new major upstream release 2.5.
+  * Update debian/copyright.
+  * Add new symbols to the symbols files.
+  * Disable rtmp on powerpcspe and sparc64 as librtmp-dev is currently
+    uninstallable there.
+  * Disable opencv on powerpcspe, as it is currently uninstallable.
+  * Enable x265 on mips, mipsel and powerpc, as it's now available there.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sat, 06 Dec 2014 14:07:28 +0100
+
+ffmpeg (7:2.4.4-1) unstable; urgency=medium
+
+  * New upstream bugfix release 2.4.4.
+  * Drop fix-hppa-tests.patch included upstream.
+  * Do not enable gnutls on sparc64 and libzvbi on m68k, because they are
+    not available there. Thanks to Carl Eugen Hoyos.
+  * Do not enable libsdl and libvpx on x32, because they are not available.
+  * Add explicit build-dependencies on libfontconfig1-dev, libfreetype6-dev,
+    libgl1-mesa-dev, libpulse-dev and libxext-dev.
+  * Add build-dependency on libx265-dev on the architectures, where it is
+    already available.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Wed, 03 Dec 2014 00:29:36 +0100
+
+ffmpeg (7:2.4.3-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.4.3.
+     - Refresh Change-symbol-versioning.patch.
+     - Add new symbols to the libavdevice symbols file.
+  * Enable libbs2b on arm64, since it is now available.
+  * Disable frei0r and libx264 on x32, libsoxr and openal on sparc64
+    and libopencv on m68k, sh4, sparc64 and x32, because they are not
+    (yet) avialable there.
+  * Disable assembler optimizations on x32, as they wouldn't work there.
+  * Include config.log in the build-log, when compiling fails.
+  * Add fix-hppa-tests.patch to work around a gcc bug on hppa.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Wed, 05 Nov 2014 01:18:23 +0100
+
+ffmpeg (7:2.4.2-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.4.2.
+  * Drop tests_Cat-err-file-in-case-of-error.patch included upstream.
+  * Disable assembler optimizations on armel to fix the tests.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Mon, 06 Oct 2014 21:13:39 +0200
+
+ffmpeg (7:2.4.1-1) unstable; urgency=medium
+
+  * Import new upstream bugfix release 2.4.1.
+  * Drop patches included upstream:
+     - avcodec-x86-vp9lpf_Always-include-x86util.asm.patch
+     - fix-build-when-AV_READ_TIME-is-unavailable.patch
+     - vf_deshake-rename-Transform.vector-to-Transform.vec.patch
+  * Disable Altivec on powerpc to fix test failures.
+  * Cherry-pick tests_Cat-err-file-in-case-of-error.patch to ease debugging
+    of test failures.
+  * Add Breaks and Replaces on old ffmpeg packages to qt-faststart.
+  * Disable optimizations on mips(el) to fix test failures.
+  * Don't enable libbs2b on arm64, because it is not (yet) available there.
+  * Disable assembler optimizations on ppc64el to (hopefully) fix the tests.
+  * Upload to unstable.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Fri, 26 Sep 2014 21:58:10 +0200
+
+ffmpeg (7:2.4-2) experimental; urgency=medium
+
+  * Cherrypick patches from upstream:
+     - fix-build-when-AV_READ_TIME-is-unavailable.patch:
+       This fixes building on armel, mipsel and s390x.
+     - vf_deshake-rename-Transform.vector-to-Transform.vec.patch:
+       This fixes building on powerpc and ppc64el.
+     - avcodec-x86-vp9lpf_Always-include-x86util.asm.patch:
+       This fixes the executable stack lintian warning for libavcodec on i386.
+  * Add lintian overrides for shlib-with-non-pic-code on i386, where non-PIC
+    code is allowed.
+  * Don't enable opencl, because it is considered experimental.
+  * Bump policy to 3.9.6 (no changes required).
+  * Mark ffmpeg-doc as Multi-Arch: foreign.
+  * Install the headers in the triplet subdirectory of /usr/include.
+    This is necessary, because some headers (e.g. libavutil/avconfig.h)
+    are architecture-dependant.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Thu, 18 Sep 2014 21:54:12 +0200
+
+ffmpeg (7:2.4-1) experimental; urgency=medium
+
+  * Import new major upstream release 2.4. (Closes: #729203)
+     - Fixes CVE-2014-5271: proresenc_ks: fix buffer overflow
+     - Fixes CVE-2014-5272: iff: fix out of array access
+     - The non-free image tests/lena.pnm is not shipped anymore.
+  * Switch Vcs-Browser to the cgit interface.
+  * In the development packages add symbolic links from the standard lib*.so
+    library names to the suffixed ones.
+    This makes it possible to use the normal linker flags, e.g. '-lavcodec',
+    to link against the FFmpeg libraries with '-ffmpeg' suffix.
+  * Add missing copyright holders/years to debian/copyright.
+  * Fix wildcard-matches-nothing-in-dep5-copyright lintian warnings.
+  * Add qt-faststart to the Recommends: of the ffmpeg binary package.
+  * Configure with --enable-libshine, since libshine >= 3.0.0 is now available
+    in Debian.
+  * Drop pkg-config_file_without_build_suffix.patch and instead create symlinks
+    from the lib*.pc files to the suffixed lib*-ffmpeg.pc files.
+  * Install similar symlinks for the static libraries.
+  * Don't hardcode default.css as CSS filename in debian/ffmpeg-doc.install.
+  * Drop patches included upstream:
+     - makeinfo.patch
+     - Fix-spelling.patch
+  * Update Change-symbol-versioning.patch.
+  * Adapt the packaging to the changed library soversions.
+  * Generalize ffmpeg.lintian-overrides with wildcards.
+  * Add debian/missing-sources with the sources of the minified CSS files in
+    the upstream tarball.
+  * Create the minified CSS files during package build instead of using the
+    ones shipped in the tarball.
+    For this add cleancss and node-less to Build-Depends-Indep.
+  * Update debian/copyright.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sun, 14 Sep 2014 23:53:23 +0200
+
+ffmpeg (7:2.3.1-1) experimental; urgency=medium
+
+  * Import new upstream release 2.3.1. (Closes: #729203)
+     - Fix integer overflow in LZO code. (CVE-2014-4610)
+  * Fix FTBFS in Ubuntu caused by the -Bsymbolic-functions linker flag.
+    Thanks to Guillaume Martres for pointing out the fix that Fabian Greffrath
+    created for the Libav package.
+  * Don't ignore test failures anymore, since gcc-4.9 has been fixed to
+    compile FFmpeg correctly. (see #746944)
+  * Enable libdc1394 only on linux. This fixes FTBFS on !linux-any.
+  * Use wildcards instead of multiarch paths and sonames in lintian
+    overrides.
+  * Fix building on hurd (patch included upstream in 2.2.3).
+  * Improve the description of the debug package.
+  * Drop fix-tests.patch. Instead export the LD_LIBRARY_PATH in debian/rules.
+  * Improve the comment in debian/copyright, explaining the effective license
+    of the binary packages.
+  * Change 'Comments:' to the correct 'Comment:' in debian/copyright.
+  * Add some missing files to debian/copyright.
+  * Call the upstream Makefile from debian/rules to build the apidoc
+    instead of calling the doxy-wrapper directly.
+  * Add _FFMPEG to the symbol versions of the libraries to ensure that there
+    is no confusion, if a binary is linked against FFmpeg and another shared
+    library, which is linked against Libav.
+  * Update patches to apply cleanly to 2.3.
+  * Add new symbols to the .symbols files.
+  * Update lintian overrides.
+  * Include config.log in the build-log, when configure fails.
+  * Add libgnutls28-dev build-dependency, which was previously pulled in as
+    a dependency of another build-dependency.
+  * Install the release notes into /usr/share/doc/ffmpeg.
+  * Add build-dependencies and enable in debian/rules:
+     - libbs2b
+     - libfribidi
+  * Update debian/copyright.
+  * Update the dependencies of the *-dev packages.
+  * Use packaged libjs-jquery instead of the jquery created by doxygen.
+  * Add Fix-spelling patch to fix spelling errors.
+  * Mark architecture-dependent symbols as optional.
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Sat, 09 Aug 2014 14:00:38 +0200
+
+ffmpeg (7:2.2.1-1) experimental; urgency=medium
+
+  * Reintroduce FFmpeg to Debian. (Closes: #729203)
+    There are far to many changes since FFmpeg 0.5 to mention them here, see:
+        https://git.videolan.org/?p=ffmpeg.git;a=shortlog;h=n2.2.1
+    Many security issues have been fixed as well, see:
+        https://ffmpeg.org/security.html
+    Among them are:
+     - 0.5: CVE-2008-4610
+     - 0.10: CVE-2011-3941, CVE-2011-3944, CVE-2011-3934, CVE-2011-3946
+     - 0.11: CVE-2012-5359, CVE-2012-5360, CVE-2012-5361
+     - 1.1: CVE-2012-6618, CVE-2013-0844, CVE-2013-0846, CVE-2013-0848,
+            CVE-2013-0849, CVE-2013-0850, CVE-2013-0854, CVE-2013-0856,
+            CVE-2013-0858
+     - 1.1.1: CVE-2013-0860
+     - 1.1.2: CVE-2013-0865, CVE-2013-0867, CVE-2013-0868, CVE-2013-0869
+     - 1.1.3: CVE-2013-0873, CVE-2013-2277
+     - 1.2: CVE-2012-5150, CVE-2013-0894, CVE-2013-2495, CVE-2013-2496
+     - 2.0: CVE-2013-3670, CVE-2013-3672
+     - 2.1: CVE-2013-7009, CVE-2013-7010, CVE-2013-7011, CVE-2013-7015,
+            CVE-2013-7020
+     - 2.1.4: CVE-2014-2263
+
+ -- Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>  Wed, 07 May 2014 16:40:18 +0200
diff --git a/debian/compat b/debian/compat
new file mode 100644
index 0000000000..f599e28b8a
--- /dev/null
+++ b/debian/compat
@@ -0,0 +1 @@
+10
diff --git a/debian/control b/debian/control
new file mode 100644
index 0000000000..57240141ba
--- /dev/null
+++ b/debian/control
@@ -0,0 +1,782 @@
+Source: ffmpeg
+Section: video
+Priority: optional
+Maintainer: Debian Multimedia Maintainers <pkg-multimedia-maintainers@lists.alioth.debian.org>
+Uploaders: Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>,
+ Alexander Strasser <eclipse7@gmx.net>,
+ Reinhard Tartler <siretart@tauware.de>,
+ Balint Reczey <balint@balintreczey.hu>,
+ James Cowgill <jcowgill@debian.org>
+Rules-Requires-Root: no
+Homepage: https://ffmpeg.org/
+Standards-Version: 4.1.2
+Vcs-Git: https://anonscm.debian.org/git/pkg-multimedia/ffmpeg.git
+Vcs-Browser: https://anonscm.debian.org/cgit/pkg-multimedia/ffmpeg.git
+Build-Depends-Indep:
+# needed to minify the CSS files
+ cleancss,
+# Autogenerated documentation
+ doxygen,
+# needed to create the CSS files for the HTML manuals
+ node-less
+Build-Depends:
+# needed for dh
+ debhelper (>= 10),
+# for build-profile support
+ dpkg-dev (>= 1.17.14),
+# --enable-libflite
+ flite1-dev,
+# --enable-frei0r
+ frei0r-plugins-dev <!stage1>,
+# --enable-ladspa
+ ladspa-sdk,
+# --enable-libass
+ libass-dev,
+# --enable-libbluray
+ libbluray-dev,
+# --enable-libbs2b
+ libbs2b-dev,
+# autodetected: external library 'bzlib'
+ libbz2-dev,
+# --enable-libcaca
+ libcaca-dev,
+# --enable-libcdio
+ libcdio-paranoia-dev,
+# --enable-libchromaprint
+ libchromaprint-dev <!stage1>,
+# autodetected 'crystalhd'
+ libcrystalhd-dev [amd64 i386],
+# --enable-libdc1394
+ libdc1394-22-dev [linux-any],
+# --enable-libdrm
+ libdrm-dev [linux-any],
+# --enable-libfontconfig
+ libfontconfig1-dev,
+# --enable-libfreetype
+ libfreetype6-dev,
+# --enable-fribidi
+ libfribidi-dev,
+# --enable-opengl
+ libgl1-mesa-dev,
+# --enable-libgme
+ libgme-dev,
+# --enable-gnutls
+ libgnutls28-dev | libgnutls-dev,
+# --enable-libgsm
+ libgsm1-dev,
+# Fails to be detected by configure script, if not also libavc1394-dev is installed.
+# --enable-libiec61883
+ libiec61883-dev [linux-any],
+ libavc1394-dev [linux-any],
+# autodetected: indev 'jack'
+ libjack-jackd2-dev,
+# missing dependency of libtesseract-dev #836849
+ libleptonica-dev,
+# autodetected for the tiff decoder
+ liblzma-dev,
+# --enable-libmp3lame
+ libmp3lame-dev,
+# --enable-libmysofa
+ libmysofa-dev,
+# --enable-openal
+ libopenal-dev,
+# --enable-omx
+ libomxil-bellagio-dev,
+# --enable-libopencore_amrnb
+ libopencore-amrnb-dev,
+# --enable-libopencore_amrwb
+ libopencore-amrwb-dev,
+# --enable-libopencv
+ libopencv-imgproc-dev <!stage1>,
+# --enable-libopenjpeg
+ libopenjp2-7-dev,
+# --enable-libopenmpt
+ libopenmpt-dev,
+# --enable-libopus
+ libopus-dev,
+# --enable-libpulse
+ libpulse-dev,
+# --enable-librubberband
+ librubberband-dev,
+# --enable-librsvg
+ librsvg2-dev,
+# autodetected: protocol 'sctp'
+ libsctp-dev [linux-any],
+# --enable-sdl2
+ libsdl2-dev,
+# --enable-libshine
+ libshine-dev (>= 3.0.0),
+# --enable-libsnappy
+ libsnappy-dev,
+# --enable-libsoxr
+ libsoxr-dev,
+# --enable-libspeex
+ libspeex-dev,
+# --enable-libssh
+ libssh-gcrypt-dev,
+# --enable-libtesseract (used only in -extra flavor)
+ libtesseract-dev,
+# --enable-libtheora
+ libtheora-dev,
+# --enable-libtwolame
+ libtwolame-dev,
+# This is not necessary, see explanation in debian/rules.
+# # --enable-libv4l2
+# libv4l-dev [!hurd-any],
+# autodetected: hwaccels 'h263_vaapi, mpeg2_vaapi, vc1_vaapi, h264_vaapi, mpeg4_vaapi, wmv3_vaapi'
+ libva-dev [!hurd-any],
+# autodetected: hwaccels 'h263_vdpau, mpeg2_vdpau, vc1_vdpau, h264_vdpau, mpeg4_vdpau, wmv3_vdpau, mpeg1_vdpau', decoders 'h264_vdpau, mpeg1_vdpau, mpeg4_vdpau, mpeg_vdpau, vc1_vdpau, wmv3_vdpau'
+ libvdpau-dev,
+# --enable-libvo_amrwbenc
+ libvo-amrwbenc-dev,
+# --enable-libvorbis
+ libvorbis-dev,
+# --enable-libvpx
+ libvpx-dev,
+# --enable-libwavpack
+ libwavpack-dev,
+# --enable-libwebp
+ libwebp-dev,
+# --enable-libx264
+ libx264-dev <!stage1>,
+# --enable-libx265
+ libx265-dev (>= 1.8),
+# autodetected libxcb-shape
+ libxcb-shape0-dev,
+# autodetected libxcb-shm
+ libxcb-shm0-dev,
+# autodetected libxcb-xfixes
+ libxcb-xfixes0-dev,
+# --enable-libxml2
+ libxml2-dev,
+# autodetected xlib
+ libxv-dev,
+# --enable-libxvid
+ libxvidcore-dev,
+# autodetected: decoder 'mpeg_xvmc'; outdev 'xv'
+ libxvmc-dev,
+# --enable-libzmq
+ libzmq3-dev,
+# --enable-libzvbi
+ libzvbi-dev,
+# The opencl API is considered experimental.
+# # --enable-opencl
+# ocl-icd-opencl-dev [!hurd-any] | opencl-dev [!hurd-any],
+# used to detect libraries
+ pkg-config,
+# HTML documentation
+ texinfo,
+# assembler optimizations
+ nasm,
+# autodetected zlib
+ zlib1g-dev
+
+Package: ffmpeg
+Architecture: any
+Multi-Arch: foreign
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Suggests:
+ ffmpeg-doc
+Breaks: libav-tools (<< 6:12~~),
+ qt-faststart (<< 7:2.7.1-3~)
+Replaces: libav-tools (<< 6:12~~),
+ qt-faststart (<< 7:2.7.1-3~)
+Description: Tools for transcoding, streaming and playing of multimedia files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This package contains:
+  * ffmpeg: a command line tool to convert multimedia files between formats
+  * ffserver: a multimedia streaming server for live broadcasts
+  * ffplay: a simple media player based on SDL and the FFmpeg libraries
+  * ffprobe: a simple multimedia stream analyzer
+  * qt-faststart: a utility to rearrange Quicktime files
+
+Package: ffmpeg-doc
+Section: doc
+Architecture: all
+Multi-Arch: foreign
+Depends:
+ libjs-jquery,
+ libjs-bootstrap,
+ ${misc:Depends}
+Description: Documentation of the FFmpeg multimedia framework
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This package contains the HTML documentation for the FFmpeg multimedia
+ framework including the API documentation created by doxygen and the manpages
+ for the libraries.
+
+Package: libavcodec57
+Architecture: any
+Section: libs
+Multi-Arch: same
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg library with de/encoders for audio/video codecs - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic encoding/decoding framework and
+ contains multiple decoders and encoders for audio, video and subtitle streams,
+ and several bitstream filters.
+ .
+ The shared architecture provides various services ranging from bit stream I/O
+ to DSP optimizations, and makes it suitable for implementing robust and fast
+ codecs as well as for experimentation.
+ .
+ This package contains the runtime files.
+
+Package: libavcodec-extra57
+Architecture: any
+Section: libs
+Multi-Arch: same
+Conflicts: libavcodec57
+Provides: libavcodec-extra
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg library with additional de/encoders for audio/video codecs
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic encoding/decoding framework and
+ contains multiple decoders and encoders for audio, video and subtitle streams,
+ and several bitstream filters.
+ .
+ The shared architecture provides various services ranging from bit stream I/O
+ to DSP optimizations, and makes it suitable for implementing robust and fast
+ codecs as well as for experimentation.
+ .
+ This package replaces the libavcodec57 package and contains the
+ following additional codecs:
+ .
+  * OpenCORE Adaptive Multi-Rate (AMR) Narrow-Band (Encoder/Decoder)
+  * OpenCORE Adaptive Multi-Rate (AMR) Wide-Band (Decoder)
+  * Android VisualOn Adaptive Multi-Rate (AMR) Wide-Band (Encoder)
+ .
+ Because this package links against libraries that are licensed under
+ Apache License 2.0, the resulting binaries are distributed under the
+ GPL version 3 or later.
+
+Package: libavcodec-extra
+Architecture: all
+Section: metapackages
+Multi-Arch: foreign
+Depends:
+ libavcodec-extra57,
+ ${misc:Depends}
+Description: FFmpeg library with extra codecs (metapackage)
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This metapackage depends on the latest version of the libavcodec variant
+ that offers additional codec support. Application packages can depend
+ on it if they require or suggest this variant in a robust manner.
+
+
+Package: libavcodec-dev
+Architecture: any
+Section: libdevel
+Multi-Arch: same
+Depends:
+ libavcodec57 (= ${binary:Version}) | libavcodec-extra57 (= ${binary:Version}),
+ libavutil-dev (= ${binary:Version}),
+ libswresample-dev (= ${binary:Version}),
+ ${misc:Depends}
+Description: FFmpeg library with de/encoders for audio/video codecs - development files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic encoding/decoding framework and
+ contains multiple decoders and encoders for audio, video and subtitle streams,
+ and several bitstream filters.
+ .
+ The shared architecture provides various services ranging from bit stream I/O
+ to DSP optimizations, and makes it suitable for implementing robust and fast
+ codecs as well as for experimentation.
+ .
+ This package contains the development files.
+
+Package: libavdevice57
+Architecture: any
+Section: libs
+Multi-Arch: same
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg library for handling input and output devices - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic framework for grabbing from and rendering to
+ many common multimedia input/output devices, and supports several input and
+ output devices, including Video4Linux2, VfW, DShow, and ALSA.
+ .
+ This package contains the runtime files.
+
+Package: libavdevice-dev
+Architecture: any
+Section: libdevel
+Multi-Arch: same
+Depends:
+ libavcodec-dev (= ${binary:Version}),
+ libavdevice57 (= ${binary:Version}),
+ libavfilter-dev (= ${binary:Version}),
+ libavformat-dev (= ${binary:Version}),
+ libavresample-dev (= ${binary:Version}),
+ libavutil-dev (= ${binary:Version}),
+ libpostproc-dev (= ${binary:Version}),
+ libswscale-dev (= ${binary:Version}),
+ libswresample-dev (= ${binary:Version}),
+ ${misc:Depends}
+Description: FFmpeg library for handling input and output devices - development files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic framework for grabbing from and rendering to
+ many common multimedia input/output devices, and supports several input and
+ output devices, including Video4Linux2, VfW, DShow, and ALSA.
+ .
+ This package contains the development files.
+
+Package: libavfilter6
+Architecture: any
+Section: libs
+Multi-Arch: same
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg library containing media filters - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic audio/video filtering framework containing
+ several filters, sources and sinks.
+ .
+ This package contains the runtime files.
+
+Package: libavfilter-extra6
+Architecture: any
+Section: libs
+Multi-Arch: same
+Conflicts: libavfilter6
+Provides: libavfilter-extra
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg library with extra media filters - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic audio/video filtering framework containing
+ several filters, sources and sinks.
+ .
+ This package replaces the libavfilter6 package and contains the
+ following additional filters:
+ .
+  * Optical Character Recognition (uses Tesseract)
+  * SOFAlizer (Spatially Oriented Format for Acoustics, uses netcdf)
+ .
+ Because this package links against libraries that are licensed under
+ Apache License 2.0, the resulting binaries are distributed under the
+ GPL version 3 or later.
+
+Package: libavfilter-extra
+Architecture: all
+Section: metapackages
+Multi-Arch: foreign
+Depends:
+ libavfilter-extra6,
+ ${misc:Depends}
+Description: FFmpeg library with extra filters (metapackage)
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This metapackage depends on the latest version of the libavfilter variant
+ that offers additional filter support. Application packages can depend
+ on it if they require or suggest this variant in a robust manner.
+
+Package: libavfilter-dev
+Architecture: any
+Section: libdevel
+Multi-Arch: same
+Depends:
+ libavcodec-dev (= ${binary:Version}),
+ libavfilter6 (= ${binary:Version}) | libavfilter-extra6 (= ${binary:Version}),
+ libavformat-dev (= ${binary:Version}),
+ libavresample-dev (= ${binary:Version}),
+ libavutil-dev (= ${binary:Version}),
+ libpostproc-dev (= ${binary:Version}),
+ libswresample-dev (= ${binary:Version}),
+ libswscale-dev (= ${binary:Version}),
+ ${misc:Depends}
+Description: FFmpeg library containing media filters - development files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic audio/video filtering framework containing
+ several filters, sources and sinks.
+ .
+ This package contains the development files.
+
+Package: libavformat57
+Architecture: any
+Section: libs
+Multi-Arch: same
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg library with (de)muxers for multimedia containers - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic framework for multiplexing and demultiplexing
+ (muxing and demuxing) audio, video and subtitle streams. It encompasses
+ multiple muxers and demuxers for multimedia container formats. It also
+ supports several input and output protocols to access a media resource.
+ .
+ This package contains the runtime files.
+
+Package: libavformat-dev
+Architecture: any
+Section: libdevel
+Multi-Arch: same
+Depends:
+ libavcodec-dev (= ${binary:Version}),
+ libavformat57 (= ${binary:Version}),
+ libavutil-dev (= ${binary:Version}),
+ libswresample-dev (= ${binary:Version}),
+ ${misc:Depends}
+Description: FFmpeg library with (de)muxers for multimedia containers - development files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides a generic framework for multiplexing and demultiplexing
+ (muxing and demuxing) audio, video and subtitle streams. It encompasses
+ multiple muxers and demuxers for multimedia container formats. It also
+ supports several input and output protocols to access a media resource.
+ .
+ This package contains the development files.
+
+Package: libavresample3
+Architecture: any
+Section: libs
+Multi-Arch: same
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg compatibility library for resampling - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library is provided for compatibility reasons only.
+ The FFmpeg project advises to use libswresample instead.
+ .
+ This package contains the runtime files.
+
+Package: libavresample-dev
+Architecture: any
+Section: libdevel
+Multi-Arch: same
+Depends:
+ libavutil-dev (= ${binary:Version}),
+ libavresample3 (= ${binary:Version}),
+ ${misc:Depends}
+Description: FFmpeg compatibility library for resampling - development files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library is provided for compatibility reasons only.
+ The FFmpeg project advises to use libswresample instead.
+ .
+ This package contains the development files.
+
+Package: libavutil55
+Architecture: any
+Section: libs
+Multi-Arch: same
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Breaks:
+ libavcodec57 (<< 7:3.4),
+ libavcodec-extra57 (<< 7:3.4),
+ libavfilter6 (<< 7:3.4),
+ libavfilter-extra6 (<< 7:3.4)
+Description: FFmpeg library with functions for simplifying programming - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library is a utility library to aid portable multimedia programming.
+ It contains safe portable string functions, random number generators, data
+ structures, additional mathematics functions, cryptography and multimedia
+ related functionality (like enumerations for pixel and sample formats).
+ It is not a library for code needed by both libavcodec and libavformat.
+ The goal for this library is to be modular, small, efficient and useful.
+ .
+ This package contains the runtime files.
+
+Package: libavutil-dev
+Architecture: any
+Section: libdevel
+Multi-Arch: same
+Depends:
+ libavutil55 (= ${binary:Version}),
+ ${misc:Depends}
+Description: FFmpeg library with functions for simplifying programming - development files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library is a utility library to aid portable multimedia programming.
+ It contains safe portable string functions, random number generators, data
+ structures, additional mathematics functions, cryptography and multimedia
+ related functionality (like enumerations for pixel and sample formats).
+ It is not a library for code needed by both libavcodec and libavformat.
+ The goal for this library is to be modular, small, efficient and useful.
+ .
+ This package contains the development files.
+
+Package: libpostproc54
+Architecture: any
+Section: libs
+Multi-Arch: same
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg library for post processing - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides video post processing.
+ .
+ This package contains the runtime files.
+
+Package: libpostproc-dev
+Architecture: any
+Section: libdevel
+Multi-Arch: same
+Depends:
+ libavutil-dev (= ${binary:Version}),
+ libpostproc54 (= ${binary:Version}),
+ ${misc:Depends}
+Description: FFmpeg library for post processing - development files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides video post processing.
+ .
+ This package contains the development files.
+
+Package: libswresample2
+Architecture: any
+Section: libs
+Multi-Arch: same
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg library for audio resampling, rematrixing etc. - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides performs highly optimized audio resampling, rematrixing
+ and sample format conversion operations.
+ Specifically, this library performs the following conversions:
+  * Resampling is the process of changing the audio rate, for example from a
+    high sample rate of 44100Hz to 8000Hz. Audio conversion from high to low
+    sample rate is a lossy process. Several resampling options and algorithms
+    are available.
+  * Rematrixing is the process of changing the channel layout, for example from
+    stereo to mono. When the input channels cannot be mapped to the output
+    streams, the process is lossy, since it involves different gain factors
+    and mixing. Various other audio conversions (e.g. stretching and padding)
+    are enabled through dedicated options.
+  * Format conversion is the process of converting the type of samples, for
+    example from 16-bit signed samples to unsigned 8-bit or float samples.
+    It also handles packing conversion, when passing from packed layout (all
+    samples belonging to distinct channels interleaved in the same buffer), to
+    planar layout (all samples belonging to the same channel stored in a
+    dedicated buffer or "plane").
+ .
+ This package contains the runtime files.
+
+Package: libswresample-dev
+Architecture: any
+Section: libdevel
+Multi-Arch: same
+Depends:
+ libavutil-dev (= ${binary:Version}),
+ libswresample2 (= ${binary:Version}),
+ ${misc:Depends}
+Description: FFmpeg library for audio resampling, rematrixing etc. - development files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library provides performs highly optimized audio resampling, rematrixing
+ and sample format conversion operations.
+ Specifically, this library performs the following conversions:
+  * Resampling is the process of changing the audio rate, for example from a
+    high sample rate of 44100Hz to 8000Hz. Audio conversion from high to low
+    sample rate is a lossy process. Several resampling options and algorithms
+    are available.
+  * Rematrixing is the process of changing the channel layout, for example from
+    stereo to mono. When the input channels cannot be mapped to the output
+    streams, the process is lossy, since it involves different gain factors
+    and mixing. Various other audio conversions (e.g. stretching and padding)
+    are enabled through dedicated options.
+  * Format conversion is the process of converting the type of samples, for
+    example from 16-bit signed samples to unsigned 8-bit or float samples.
+    It also handles packing conversion, when passing from packed layout (all
+    samples belonging to distinct channels interleaved in the same buffer), to
+    planar layout (all samples belonging to the same channel stored in a
+    dedicated buffer or "plane").
+ .
+ This package contains the development files.
+
+Package: libswscale4
+Architecture: any
+Section: libs
+Multi-Arch: same
+Pre-Depends:
+ ${misc:Pre-Depends}
+Depends:
+ ${shlibs:Depends},
+ ${misc:Depends}
+Description: FFmpeg library for image scaling and various conversions - runtime files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library performs highly optimized image scaling and colorspace and pixel
+ format conversion operations.
+ Specifically, this library performs the following conversions:
+  * Rescaling is the process of changing the video size. Several rescaling
+    options and algorithms are available. This is usually a lossy process.
+  * Pixel format conversion is the process of converting the image format and
+    colorspace of the image, for example from planar YUV420P to RGB24 packed.
+    It also handles packing conversion, that is converts from packed layout
+    (all pixels belonging to distinct planes interleaved in the same buffer),
+    to planar layout (all samples belonging to the same plane stored in a
+    dedicated buffer or "plane"). This is usually a lossy process in case the
+    source and destination colorspaces differ.
+ .
+ This package contains the runtime files.
+
+Package: libswscale-dev
+Architecture: any
+Section: libdevel
+Multi-Arch: same
+Depends:
+ libavutil-dev (= ${binary:Version}),
+ libswscale4 (= ${binary:Version}),
+ ${misc:Depends}
+Description: FFmpeg library for image scaling and various conversions - development files
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This library performs highly optimized image scaling and colorspace and pixel
+ format conversion operations.
+ Specifically, this library performs the following conversions:
+  * Rescaling is the process of changing the video size. Several rescaling
+    options and algorithms are available. This is usually a lossy process.
+  * Pixel format conversion is the process of converting the image format and
+    colorspace of the image, for example from planar YUV420P to RGB24 packed.
+    It also handles packing conversion, that is converts from packed layout
+    (all pixels belonging to distinct planes interleaved in the same buffer),
+    to planar layout (all samples belonging to the same plane stored in a
+    dedicated buffer or "plane"). This is usually a lossy process in case the
+    source and destination colorspaces differ.
+ .
+ This package contains the development files.
+
+Package: libav-tools
+Architecture: all
+Section: oldlibs
+Multi-Arch: foreign
+Breaks: libav-tools-links (<< 7:2.7.2-2~)
+Replaces: libav-tools-links (<< 7:2.7.2-2~)
+Depends:
+ ffmpeg,
+ ${misc:Depends}
+Description: Compatibility links for libav-tools (transitional package)
+ FFmpeg is the leading multimedia framework, able to decode, encode, transcode,
+ mux, demux, stream, filter and play pretty much anything that humans and
+ machines have created. It supports the most obscure ancient formats up to the
+ cutting edge.
+ .
+ This is a transitional package that provides the following links:
+  * avconv  -> ffmpeg
+  * avplay  -> ffplay
+  * avprobe -> ffprobe
+ This package can be removed, when nothing uses the av* program names anymore.
diff --git a/debian/copyright b/debian/copyright
new file mode 100644
index 0000000000..8d3c3f5958
--- /dev/null
+++ b/debian/copyright
@@ -0,0 +1,1132 @@
+Format: https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/
+Upstream-Name: FFmpeg
+Upstream-Contact: ffmpeg-devel@ffmpeg.org
+Source: https://ffmpeg.org
+Comment:
+ Most files in FFmpeg are licensed under the GNU Lesser General Public License
+ version 2.1 or later (LGPL v2.1+), but some optional parts of FFmpeg are
+ licensed under the GNU General Public License version 2 or later (GPL v2+)
+ and a few have different, but compatible licenses.
+ .
+ For building the default Debian packages some of the GPL licensed files are used,
+ so the resulting binaries are licensed under GPL v2+.
+ For libavcodec/libavfilter an extra flavor is built, which links against external
+ libraries licensed under the Apache License 2.0, which makes it effectively licensed
+ under the GPL v3+
+ The HTML documentation /usr/share/doc/ffmpeg/manual/*.html in the ffmpeg-doc
+ package is effectively licensed under GPL-3+, because during its creation
+ the GPL-3+ licensed file doc/t2h.pm is used.
+ .
+ FFmpeg can also be combined with non-free libraries, which would make the
+ resulting binaries unredistributable.
+ But this is not done for the Debian packages.
+
+Files: *
+Copyright:
+  Christian Holschuh
+  Sebastien Bechet <s.bechet@av7.net>
+  1990, James Ashton - Sydney University
+  1993, Computer Science, Speech Group
+  1994-2012, the Xiph.Org Foundation and contributors
+  1997-1999, H. Dietz
+  1997-1999, R. Fisher
+  1998-2009, Conifer Software
+  1999, Intel Corporation
+  1999, Nick Bailey
+  1999, Roger Hardiman
+  1999-2000, Sebastien Rougeaux <sebastien.rougeaux@anu.edu.au>
+  1999-2001, Chris Bagwell <cbagwell@sprynet.com>
+  2000, Chris Ausbrooks <weed@bucket.pp.ualr.edu>
+  2000, Fabien COELHO <fabien@coelho.net>
+  2000, John Walker
+  2000-2001, Michel Lespinasse <walken@zoy.org>
+  2000-2001, Peter Gubanov <peter@elecard.net.ru>
+  2000-2003, Nick Kurshev <nickols_k@mail.ru>
+  2000-2010, Fabrice Bellard
+  2001, Dan Dennedy <dan@dennedy.org>
+  2001, Heikki Leinonen
+  2001, Juan J. Sierralta P
+  2001, Lionel Ulmer
+  2001, Tim Ferguson
+  2001-2003, BERO <bero@geocities.co.jp>
+  2001-2006, Daniel Maas <dmaas@dcine.com> <dmaas@maasdigital.com>
+  2001-2010, Krzysztof Foltman, Markus Schmidt, Thor Harald Johansen, Damien Zammit, Vladimir Sadovnikov and others
+  2001-2014, Peter Ross <pross@xvid.org>
+  2001-2016, Michael Niedermayer <michaelni@gmx.at>
+  2001-2016, The FFmpeg project
+  2002, Anders Johansson <ajh@atri.curtin.edu.au>
+  2002, Brian Foley
+  2002, Dieter Shirley
+  2002, Falk Hueffner <falk@debian.org>
+  2002, Frederic 'dilb' Boulay <dilb@handhelds.org>
+  2002, Gunnar Monell <gmo@linux.nu>
+  2002, Laszlo Torok <torokl@alpha.dfmk.hu>
+  2002, Lennert Buytenhek <buytenh@gnu.org>
+  2002, Mark Hills <mark@pogo.org.uk>
+  2002, Remi Guyomarch <rguyom@pobox.com>
+  2002, Steve O'Hara-Smith
+  2002, The Xine project
+  2002, Zdenek Kabelac <kabi@informatics.muni.cz>
+  2002-2005, Francois Revol <revol@free.fr>
+  2002-2005, Roberto Togni
+  2002-2006, Alex Beregszaszi
+  2002-2013, Maxim Poliakovski
+  2003, Donnie Smith
+  2003, Dr. Tim Ferguson
+  2003, Ewald Snel
+  2003, Gustavo Sverzut Barbieri <gsbarbieri@yahoo.com.br>
+  2003, Ivan Kalvachev
+  2003, James Klicman <james@klicman.org>
+  2003, Max Krasnyansky <maxk@qualcomm.com>
+  2003, Rich Felker
+  2003, Thomas Raivio
+  2003, Tinic Uro
+  2003-2004, Romain Dolbeau <romain@dolbeau.org>
+  2003-2005, Christopher R. Hertel <crh@ubiqx.mn.org>
+  2003-2006, Roman Shaposhnik
+  2003-2007, Michel Bardiaux <mbardiaux@mediaxim.be>
+  2003-2007, Mike Melanson <melanson@pcisys.net>
+  2003-2011, Sascha Sommer <saschasommer@freenet.de>
+  2003-2011, x264 project
+  2003-2014, Loren Merritt <lorenm@u.washington.edu>
+  2003-2014, Pascal Massimino <skal@planet-d.net> <pascal.massimino@gmail.com>
+  2004, AGAWA Koji <i@atty.jp>
+  2004, Adam Thayer <krevnik@comcast.net>
+  2004, Gildas Bazin <gbazin@videolan.org>
+  2004, Maarten Daniels
+  2004-2005, Denes Balatoni <dbalatoni@programozo.hu>
+  2004-2006, Lennart Poettering
+  2004-2007, Benjamin Zores <ben@geexbox.org>
+  2004-2007, Eric Lasota
+  2004-2007, Marc Hoffman <marc.hoffman@analog.com>
+  2004-2014, Konstantin Shishkov <kostya.shishkov@gmail.com>
+  2005, Alban Bedel <albeu@free.fr>
+  2005, Anonymous
+  2005, David Hammerton
+  2005, DivX, Inc
+  2005, Jeff Muizelaar
+  2005, Matthieu CASTET
+  2005, Ole André Vadla Ravnås <oleavr@gmail.com>
+  2005, Roine Gustafsson
+  2005, Steve Underwood <steveu@coppice.org>
+  2005, Vidar Madsen
+  2005, Wim Taymans
+  2005, Zoltan Hidvegi <hzoli@hzoli.com>
+  2005-2006, Oded Shimon <ods15@ods15.dyndns.org>
+  2005-2006, Robert Edele <yartrebo@earthlink.net>
+  2005-2007, Wolfram Gloger
+  2005-2008, Ian Caulfield
+  2005-2011, Benjamin Larsson
+  2005-2012, Måns Rullgård <mans@mansr.com>
+  2005-2013, Diego Biurrun <diego@biurrun.de>
+  2005-2015, Luca Barbato <lu_zero@gentoo.org>
+  2005-2016, Reimar Döffinger <Reimar.Doeffinger@gmx.de>
+  2006, Corey Hickey
+  2006, Cyril Zorin
+  2006, Guillaume Poirier <gpoirier@mplayerhq.hu>
+  2006, Industrial Light & Magic, a division of Lucas Digital Ltd. LLC
+  2006, John Maddock
+  2006, Kartikey Mahendra BHATT <bhattkm@gmail.com>
+  2006, Patrick Guimond
+  2006, Paul Richards <paul.richards@gmail.com>
+  2006, Thijs Vermeir <thijs.vermeir@barco.com>
+  2006-2007, Maxim Gavrilov <maxim.gavrilov@gmail.com>
+  2006-2007, Reynaldo H. Verdejo Pinochet
+  2006-2007, Ryan Martell <rdm4@martellventures.com>
+  2006-2008, Gregory Montoir <cyx@users.sourceforge.net>
+  2006-2009, Luca Abeni <lucabe72@email.it>
+  2006-2009, Robert Swain <rob@opendot.cl>
+  2006-2009, Stefan Gehrer <stefan.gehrer@gmx.de>
+  2006-2010, Aurelien Jacobs <aurel@gnuage.org>
+  2006-2010, Prakash Punnoor <prakash@punnoor.de>
+  2006-2011, Baptiste Coudurier <baptiste.coudurier@free.fr> <baptiste.coudurier@smartjog.com>
+  2006-2011, Xvid Solutions GmbH
+  2006-2012, Rob Sykes <robs@users.sourceforge.net>
+  2006-2013, Justin Ruggles <justin.ruggles@gmail.com>
+  2006-2014, Ramiro Polla <ramiro.polla@gmail.com>
+  2006-2015, Steve Lhomme
+  2007, Alexis Ballier
+  2007, Christian Ohm
+  2007, Clemens Fruhwirth <clemens@endorphin.org>
+  2007, Kamil Nowosad
+  2007, Nicholas Tung
+  2007, Nokia Corporation
+  2007, Philippe Kalaf
+  2007, Richard Spindler
+  2007, Ulion
+  2007-2008, Ivo van Poorten
+  2007-2008, Joseph Artsimovich <jart@users.sourceforge.net>
+  2007-2008, Marco Gerards <marco@gnu.org>
+  2007-2008, Siarhei Siamashka <ssvb@users.sourceforge.net>
+  2007-2008, UAB "DKD
+  2007-2009, Bartlomiej Wolowiec <bartek.wolowiec@gmail.com>
+  2007-2009, Björn Axelsson
+  2007-2010, Bobby Bingham
+  2007-2010, David Conrad <lessen42@gmail.com>
+  2007-2011, Vitor Sessak <vitor1001@gmail.com>
+  2007-2011, Vladimir Voroshilov
+  2007-2013, Anssi Hannula <anssi.hannula@gmail.com> <anssi.hannula@iki.fi>
+  2007-2013, Stefano Sabatini <stefano.sabatini-lala@poste.it> <stefasab@gmail.com>
+  2007-2014, Benoit Fouet <benoit.fouet@free.fr>
+  2007-2015, Christophe GISQUET <christophe.gisquet@free.fr> <word1.word2@gmail.com> <christophe.gisquet@gmail.com>
+  2007-2015, Collabora Ltd
+  2007-2015, Edward Hervey
+  2007-2016, Nicolas George <nicolas.george@normalesup.org>
+  2007-2016, Ronald S. Bultje <rsbultje@gmail.com>
+  2008, Affine Systems, Inc (Michael Sullivan, Bobby Impollonia)
+  2008, Alessandro Sappia
+  2008, BBC, Anuradha Suraparaju <asuraparaju@gmail.com>
+  2008, NVIDIA
+  2008, Robert Marston
+  2008, Sisir Koppaka
+  2008, Victor Paesa
+  2008, vmrsss
+  2008-2009, Andrej Stepanchuk
+  2008-2009, Jaikrishnan Menon <realityman@gmx.net>
+  2008-2009, Splitted-Desktop Systems
+  2008-2010, Alexander Strange <astrange@ithinksw.com>
+  2008-2010, Eli Friedman <eli.friedman@gmail.com>
+  2008-2010, Paul Kendall <paul@kcbbs.gen.nz>
+  2008-2011, Zhentan Feng <spyfeng@gmail.com>
+  2008-2012, Alexander E. Patrakov
+  2008-2012, Laurent Aimar <fenrir@videolan.org>
+  2008-2013, Alex Converse <alex.converse@gmail.com>
+  2009, Colin McQuillan
+  2009, Dylan Yudaken
+  2009, Giliard B. de Freitas <giliarde@gmail.com>
+  2009, Jimmy Christensen
+  2009, Joshua Warner
+  2009, Kenan Gillet
+  2009, Kostya Shishkov
+  2009, Michael Tison
+  2009, Naotoshi Nojiri
+  2009, Nicolas Martin <martinic@iro.umontreal.ca>
+  2009, Peter Holik
+  2009, Samalyse
+  2009, Sebastien Lucas <sebastien.lucas@gmail.com>
+  2009, Stephen Backway
+  2009, Thomas P. Higdon <thomas.p.higdon@gmail.com>
+  2009, Tobias Bindhammer
+  2009, Toshimitsu Kimura
+  2009, Xuggle Incorporated
+  2009, Zuxy Meng <zuxy.meng@gmail.com>
+  2009-2010, Fiona Glaser <fiona@x264.com>
+  2009-2010, Howard Chu
+  2009-2011, Sebastian Gesemann
+  2009-2012, Nathan Caldwell <saintdev@gmail.com>
+  2009-2013, Christian Schmidt
+  2009-2013, Daniel Verkamp <daniel@drv.nu>
+  2009-2015, James Darnley <james.darnley@gmail.com>
+  2009-2015, Martin Storsjo
+  2009-2016, Thilo Borgmann <thilo.borgmann@mail.de>
+  2010, Adrian Daerr
+  2010, Amanda, Y.N. Wu <amanda11192003@gmail.com>
+  2010, Brandon Mintern
+  2010, Daniel G. Taylor <dan@programmer-art.org>
+  2010, Francesco Lavra <francescolavra@interfree.it>
+  2010, Hans de Goede <hdegoede@redhat.com>
+  2010, Holger Lubitz
+  2010, Jacob Meuser
+  2010, Josh Allmann
+  2010, Marcelo Galvao Povoa
+  2010, Mark Heath <mjpeg0@silicontrip.org>
+  2010, Mark Nauwelaerts
+  2010, Michael Chinen
+  2010, Michele Orrù
+  2010, Mohamed Naufal Basheer <naufal11@gmail.com>
+  2010, Nolan Lum <nol888@gmail.com>
+  2010, Rob Clark <rob@ti.com>
+  2010, Romain Degez
+  2010, S.N. Hemanth Meenakshisundaram <smeenaks@ucsd.edu>
+  2010, Sebastian Vater <cdgs.basty@googlemail.com>
+  2010, Tomas Härdin
+  2010-2011, Anatoly Nenashev
+  2010-2011, Elvis Presley
+  2010-2012, Rafaël Carré <funman@videolan.org>
+  2010-2013, Georg Martius <georg.martius@web.de>
+  2010-2013, Philip Langdale <ffmpeg.philipl@overt.org> <philipl@overt.org>
+  2010-2013, Rémi Denis-Courmont
+  2010-2015, Carl Eugen Hoyos
+  2010-2015, Janne Grunau <janne-libav@jannau.net>
+  2010-2016, Anton Khirnov <anton@khirnov.net>
+  2010-2017, Google, Inc
+  2011, Anatoliy Wasserman
+  2011, Andreas Öman
+  2011, Jordi Ortiz
+  2011, Juan Carlos Rodriguez <ing.juancarlosrodriguez@hotmail.com>
+  2011, KO Myung-Hun <komh@chollian.net>
+  2011, Matthew Hoops <clone2727@gmail.com>
+  2011, Max Horn
+  2011, Michael Karcher
+  2011, Mina Nagy Zaki
+  2011, Miroslav Slugeň <Thunder.m@seznam.cz>
+  2011, MirriAd Ltd
+  2011, Oskar Arvidsson
+  2011, Roger Pau Monné <roger.pau@entel.upc.edu>
+  2011, Sven Hesse <drmccoy@drmccoy.de>
+  2011, Thomas Kuehnel
+  2011-2012, Hyllian/Jararaca <sergiogdb@gmail.com>
+  2011-2012, Mark Himsley
+  2011-2012, Mashiat Sarker Shakkhar
+  2011-2012, Michael Bradshaw <mjbshaw@gmail.com>
+  2011-2012, Sebastien Zwickert
+  2011-2012, Smartjog S.A.S, Clément Bœsch <clement.boesch@smartjog.com>
+  2011-2013, Daniel Kang <daniel.d.kang@gmail.com>
+  2011-2015, Derek Buitenhuis
+  2011-2016, Kieran Kunhya <kieran@kunhya.com>
+  2011-2017, Clément Bœsch <u@pkh.me> <clement@stupeflix.com>
+  2011-2017, Paul B Mahol
+  2012, Aleksi Nurmi
+  2012, Andrew D'Addesio
+  2012, Antti Seppälä
+  2012, AvxSynth Team
+  2012, British Broadcasting Corporation
+  2012, David Kment
+  2012, Jan Ekström
+  2012, Jeremy Tran
+  2012, Laurent de Soras
+  2012, Li Cao <li@multicorewareinc.com>
+  2012, Pavel Koshevoy <pkoshevoy@gmail.com>
+  2012, Peng Gao <peng@multicorewareinc.com>
+  2012, Petri Hintukainen <phintuka@users.sourceforge.net>
+  2012, Robert Nagy <ronag89@gmail.com>
+  2012, Samuel Pitoiset
+  2012, Steven Robertson
+  2012, VLC authors and VideoLAN
+  2012, Vitaliy E Sugrobov
+  2012, Xidorn Quan
+  2012-2013, Andrey Utkin <andrey.krieger.utkin@gmail.com>
+  2012-2013, Aneesh Dogra (lionaneesh) <lionaneesh@gmail.com>
+  2012-2013, Fredrik Mellbin
+  2012-2013, Gildas Cocherel
+  2012-2013, Guillaume Martres <smarter@ubuntu.com>
+  2012-2013, Mickael Raulet
+  2012-2013, Oka Motofumi <chikuzen.mo@gmail.com>
+  2012-2013, Rudolf Polzer <divverent@xonotic.org>
+  2012-2013, Wassim Hamidouche
+  2012-2013, Wei Gao <weigao@multicorewareinc.com>
+  2012-2014, Georg Lippitsch <georg.lippitsch@gmx.at>
+  2012-2016, James Almer <jamrial@gmail.com>
+  2013, Anand Meher Kotra
+  2013, Ash Hughes
+  2013, Calvin Walton <calvin.walton@kepstin.ca>
+  2013, Darryl Wallace <wallacdj@gmail.com>
+  2013, Dirk Farin <dirk.farin@gmail.com>
+  2013, Jeff Moguillansky
+  2013, Lenny Wang <lwanghpc@gmail.com>
+  2013, MIPS Technologies, Inc., California
+  2013, Marton Balint
+  2013, Matthew Heaney
+  2013, Rl, Aetey Global Technologies AB
+  2013, VTT
+  2013, Vadim Kalinsky <vadim@kalinsky.ru>
+  2013, Xiaolei Yu <dreifachstein@gmail.com>
+  2013, Yukinori Yamazoe
+  2013-2014, Andrew Kelley
+  2013-2014, Deti Fliegl
+  2013-2014, Lukasz Marek <lukasz.m.luki@gmail.com>
+  2013-2014, Mozilla Corporation
+  2013-2014, Nicolas Bertrand <nicoinattendu@gmail.com>
+  2013-2014, Pierre-Edouard Lepere
+  2013-2014, RISC OS Open Ltd <bavison@riscosopen.org>
+  2013-2015, Andreas Fuchs
+  2013-2015, Seppo Tomperi <seppo.tomperi@vtt.fi>
+  2013-2015, Tiancheng "Timothy" Gu <timothygu99@gmail.com>
+  2013-2015, Wolfgang Hrauda
+  2013-2016, Vittorio Giovara <vittorio.giovara@gmail.com>
+  2014, Aman Gupta <ffmpeg@tmm1.net>
+  2014, Daniel Oberhoff
+  2014, Dave Rice @dericed
+  2014, Eejya Singh
+  2014, James Yu <james.yu@linaro.org>
+  2014, Marvin Scholz
+  2014, Nicholas Robbins
+  2014, Oleksij Rempel <linux@rempel-privat.de>
+  2014, Rong Yan
+  2014, Samsung Electronics
+  2014, StarBrilliant <m13253@hotmail.com>
+  2014, Tim Walker <tdskywalker@gmail.com>
+  2014-2015, Arwa Arif <arwaarif1994@gmail.com>
+  2014-2015, Hendrik Leppkes
+  2014-2015, Peter Meerwald <pmeerw@pmeerw.net>
+  2014-2015, Supraja Meedinti
+  2014-2015, Vignesh Venkatasubramanian
+  2014-2016, Alexandra Hájková
+  2014-2016, Muhammad Faiz <mfcc64@gmail.com>
+  2014-2016, Neil Birkbeck <birkbeck@google.com>
+  2014-2016, Thomas Volkert <thomas@homer-conferencing.com>
+  2015, Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>
+  2015, Anshul Maheshwari
+  2015, Claudio Freire
+  2015, Donny Yang
+  2015, Eran Kornblau <erankor@gmail.com>
+  2015, Gilles Chanteperdrix <gch@xenomai.org>
+  2015, Henrik Gramner <henrik@gramner.com>
+  2015, Himangi Saraogi <himangi774@gmail.com>
+  2015, Imagination Technologies Ltd
+  2015, Kevin Wheatley <kevin.j.wheatley@gmail.com>
+  2015, LoRd_MuldeR <mulder2@gmx.de>
+  2015, Manojkumar Bhosale <Manojkumar.Bhosale@imgtec.com>
+  2015, Mats Peterson
+  2015, Matthew Waters <matthew@centricular.com>
+  2015, Parag Salasakar <Parag.Salasakar@imgtec.com>
+  2015, Pedro Arthur <bygrandao@gmail.com>
+  2015, Rick Kern <kernrj@gmail.com>
+  2015, Roger Pack
+  2015, Sebastian Dröge <sebastian@centricular.com>
+  2015, Shivraj Patil <Shivraj.Patil@imgtec.com>
+  2015, Stupeflix
+  2015, Tampere University of Technology
+  2015, Tom Butterworth <bangnoise@gmail.com>
+  2015, Urvang Joshi
+  2015, Vesselin Bontchev
+  2015, Zhang Rui <bbcallen@gmail.com>
+  2015, Zhang Shuangshuang <zhangshuangshuang@ict.ac.cn>
+  2015-2016, Ganesh Ajjanagadde <gajjanaq@gmail.com>
+  2015-2016, Kyle Swanson <k@ylo.ph>
+  2015-2016, Loongson Technology Corporation Limited
+  2015-2016, Open Broadcast Systems Ltd
+  2015-2016, Rodger Combs <rodger.combs@gmail.com>
+  2015-2016, Timo Rothenpieler <timo@rothenpieler.org>
+  2015-2016, Zhou Xiaoyong <zhouxiaoyong@loongson.cn>
+  2015-2017, Matthieu Bouron <matthieu.bouron@stupeflix.com>
+  2015-2017, Rostislav Pehlivanov <atomnuker@gmail.com>
+  2016, Davinder Singh (DSM_) <ds.mudhar<@gmail.com>
+  2016, Floris Sluiter
+  2016, Jan Sebechlebsky
+  2016, Jokyo Images
+  2016, Josh de Kock
+  2016, KongQun Yang <kqyang@google.com>
+  2016, Marton Balnt <cus@passwd.hu>
+  2016, Mobibase, France
+  2016, Ståle Kristoffersen
+  2016, Thomas Mundt <loudmax@yahoo.de>
+  2016, Tobias Rapp
+  2016, Umair Khan <omerjerk@gmail.com>
+  2016, William Ma, Sofia Kim, Dustin Woo
+  2016, foo86
+  2017, Paras Chadha
+  2017, Steinar H. Gunderson
+License: LGPL-2.1+
+Comment:
+ You should have received a copy of the GNU Lesser General Public
+ License along with FFmpeg; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ .
+ On Debian systems, the full text of the GNU Lesser General Public License
+ version 2.1 can be found in the file `/usr/share/common-licenses/LGPL-2.1'.
+ .
+ The copyright details for Joseph Artsimovich and UAB "DKD" were extracted
+ from the referenced source:
+ <http://samples.mplayerhq.hu/A-codecs/Nelly_Moser/ASAO/ASAO.zip>.
+
+Files:
+  libavfilter/af_chorus.c
+  libavfilter/af_earwax.c
+Copyright:
+  1998, Juergen Mueller And Sundry Contributors
+  2000, Edward Beingessner And Sundry Contributors
+  2011, Mina Nagy Zaki
+  2015, Paul B Mahol
+License: LGPL-2.1+ and Sundry
+Comment:
+ On Debian systems, the full text of the GNU Lesser General Public License
+ version 2.1 can be found in the file `/usr/share/common-licenses/LGPL-2.1'.
+ .
+ You should have received a copy of the GNU Lesser General Public
+ License along with FFmpeg; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+
+Files:
+  doc/texi2pod.pl
+  libavcodec/x86/flac_dsp_gpl.asm
+  libavfilter/f_ebur128.c
+  libavfilter/interlace.h
+  libavfilter/signature.h
+  libavfilter/signature_lookup.c
+  libavfilter/tinterlace.h
+  libavfilter/vf_blackframe.c
+  libavfilter/vf_boxblur.c
+  libavfilter/vf_colormatrix.c
+  libavfilter/vf_cover_rect.c
+  libavfilter/vf_cropdetect.c
+  libavfilter/vf_delogo.c
+  libavfilter/vf_eq.c
+  libavfilter/vf_eq.h
+  libavfilter/vf_find_rect.c
+  libavfilter/vf_fspp.c
+  libavfilter/vf_fspp.h
+  libavfilter/vf_geq.c
+  libavfilter/vf_histeq.c
+  libavfilter/vf_hqdn3d.c
+  libavfilter/vf_hqdn3d.h
+  libavfilter/vf_interlace.c
+  libavfilter/vf_kerndeint.c
+  libavfilter/vf_mcdeint.c
+  libavfilter/vf_mpdecimate.c
+  libavfilter/vf_nnedi.c
+  libavfilter/vf_owdenoise.c
+  libavfilter/vf_perspective.c
+  libavfilter/vf_phase.c
+  libavfilter/vf_pp.c
+  libavfilter/vf_pp7.c
+  libavfilter/vf_pp7.h
+  libavfilter/vf_pullup.c
+  libavfilter/vf_pullup.h
+  libavfilter/vf_repeatfields.c
+  libavfilter/vf_sab.c
+  libavfilter/vf_signature.c
+  libavfilter/vf_smartblur.c
+  libavfilter/vf_spp.c
+  libavfilter/vf_spp.h
+  libavfilter/vf_stereo3d.c
+  libavfilter/vf_super2xsai.c
+  libavfilter/vf_tinterlace.c
+  libavfilter/vf_uspp.c
+  libavfilter/vf_vaguedenoiser.c
+  libavfilter/vsrc_mptestsrc.c
+  libavfilter/x86/vf_eq.c
+  libavfilter/x86/vf_fspp.asm
+  libavfilter/x86/vf_fspp_init.c
+  libavfilter/x86/vf_hqdn3d_init.c
+  libavfilter/x86/vf_interlace.asm
+  libavfilter/x86/vf_interlace_init.c
+  libavfilter/x86/vf_pp7.asm
+  libavfilter/x86/vf_pp7_init.c
+  libavfilter/x86/vf_pullup.asm
+  libavfilter/x86/vf_pullup_init.c
+  libavfilter/x86/vf_removegrain.asm
+  libavfilter/x86/vf_spp.c
+  libavfilter/x86/vf_tinterlace_init.c
+  libavfilter/yadif.h
+  libpostproc/postprocess.c
+  libpostproc/postprocess.h
+  libpostproc/postprocess_altivec_template.c
+  libpostproc/postprocess_internal.h
+  libpostproc/postprocess_template.c
+  libswresample/tests/*
+  tests/checkasm/aacpsdsp.c
+  tests/checkasm/aarch64/*
+  tests/checkasm/alacdsp.c
+  tests/checkasm/arm/*
+  tests/checkasm/audiodsp.c
+  tests/checkasm/blockdsp.c
+  tests/checkasm/bswapdsp.c
+  tests/checkasm/checkasm.c
+  tests/checkasm/checkasm.h
+  tests/checkasm/exrdsp.c
+  tests/checkasm/fixed_dsp.c
+  tests/checkasm/flacdsp.c
+  tests/checkasm/float_dsp.c
+  tests/checkasm/fmtconvert.c
+  tests/checkasm/g722dsp.c
+  tests/checkasm/h264dsp.c
+  tests/checkasm/h264pred.c
+  tests/checkasm/h264qpel.c
+  tests/checkasm/hevc_add_res.c
+  tests/checkasm/hevc_idct.c
+  tests/checkasm/jpeg2000dsp.c
+  tests/checkasm/llviddsp.c
+  tests/checkasm/pixblockdsp.c
+  tests/checkasm/sbrdsp.c
+  tests/checkasm/synth_filter.c
+  tests/checkasm/v210enc.c
+  tests/checkasm/vf_blend.c
+  tests/checkasm/videodsp.c
+  tests/checkasm/vp8dsp.c
+  tests/checkasm/vp9dsp.c
+  tests/checkasm/x86/*
+  tests/tiny_ssim.c
+  tools/coverity.c
+Copyright:
+  Wilbert Dijkhof
+  1997-2001, ZSNES Team <zsknight@zsnes.com> <_demo_@zsnes.com>
+  1999-2001, Free Software Foundation, Inc
+  2000-2002, Fabrice Bellard
+  2001-2003, Donald A. Graft
+  2001-2015, Michael Niedermayer <michaelni@gmx.at>
+  2002, A'rpi
+  2002, Jindrich Makovicka <makovick@gmail.com>
+  2002-2003, Brian J. Murrell
+  2003, Daniel Moreno <comac@comac.darktech.org>
+  2003, LeFunGus <lefungus@altern.org>
+  2003, Michael Zucchi <notzed@ximian.com>
+  2003, Rich Felker
+  2003-2004, Tobias Diedrich
+  2003-2013, Loren Merritt <lorenm@u.washington.edu>
+  2004, Romain Dolbeau <romain@dolbeau.org>
+  2004, Ville Saari
+  2005, Nikolaj Poroshin <porosh3@psu.ru>
+  2006, Ivo van Poorten
+  2006, Julian Hall
+  2006-2011, Kevin Stone
+  2010, Baptiste Coudurier <baptiste.coudurier@free.fr>
+  2010, Gordon Schmidt <gordon.schmidt@s2000.tu-chemnitz.de>
+  2010, Niel van der Westhuizen <nielkie@gmail.com>
+  2010-2012, Stefano Sabatini <stefano.sabatini-lala@poste.it> <stefasab@gmail.com>
+  2012, Jeremy Tran
+  2012-2013, Clément Bœsch <u@pkh.me> <clement@stupeflix.com>
+  2012-2015, Henrik Gramner
+  2013, Vittorio Giovara <vittorio.giovara@gmail.com>
+  2013-2015, Jean Delvare <jdelvare@suse.com>
+  2013-2016, Paul B Mahol
+  2014, James Darnley <james.darnley@gmail.com>
+  2014, Kieran Kunhya <kierank@obe.tv>
+  2014, Red Hat, Inc
+  2014-2015, Arwa Arif <arwaarif1994@gmail.com>
+  2015, Janne Grunau
+  2015-2016, Martin Storsjo
+  2015-2016, Ronald S. Bultje <rsbultje@gmail.com>
+  2015-2016, Tiancheng "Timothy" Gu
+  2015-2017, James Almer
+  2016, Alexandra Hájková
+  2017, Gerion Entrup
+License: GPL-2+
+ FFmpeg is free software; you can redistribute it and/or modify
+ it under the terms of the GNU General Public License as published by
+ the Free Software Foundation; either version 2 of the License, or
+ (at your option) any later version.
+ .
+ FFmpeg is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+Comment:
+ On Debian systems, the full text of the GNU General Public License
+ version 2 can be found in the file `/usr/share/common-licenses/GPL-2'.
+ .
+ You should have received a copy of the GNU General Public License
+ along with FFmpeg; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+
+Files:
+  compat/avisynth/avisynth_c.h
+  compat/avisynth/avs/capi.h
+  compat/avisynth/avs/config.h
+  compat/avisynth/avs/types.h
+  compat/avisynth/avxsynth_c.h
+Copyright: 2003, Kevin Atkinson
+License: GPL-2+ with Avisynth exception
+ This program is free software; you can redistribute it and/or modify
+ it under the terms of the GNU General Public License as published by
+ the Free Software Foundation; either version 2 of the License, or
+ (at your option) any later version.
+ .
+ This program is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ .
+ As a special exception, I give you permission to link to the
+ Avisynth C interface with independent modules that communicate with
+ the Avisynth C interface solely through the interfaces defined in
+ avisynth_c.h, regardless of the license terms of these independent
+ modules, and to copy and distribute the resulting combined work
+ under terms of your choice, provided that every copy of the
+ combined work is accompanied by a complete copy of the source code
+ of the Avisynth C interface and Avisynth itself (with the version
+ used to produce the combined work), being distributed under the
+ terms of the GNU General Public License plus this exception.  An
+ independent module is a module which is not derived from or based
+ on Avisynth C Interface, such as 3rd-party filters, import and
+ export plugins, or graphical user interfaces.
+Comment:
+ On Debian systems, the full text of the GNU General Public License
+ version 2 can be found in the file `/usr/share/common-licenses/GPL-2'.
+ .
+ You should have received a copy of the GNU General Public License
+ along with this program; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA,
+ or visit <http://www.gnu.org/copyleft/gpl.html>.
+
+Files:
+  compat/solaris/make_sunver.pl
+  doc/t2h.pm
+Copyright:
+  2010-2013, Free Software Foundation, Inc.
+  2014, Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>
+  2014, Tiancheng "Timothy" Gu <timothygu99@gmail.com>
+License: GPL-3+
+ FFmpeg is free software; you can redistribute it and/or modify
+ it under the terms of the GNU General Public License as published by
+ the Free Software Foundation; either version 3 of the License, or
+ (at your option) any later version.
+ .
+ FFmpeg is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ Lesser General Public License for more details.
+Comment:
+ On Debian systems, the full text of the GNU General Public License
+ version 3 can be found in the file `/usr/share/common-licenses/GPL-3'.
+ .
+ You should have received a copy of the GNU General Public
+ License along with FFmpeg; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+
+Files:
+  compat/cuda/*
+  compat/nvenc/*
+  doc/bootstrap.min.css
+  doc/examples/avio_dir_cmd.c
+  doc/examples/avio_reading.c
+  doc/examples/decode_audio.c
+  doc/examples/decode_video.c
+  doc/examples/demuxing_decoding.c
+  doc/examples/encode_audio.c
+  doc/examples/encode_video.c
+  doc/examples/extract_mvs.c
+  doc/examples/filtering_audio.c
+  doc/examples/filtering_video.c
+  doc/examples/http_multiclient.c
+  doc/examples/metadata.c
+  doc/examples/muxing.c
+  doc/examples/qsvdec.c
+  doc/examples/remuxing.c
+  doc/examples/resampling_audio.c
+  doc/examples/scaling_video.c
+  doc/examples/transcoding.c
+  doc/style.min.css
+  libavcodec/arm/jrevdct_arm.S
+  libavcodec/cinepakenc.c
+  libavcodec/nellymoser.c
+  libavcodec/nellymoser.h
+  libavcodec/nellymoserdec.c
+  libavcodec/texturedsp.c
+  libavcodec/texturedspenc.c
+  libavcodec/x86/vc1dsp_init.c
+  libavcodec/x86/vc1dsp_mmx.c
+  libavfilter/vf_avgblur.c
+  libavfilter/vf_deband.c
+  libavfilter/vf_scale_cuda.c
+  libavfilter/vf_scale_cuda.cu
+  libavfilter/vf_thumbnail_cuda.c
+  libavfilter/vf_thumbnail_cuda.cu
+  libavformat/oggdec.c
+  libavformat/oggdec.h
+  libavformat/oggparseogm.c
+  libavformat/oggparsespeex.c
+  libavformat/oggparsetheora.c
+  libavformat/oggparsevorbis.c
+  tests/api/api-band-test.c
+  tests/api/api-codec-param-test.c
+  tests/api/api-flac-test.c
+  tests/api/api-h264-test.c
+  tests/api/api-seek-test.c
+  tests/api/api-threadmessage-test.c
+  tests/reference.pnm
+Copyright:
+  2001, Lionel Ulmer <lionel.ulmer@free.fr> <bbrox@bbrox.org>
+  2001-2003, Fabrice Bellard
+  2005, Alex Beregszaszi
+  2005, Matthieu CASTET
+  2005, Michael Ahlberg
+  2005, Måns Rullgård
+  2007, Benjamin Larsson
+  2007, Christophe GISQUET <christophe.gisquet@free.fr>
+  2007, Loic Minier <lool@dooz.org>
+  2008, Reimar Döffinger <Reimar.Doeffinger@gmx.de>
+  2009, Benjamin Dobell
+  2009, Glass Echidna
+  2010, Nicolas George
+  2010-2017, NVIDIA Corporation
+  2011, Tomas Härdin
+  2011-2014, Reinhard Tartler
+  2011-2014, Stefano Sabatini <stefano.sabatini-lala@poste.it> <stefasab@gmail.com>
+  2011-2014, Twitter, Inc
+  2012, Matthäus G. "Anteru" Chajdas (http://anteru.net)
+  2012-2014, Clément Bœsch <u@pkh.me> <clement@stupeflix.com>
+  2013-2014, Rl, Aetey Global Technologies AB
+  2014, Andrey Utkin
+  2014, Barbara Lepage <db0company@gmail.com>
+  2014, Lukasz Marek <lukasz.m.luki@gmail.com>
+  2015, Anton Khirnov <anton@khirnov.net>
+  2015, Ludmila Glinskih
+  2015, Matthieu Bouron <matthieu.bouron@stupeflix.com>
+  2015, Niklas Haas
+  2015, Stephan Holljes
+  2015, Vittorio Giovara <vittorio.giovara@gmail.com>
+  2015-2016, Paul B Mahol
+License: Expat
+
+Files:
+  libavcodec/aacdec_fixed.c
+  libavcodec/aacsbr_fixed.c
+  libavcodec/ac3dec_fixed.c
+  libavcodec/arm/vp8dsp_armv6.S
+  libavcodec/fft_fixed_32.c
+  libavcodec/fft_init_table.c
+  libavcodec/fft_table.h
+  libavcodec/mdct_fixed_32.c
+  libavcodec/mips/aaccoder_mips.c
+  libavcodec/mips/aacdec_mips.c
+  libavcodec/mips/aacdec_mips.h
+  libavcodec/mips/aacpsdsp_mips.c
+  libavcodec/mips/aacpsy_mips.h
+  libavcodec/mips/aacsbr_mips.c
+  libavcodec/mips/aacsbr_mips.h
+  libavcodec/mips/ac3dsp_mips.c
+  libavcodec/mips/acelp_filters_mips.c
+  libavcodec/mips/acelp_vectors_mips.c
+  libavcodec/mips/amrwbdec_mips.c
+  libavcodec/mips/amrwbdec_mips.h
+  libavcodec/mips/celp_filters_mips.c
+  libavcodec/mips/celp_math_mips.c
+  libavcodec/mips/compute_antialias_fixed.h
+  libavcodec/mips/compute_antialias_float.h
+  libavcodec/mips/fft_mips.c
+  libavcodec/mips/fmtconvert_mips.c
+  libavcodec/mips/iirfilter_mips.c
+  libavcodec/mips/lsp_mips.h
+  libavcodec/mips/mpegaudiodsp_mips_fixed.c
+  libavcodec/mips/mpegaudiodsp_mips_float.c
+  libavcodec/mips/sbrdsp_mips.c
+  libavutil/fixed_dsp.c
+  libavutil/fixed_dsp.h
+  libavutil/mips/float_dsp_mips.c
+  libavutil/mips/libm_mips.h
+  libavutil/softfloat_tables.h
+Copyright:
+  2005-2006, Oded Shimon <ods15@ods15.dyndns.org>
+  2006-2007, Maxim Gavrilov <maxim.gavrilov@gmail.com>
+  2008-2009, Robert Swain <rob@opendot.cl>
+  2009-2010, Alex Converse <alex.converse@gmail.com>
+  2010, Google Inc
+  2010, Rob Clark <rob@ti.com>
+  2011, Mans Rullgard <mans@mansr.com>
+  2012-2013, MIPS Technologies, Inc., California
+License: LGPL-2.1+ and BSD-3-clause
+Comment:
+ On Debian systems, the full text of the GNU Lesser General Public License
+ version 2.1 can be found in the file `/usr/share/common-licenses/LGPL-2.1'.
+ .
+ You should have received a copy of the GNU Lesser General Public
+ License along with FFmpeg; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+
+Files:
+  tools/cws2fws.c
+  tools/qt-faststart.c
+Copyright:
+  Alex Beregszaszi
+  Mike Melanson <melanson@pcisys.net>
+License: public-domain
+ This file is placed in the public domain. Use the program however you see fit.
+
+Files:
+  compat/windows/makedef
+  libavcodec/faandct.c
+  libavcodec/interplayacm.c
+  libavcodec/libfdk-aacdec.c
+  libavcodec/libfdk-aacenc.c
+  libavcodec/zerocodec.c
+  libavdevice/openal-dec.c
+  libavfilter/vf_hqx.c
+  libavutil/x86/x86inc.asm
+Copyright:
+  2003, Michael Niedermayer <michaelni@gmx.at>
+  2003, Roman Shaposhnik
+  2004-2008, Marko Kreen
+  2005-2016, x264 project
+  2008, Adam Gashlin
+  2011, Jonathan Baldwin
+  2012-2013, Derek Buitenhuis
+  2012, Martin Storsjo
+  2014, Clément Bœsch <u@pkh.me> <clement@stupeflix.com>
+  2015, Paul B Mahol
+License: ISC
+ Permission to use, copy, modify, and/or distribute this software for any
+ purpose with or without fee is hereby granted, provided that the above
+ copyright notice and this permission notice appear in all copies.
+ .
+ THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
+ WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
+ MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
+ ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+ WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
+ ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
+ OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+
+Files:
+  libavcodec/jfdctfst.c
+  libavcodec/jfdctint_template.c
+  libavcodec/jrevdct.c
+Copyright: 1991-1996, Thomas G. Lane
+License: IJG
+ The authors make NO WARRANTY or representation, either express or implied,
+ with respect to this software, its quality, accuracy, merchantability, or
+ fitness for a particular purpose.  This software is provided "AS IS", and
+ you, its user, assume the entire risk as to its quality and accuracy.
+ .
+ Permission is hereby granted to use, copy, modify, and distribute this
+ software (or portions thereof) for any purpose, without fee, subject to
+ these conditions:
+ (1) If any part of the source code for this software is distributed, then
+ this README file must be included, with this copyright and no-warranty
+ notice unaltered; and any additions, deletions, or changes to the original
+ files must be clearly indicated in accompanying documentation.
+ (2) If only executable code is distributed, then the accompanying
+ documentation must state that "this software is based in part on the work
+ of the Independent JPEG Group".
+ (3) Permission for use of this software is granted only if the user accepts
+ full responsibility for any undesirable consequences; the authors accept
+ NO LIABILITY for damages of any kind.
+ .
+ These conditions apply to any software derived from or based on the IJG
+ code, not just to the unmodified library.  If you use our work, you ought
+ to acknowledge us.
+ .
+ Permission is NOT granted for the use of any IJG author's name or company
+ name in advertising or publicity relating to this software or products
+ derived from it.  This software may be referred to only as "the Independent
+ JPEG Group's software".
+ .
+ We specifically permit and encourage the use of this software as the basis
+ of commercial products, provided that all warranty or liability claims are
+ assumed by the product vendor.
+
+Files: libavcodec/j2kenc.c
+Copyright:
+  2001-2003, David Janssens
+  2002-2003, Yannick Verschueren
+  2002-2007, Communications and Remote Sensing Laboratory, Universite catholique de Louvain (UCL), Belgium
+  2002-2007, Professor Benoit Macq
+  2003-2007, Francois-Olivier Devaux and Antonin Descampe
+  2005, Herve Drolon, FreeImage Team
+  2007, Callum Lerwick <seg@haxxed.com>
+  2007, Kamil Nowosad
+License: LGPL-2.1+ and BSD-2-clause
+
+Files: libavutil/adler32.c
+Copyright: 1995, Mark Adler
+License: Zlib
+ This software is provided 'as-is', without any express or implied
+ warranty.  In no event will the authors be held liable for any damages
+ arising from the use of this software.
+ .
+ Permission is granted to anyone to use this software for any purpose,
+ including commercial applications, and to alter it and redistribute it
+ freely, subject to the following restrictions:
+ .
+ 1. The origin of this software must not be misrepresented; you must not
+    claim that you wrote the original software. If you use this software
+    in a product, an acknowledgment in the product documentation would be
+    appreciated but is not required.
+ 2. Altered source versions must be plainly marked as such, and must not be
+    misrepresented as being the original software.
+ 3. This notice may not be removed or altered from any source distribution.
+
+Files:
+  libavfilter/af_hdcd.c
+Copyright:
+  2010, Chris Moeller
+License: BSD-3-clause
+
+Files:
+ libavfilter/ebur128.c
+ libavfilter/ebur128.h
+Copyright:
+ 2011, Jan Kokemüller
+License: LGPL-2.1+ and Expat
+
+Files:
+  libavfilter/vf_gblur.c
+Copyright:
+  2011, Pascal Getreuer
+  2016, Paul B Mahol
+License: BSD-2-clause
+
+Files: libavformat/aadec.c
+Copyright:
+  2001-2014, Jim Teeuwen
+  2015, Vesselin Bontchev
+License: BSD-1-clause
+ Redistribution and use in source and binary forms, with or without
+ modification, are permitted provided that the following conditions
+ are met:
+ 1. Redistributions of source code must retain the above copyright
+    notice, this list of conditions and the following disclaimer.
+ .
+ THIS SOFTWARE IS PROVIDED BY THE MIPS TECHNOLOGIES, INC. ``AS IS'' AND
+ ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ POSSIBILITY OF SUCH DAMAGE.
+
+Files: libavcodec/libzvbi-teletextdec.c
+Copyright:
+  2005-2012, Wolfram Gloger
+  2013, Marton Balint
+License: LGPL-2+
+ This library is free software; you can redistribute it and/or
+ modify it under the terms of the GNU Lesser General Public
+ License as published by the Free Software Foundation; either
+ version 2 of the License, or (at your option) any later version.
+ .
+ This library is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ Lesser General Public License for more details.
+Comment:
+ On Debian systems, the full text of the GNU Lesser General Public License
+ version 2 can be found in the file `/usr/share/common-licenses/GPL-2'.
+ .
+ You should have received a copy of the GNU Lesser General Public
+ License along with this library; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+
+Files: libswresample/resample.c
+Copyright:
+  2004-2012, Michael Niedermayer <michaelni@gmx.at>
+  2006, Xiaogang Zhang
+License: LGPL-2.1+ and BSL
+
+Files:
+  COPYING.GPLv2
+  COPYING.GPLv3
+  COPYING.LGPLv2.1
+  COPYING.LGPLv3
+Copyright: 1989-2007, Free Software Foundation, Inc. <http:fsf.org/>
+License: FSF
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+Files: debian/*
+Copyright:
+  2014-2017, Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>
+  2016, Sebastian Ramacher <sramacher@debian.org>
+  2017, James Cowgill <jcowgill@debian.org>
+License: LGPL-2.1+
+Comment:
+ On Debian systems, the full text of the GNU Lesser General Public License
+ version 2.1 can be found in the file `/usr/share/common-licenses/LGPL-2.1'.
+ .
+ You should have received a copy of the GNU Lesser General Public
+ License along with this packaging; if not, write to the Free Software
+ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+
+Files: debian/missing-sources/ffmpeg-web/src/less/style.less
+Copyright: 2014, Barbara Lepage <db0company@gmail.com>
+License: Expat
+Comment:
+ This is the source of doc/style.min.css.
+ It was obtained from the FFmpeg web repository:
+ <https://github.com/FFmpeg/web>
+
+Files: debian/qt-faststart.1
+Copyright: Andres Mejia <mcitadel@gmail.com>
+License: man-page
+ This manual page was written by Andres Mejia <mcitadel@gmail.com>
+ for the Debian GNU/Linux system, but may be used by others.
+
+License: BSD-2-clause
+ Redistribution and use in source and binary forms, with or without
+ modification, are permitted provided that the following conditions
+ are met:
+ 1. Redistributions of source code must retain the above copyright
+    notice, this list of conditions and the following disclaimer.
+ 2. Redistributions in binary form must reproduce the above copyright
+    notice, this list of conditions and the following disclaimer in the
+    documentation and/or other materials provided with the distribution.
+ .
+ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS `AS IS'
+ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
+ LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ POSSIBILITY OF SUCH DAMAGE.
+
+License: BSD-3-clause
+ Redistribution and use in source and binary forms, with or without
+ modification, are permitted provided that the following conditions
+ are met:
+ 1. Redistributions of source code must retain the above copyright
+    notice, this list of conditions and the following disclaimer.
+ 2. Redistributions in binary form must reproduce the above copyright
+    notice, this list of conditions and the following disclaimer in the
+    documentation and/or other materials provided with the distribution.
+ 3. Neither the name of the MIPS Technologies, Inc., nor the names of its
+    contributors may be used to endorse or promote products derived from
+    this software without specific prior written permission.
+ .
+ THIS SOFTWARE IS PROVIDED BY THE MIPS TECHNOLOGIES, INC. ``AS IS'' AND
+ ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ ARE DISCLAIMED.  IN NO EVENT SHALL THE MIPS TECHNOLOGIES, INC. BE LIABLE
+ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ SUCH DAMAGE.
+
+License: BSL
+ Permission is hereby granted, free of charge, to any person or organization
+ obtaining a copy of the software and accompanying documentation covered by
+ this license (the "Software") to use, reproduce, display, distribute,
+ execute, and transmit the Software, and to prepare derivative works of the
+ Software, and to permit third-parties to whom the Software is furnished to
+ do so, all subject to the following:
+ .
+ The copyright notices in the Software and this entire statement, including
+ the above license grant, this restriction and the following disclaimer,
+ must be included in all copies of the Software, in whole or in part, and
+ all derivative works of the Software, unless such copies or derivative
+ works are solely in the form of machine-executable object code generated by
+ a source language processor.
+ .
+ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
+ SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
+ FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
+ ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+ DEALINGS IN THE SOFTWARE.
+
+License: Expat
+ Permission is hereby granted, free of charge, to any person obtaining a copy
+ of this software and associated documentation files (the "Software"), to deal
+ in the Software without restriction, including without limitation the rights
+ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ copies of the Software, and to permit persons to whom the Software is
+ furnished to do so, subject to the following conditions:
+ .
+ The above copyright notice and this permission notice shall be included in
+ all copies or substantial portions of the Software.
+ .
+ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ THE SOFTWARE.
+
+License: LGPL-2.1+
+ FFmpeg is free software; you can redistribute it and/or
+ modify it under the terms of the GNU Lesser General Public
+ License as published by the Free Software Foundation; either
+ version 2.1 of the License, or (at your option) any later version.
+ .
+ FFmpeg is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ Lesser General Public License for more details.
+
+License: Sundry
+ This source code is freely redistributable and may be used for
+ any purpose.  This copyright notice must be maintained.
+ Juergen Mueller/Edward Beingessner And Sundry Contributors are not responsible for
+ the consequences of using this software.
diff --git a/debian/ffmpeg-doc.doc-base b/debian/ffmpeg-doc.doc-base
new file mode 100644
index 0000000000..8bd5937826
--- /dev/null
+++ b/debian/ffmpeg-doc.doc-base
@@ -0,0 +1,9 @@
+Document: ffmpeg-doc
+Title: FFmpeg API Documentation
+Author: FFmpeg Developers
+Abstract: This is the API documentation for FFmpeg.
+Section: Programming
+
+Format: HTML
+Index: /usr/share/doc/ffmpeg/api/index.html
+Files: /usr/share/doc/ffmpeg/api/*.html
diff --git a/debian/ffmpeg-doc.install b/debian/ffmpeg-doc.install
new file mode 100644
index 0000000000..5c25eb57b1
--- /dev/null
+++ b/debian/ffmpeg-doc.install
@@ -0,0 +1,9 @@
+debian/standard/doc/doxy/html/*		usr/share/doc/ffmpeg/api
+doc/examples/*.c					usr/share/doc/ffmpeg/examples
+doc/examples/Makefile				usr/share/doc/ffmpeg/examples
+doc/examples/README					usr/share/doc/ffmpeg/examples
+debian/standard/doc/*.html			usr/share/doc/ffmpeg/manual
+debian/standard/doc/style.min.css	usr/share/doc/ffmpeg/manual
+doc/APIchanges						usr/share/doc/ffmpeg/developer-info
+doc/*.txt							usr/share/doc/ffmpeg/developer-info
+usr/share/man/man3
diff --git a/debian/ffmpeg-doc.links b/debian/ffmpeg-doc.links
new file mode 100644
index 0000000000..8c3449fcbb
--- /dev/null
+++ b/debian/ffmpeg-doc.links
@@ -0,0 +1,2 @@
+usr/share/javascript/jquery/jquery.min.js usr/share/doc/ffmpeg/api/jquery.js
+usr/share/javascript/bootstrap/css/bootstrap.min.css usr/share/doc/ffmpeg/manual/bootstrap.min.css
diff --git a/debian/ffmpeg.install b/debian/ffmpeg.install
new file mode 100644
index 0000000000..1a6d214987
--- /dev/null
+++ b/debian/ffmpeg.install
@@ -0,0 +1,6 @@
+doc/ffserver.conf					etc
+usr/bin/ff*
+usr/share/man/man1
+usr/share/ffmpeg/*.ffpreset
+RELEASE_NOTES						usr/share/doc/ffmpeg
+debian/standard/tools/qt-faststart	usr/bin
diff --git a/debian/ffmpeg.lintian-overrides b/debian/ffmpeg.lintian-overrides
new file mode 100644
index 0000000000..f6e762fd06
--- /dev/null
+++ b/debian/ffmpeg.lintian-overrides
@@ -0,0 +1,9 @@
+# These are due to two too long lines in upstream texi files, but shortening these lines wouldn't make much sense.
+# docs/ffmpeg.texi: @item -map_channel [@var{input_file_id}.@var{stream_specifier}.@var{channel_id}|-1][:@var{output_file_id}.@var{stream_specifier}]
+ffmpeg: manpage-has-errors-from-man usr/share/man/man1/ffmpeg.1.gz * can't break line
+ffmpeg: manpage-has-errors-from-man usr/share/man/man1/ffmpeg-all.1.gz * can't break line
+# docs/filters.texi: [@var{in_link_1}]...[@var{in_link_N}]@var{filter_name}=@var{arguments}[@var{out_link_1}]...[@var{out_link_M}]
+ffmpeg: manpage-has-errors-from-man usr/share/man/man1/ffmpeg-filters.1.gz * can't break line
+ffmpeg: manpage-has-errors-from-man usr/share/man/man1/ffplay-all.1.gz * can't break line
+ffmpeg: manpage-has-errors-from-man usr/share/man/man1/ffprobe-all.1.gz * can't break line
+ffmpeg: manpage-has-errors-from-man usr/share/man/man1/ffserver-all.1.gz * can't break line
diff --git a/debian/ffmpeg.manpages b/debian/ffmpeg.manpages
new file mode 100644
index 0000000000..308bde3cef
--- /dev/null
+++ b/debian/ffmpeg.manpages
@@ -0,0 +1 @@
+debian/qt-faststart.1
diff --git a/debian/gbp.conf b/debian/gbp.conf
new file mode 100644
index 0000000000..127043612e
--- /dev/null
+++ b/debian/gbp.conf
@@ -0,0 +1,4 @@
+[DEFAULT]
+pristine-tar = True
+debian-branch = master
+upstream-branch = upstream
diff --git a/debian/libav-tools.links b/debian/libav-tools.links
new file mode 100644
index 0000000000..e2101e0743
--- /dev/null
+++ b/debian/libav-tools.links
@@ -0,0 +1,6 @@
+usr/bin/ffmpeg usr/bin/avconv
+usr/bin/ffplay usr/bin/avplay
+usr/bin/ffprobe usr/bin/avprobe
+usr/share/man/man1/ffprobe.1.gz usr/share/man/man1/avprobe.1.gz
+usr/share/man/man1/ffplay.1.gz usr/share/man/man1/avplay.1.gz
+usr/share/man/man1/ffmpeg.1.gz usr/share/man/man1/avconv.1.gz
diff --git a/debian/libavcodec-dev.install b/debian/libavcodec-dev.install
new file mode 100644
index 0000000000..2e91cb2b5d
--- /dev/null
+++ b/debian/libavcodec-dev.install
@@ -0,0 +1,4 @@
+usr/include/*/libavcodec
+usr/lib/*/libavcodec*.a
+usr/lib/*/libavcodec*.so
+usr/lib/*/pkgconfig/libavcodec*.pc
diff --git a/debian/libavcodec-extra57.install b/debian/libavcodec-extra57.install
new file mode 100644
index 0000000000..1cd494c596
--- /dev/null
+++ b/debian/libavcodec-extra57.install
@@ -0,0 +1 @@
+usr/lib/*/libavcodec.so.*
diff --git a/debian/libavcodec-extra57.install.powerpc b/debian/libavcodec-extra57.install.powerpc
new file mode 100644
index 0000000000..2e29c2fa55
--- /dev/null
+++ b/debian/libavcodec-extra57.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libavcodec.so.*
+usr/lib/*/*/libavcodec.so.*
diff --git a/debian/libavcodec-extra57.lintian-overrides b/debian/libavcodec-extra57.lintian-overrides
new file mode 100644
index 0000000000..0dad43a2a9
--- /dev/null
+++ b/debian/libavcodec-extra57.lintian-overrides
@@ -0,0 +1,10 @@
+# According to Debian policy [1], non position independent code is permitted
+# in a shared library on i386 and position independent code may have a
+# performance penalty, especially on i386.
+# Upstream's hand-written assembler optimizations are not position independent
+# on i386.
+# 1: https://www.debian.org/doc/debian-policy/footnotes.html#f84
+libavcodec-extra57 [i386]: shlib-with-non-pic-code usr/lib/i386*/libavcodec.so.*
+
+# This is intentional, because this package provides an alternative variant with the same soname.
+libavcodec-extra57: package-name-doesnt-match-sonames libavcodec*
diff --git a/debian/libavcodec57.install b/debian/libavcodec57.install
new file mode 100644
index 0000000000..1cd494c596
--- /dev/null
+++ b/debian/libavcodec57.install
@@ -0,0 +1 @@
+usr/lib/*/libavcodec.so.*
diff --git a/debian/libavcodec57.install.powerpc b/debian/libavcodec57.install.powerpc
new file mode 100644
index 0000000000..2e29c2fa55
--- /dev/null
+++ b/debian/libavcodec57.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libavcodec.so.*
+usr/lib/*/*/libavcodec.so.*
diff --git a/debian/libavcodec57.lintian-overrides b/debian/libavcodec57.lintian-overrides
new file mode 100644
index 0000000000..890de4e39f
--- /dev/null
+++ b/debian/libavcodec57.lintian-overrides
@@ -0,0 +1,7 @@
+# According to Debian policy [1], non position independent code is permitted
+# in a shared library on i386 and position independent code may have a
+# performance penalty, especially on i386.
+# Upstream's hand-written assembler optimizations are not position independent
+# on i386.
+# 1: https://www.debian.org/doc/debian-policy/footnotes.html#f84
+libavcodec57 [i386]: shlib-with-non-pic-code usr/lib/i386*/libavcodec.so.*
diff --git a/debian/libavdevice-dev.install b/debian/libavdevice-dev.install
new file mode 100644
index 0000000000..7dc5712770
--- /dev/null
+++ b/debian/libavdevice-dev.install
@@ -0,0 +1,4 @@
+usr/include/*/libavdevice
+usr/lib/*/libavdevice*.a
+usr/lib/*/libavdevice*.so
+usr/lib/*/pkgconfig/libavdevice*.pc
diff --git a/debian/libavdevice57.install b/debian/libavdevice57.install
new file mode 100644
index 0000000000..4e7442b579
--- /dev/null
+++ b/debian/libavdevice57.install
@@ -0,0 +1 @@
+usr/lib/*/libavdevice.so.*
diff --git a/debian/libavdevice57.install.powerpc b/debian/libavdevice57.install.powerpc
new file mode 100644
index 0000000000..6837f9702a
--- /dev/null
+++ b/debian/libavdevice57.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libavdevice.so.*
+usr/lib/*/*/libavdevice.so.*
diff --git a/debian/libavfilter-dev.install b/debian/libavfilter-dev.install
new file mode 100644
index 0000000000..c5937e0755
--- /dev/null
+++ b/debian/libavfilter-dev.install
@@ -0,0 +1,4 @@
+usr/include/*/libavfilter
+usr/lib/*/libavfilter*.a
+usr/lib/*/libavfilter*.so
+usr/lib/*/pkgconfig/libavfilter*.pc
diff --git a/debian/libavfilter-extra6.install b/debian/libavfilter-extra6.install
new file mode 100644
index 0000000000..1b2648ce4a
--- /dev/null
+++ b/debian/libavfilter-extra6.install
@@ -0,0 +1 @@
+usr/lib/*/libavfilter.so.*
diff --git a/debian/libavfilter-extra6.install.powerpc b/debian/libavfilter-extra6.install.powerpc
new file mode 100644
index 0000000000..628ec8fefb
--- /dev/null
+++ b/debian/libavfilter-extra6.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libavfilter.so.*
+usr/lib/*/*/libavfilter.so.*
diff --git a/debian/libavfilter-extra6.lintian-overrides b/debian/libavfilter-extra6.lintian-overrides
new file mode 100644
index 0000000000..481cbff626
--- /dev/null
+++ b/debian/libavfilter-extra6.lintian-overrides
@@ -0,0 +1,10 @@
+# According to Debian policy [1], non position independent code is permitted
+# in a shared library on i386 and position independent code may have a
+# performance penalty, especially on i386.
+# Upstream's hand-written assembler optimizations are not position independent
+# on i386.
+# 1: https://www.debian.org/doc/debian-policy/footnotes.html#f84
+libavfilter-extra6 [i386]: shlib-with-non-pic-code usr/lib/i386*/libavfilter.so.*
+
+# This is intentional, because this package provides an alternative variant with the same soname.
+libavfilter-extra6: package-name-doesnt-match-sonames libavfilter*
diff --git a/debian/libavfilter6.install b/debian/libavfilter6.install
new file mode 100644
index 0000000000..1b2648ce4a
--- /dev/null
+++ b/debian/libavfilter6.install
@@ -0,0 +1 @@
+usr/lib/*/libavfilter.so.*
diff --git a/debian/libavfilter6.install.powerpc b/debian/libavfilter6.install.powerpc
new file mode 100644
index 0000000000..628ec8fefb
--- /dev/null
+++ b/debian/libavfilter6.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libavfilter.so.*
+usr/lib/*/*/libavfilter.so.*
diff --git a/debian/libavfilter6.lintian-overrides b/debian/libavfilter6.lintian-overrides
new file mode 100644
index 0000000000..f42282a006
--- /dev/null
+++ b/debian/libavfilter6.lintian-overrides
@@ -0,0 +1,7 @@
+# According to Debian policy [1], non position independent code is permitted
+# in a shared library on i386 and position independent code may have a
+# performance penalty, especially on i386.
+# Upstream's hand-written assembler optimizations are not position independent
+# on i386.
+# 1: https://www.debian.org/doc/debian-policy/footnotes.html#f84
+libavfilter6 [i386]: shlib-with-non-pic-code usr/lib/i386*/libavfilter.so.*
diff --git a/debian/libavformat-dev.install b/debian/libavformat-dev.install
new file mode 100644
index 0000000000..6882eda706
--- /dev/null
+++ b/debian/libavformat-dev.install
@@ -0,0 +1,4 @@
+usr/include/*/libavformat
+usr/lib/*/libavformat*.a
+usr/lib/*/libavformat*.so
+usr/lib/*/pkgconfig/libavformat*.pc
diff --git a/debian/libavformat57.install b/debian/libavformat57.install
new file mode 100644
index 0000000000..606858b2dc
--- /dev/null
+++ b/debian/libavformat57.install
@@ -0,0 +1 @@
+usr/lib/*/libavformat.so.*
diff --git a/debian/libavformat57.install.powerpc b/debian/libavformat57.install.powerpc
new file mode 100644
index 0000000000..2ab68cc258
--- /dev/null
+++ b/debian/libavformat57.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libavformat.so.*
+usr/lib/*/*/libavformat.so.*
diff --git a/debian/libavformat57.lintian-overrides b/debian/libavformat57.lintian-overrides
new file mode 100644
index 0000000000..2765418c49
--- /dev/null
+++ b/debian/libavformat57.lintian-overrides
@@ -0,0 +1,2 @@
+# [67] = "Psychadelic", /* sic, the misspelling is used in the specification */
+libavformat57: spelling-error-in-binary usr/lib/*/libavformat.so.* Psychadelic Psychedelic
diff --git a/debian/libavresample-dev.install b/debian/libavresample-dev.install
new file mode 100644
index 0000000000..3d0e47fa42
--- /dev/null
+++ b/debian/libavresample-dev.install
@@ -0,0 +1,4 @@
+usr/include/*/libavresample
+usr/lib/*/libavresample*.a
+usr/lib/*/libavresample*.so
+usr/lib/*/pkgconfig/libavresample*.pc
diff --git a/debian/libavresample3.install b/debian/libavresample3.install
new file mode 100644
index 0000000000..209f3b16a4
--- /dev/null
+++ b/debian/libavresample3.install
@@ -0,0 +1 @@
+usr/lib/*/libavresample.so.*
diff --git a/debian/libavresample3.install.powerpc b/debian/libavresample3.install.powerpc
new file mode 100644
index 0000000000..a883d35af3
--- /dev/null
+++ b/debian/libavresample3.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libavresample.so.*
+usr/lib/*/*/libavresample.so.*
diff --git a/debian/libavresample3.lintian-overrides b/debian/libavresample3.lintian-overrides
new file mode 100644
index 0000000000..c5fb72c320
--- /dev/null
+++ b/debian/libavresample3.lintian-overrides
@@ -0,0 +1,6 @@
+# According to Debian policy [1], non position independent code is permitted
+# in a shared library on i386 and position independent code may have a
+# performance penalty, especially on i386.
+# Therefore -fPIC is not used by the upstream build system on i386.
+# 1: https://www.debian.org/doc/debian-policy/footnotes.html#f83
+libavresample3 [i386]: shlib-with-non-pic-code usr/lib/i386*/libavresample.so.*
diff --git a/debian/libavutil-dev.install b/debian/libavutil-dev.install
new file mode 100644
index 0000000000..7d0578c5d0
--- /dev/null
+++ b/debian/libavutil-dev.install
@@ -0,0 +1,4 @@
+usr/include/*/libavutil
+usr/lib/*/libavutil*.a
+usr/lib/*/libavutil*.so
+usr/lib/*/pkgconfig/libavutil*.pc
diff --git a/debian/libavutil55.install b/debian/libavutil55.install
new file mode 100644
index 0000000000..afc10d2b18
--- /dev/null
+++ b/debian/libavutil55.install
@@ -0,0 +1 @@
+usr/lib/*/libavutil.so.*
diff --git a/debian/libavutil55.install.powerpc b/debian/libavutil55.install.powerpc
new file mode 100644
index 0000000000..6b71e77d07
--- /dev/null
+++ b/debian/libavutil55.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libavutil.so.*
+usr/lib/*/*/libavutil.so.*
diff --git a/debian/libavutil55.lintian-overrides b/debian/libavutil55.lintian-overrides
new file mode 100644
index 0000000000..aa8029f5ce
--- /dev/null
+++ b/debian/libavutil55.lintian-overrides
@@ -0,0 +1,7 @@
+# According to Debian policy [1], non position independent code is permitted
+# in a shared library on i386 and position independent code may have a
+# performance penalty, especially on i386.
+# Upstream's hand-written assembler optimizations are not position independent
+# on i386.
+# 1: https://www.debian.org/doc/debian-policy/footnotes.html#f84
+libavutil55 [i386]: shlib-with-non-pic-code usr/lib/i386*/libavutil.so.*
diff --git a/debian/libpostproc-dev.install b/debian/libpostproc-dev.install
new file mode 100644
index 0000000000..2abb8488ec
--- /dev/null
+++ b/debian/libpostproc-dev.install
@@ -0,0 +1,4 @@
+usr/include/*/libpostproc
+usr/lib/*/libpostproc*.a
+usr/lib/*/libpostproc*.so
+usr/lib/*/pkgconfig/libpostproc*.pc
diff --git a/debian/libpostproc54.install b/debian/libpostproc54.install
new file mode 100644
index 0000000000..77dbbe31fe
--- /dev/null
+++ b/debian/libpostproc54.install
@@ -0,0 +1 @@
+usr/lib/*/libpostproc.so.*
diff --git a/debian/libpostproc54.install.powerpc b/debian/libpostproc54.install.powerpc
new file mode 100644
index 0000000000..a84b3b5e38
--- /dev/null
+++ b/debian/libpostproc54.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libpostproc.so.*
+usr/lib/*/*/libpostproc.so.*
diff --git a/debian/libpostproc54.lintian-overrides b/debian/libpostproc54.lintian-overrides
new file mode 100644
index 0000000000..f70827f23b
--- /dev/null
+++ b/debian/libpostproc54.lintian-overrides
@@ -0,0 +1,7 @@
+# According to Debian policy [1], non position independent code is permitted
+# in a shared library on i386 and position independent code may have a
+# performance penalty, especially on i386.
+# Upstream's hand-written assembler optimizations are not position independent
+# on i386.
+# 1: https://www.debian.org/doc/debian-policy/footnotes.html#f84
+libpostproc54 [i386]: shlib-with-non-pic-code usr/lib/i386*/libpostproc.so.*
diff --git a/debian/libswresample-dev.install b/debian/libswresample-dev.install
new file mode 100644
index 0000000000..d3167141a0
--- /dev/null
+++ b/debian/libswresample-dev.install
@@ -0,0 +1,4 @@
+usr/include/*/libswresample
+usr/lib/*/libswresample*.a
+usr/lib/*/libswresample*.so
+usr/lib/*/pkgconfig/libswresample*.pc
diff --git a/debian/libswresample2.install b/debian/libswresample2.install
new file mode 100644
index 0000000000..17b31deee3
--- /dev/null
+++ b/debian/libswresample2.install
@@ -0,0 +1 @@
+usr/lib/*/libswresample.so.*
diff --git a/debian/libswresample2.install.powerpc b/debian/libswresample2.install.powerpc
new file mode 100644
index 0000000000..a1ceb8eaf3
--- /dev/null
+++ b/debian/libswresample2.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libswresample.so.*
+usr/lib/*/*/libswresample.so.*
diff --git a/debian/libswresample2.lintian-overrides b/debian/libswresample2.lintian-overrides
new file mode 100644
index 0000000000..925fb2a320
--- /dev/null
+++ b/debian/libswresample2.lintian-overrides
@@ -0,0 +1,7 @@
+# According to Debian policy [1], non position independent code is permitted
+# in a shared library on i386 and position independent code may have a
+# performance penalty, especially on i386.
+# Upstream's hand-written assembler optimizations are not position independent
+# on i386.
+# 1: https://www.debian.org/doc/debian-policy/footnotes.html#f84
+libswresample2 [i386]: shlib-with-non-pic-code usr/lib/i386*/libswresample.so.*
diff --git a/debian/libswscale-dev.install b/debian/libswscale-dev.install
new file mode 100644
index 0000000000..15753e852c
--- /dev/null
+++ b/debian/libswscale-dev.install
@@ -0,0 +1,4 @@
+usr/include/*/libswscale
+usr/lib/*/libswscale*.a
+usr/lib/*/libswscale*.so
+usr/lib/*/pkgconfig/libswscale*.pc
diff --git a/debian/libswscale4.install b/debian/libswscale4.install
new file mode 100644
index 0000000000..4159f43f68
--- /dev/null
+++ b/debian/libswscale4.install
@@ -0,0 +1 @@
+usr/lib/*/libswscale.so.*
diff --git a/debian/libswscale4.install.powerpc b/debian/libswscale4.install.powerpc
new file mode 100644
index 0000000000..12663ef2fb
--- /dev/null
+++ b/debian/libswscale4.install.powerpc
@@ -0,0 +1,2 @@
+usr/lib/*/libswscale.so.*
+usr/lib/*/*/libswscale.so.*
diff --git a/debian/libswscale4.lintian-overrides b/debian/libswscale4.lintian-overrides
new file mode 100644
index 0000000000..fe9245bf54
--- /dev/null
+++ b/debian/libswscale4.lintian-overrides
@@ -0,0 +1,7 @@
+# According to Debian policy [1], non position independent code is permitted
+# in a shared library on i386 and position independent code may have a
+# performance penalty, especially on i386.
+# Upstream's hand-written assembler optimizations are not position independent
+# on i386.
+# 1: https://www.debian.org/doc/debian-policy/footnotes.html#f84
+libswscale4 [i386]: shlib-with-non-pic-code usr/lib/i386*/libswscale.so.*
diff --git a/debian/missing-sources/ffmpeg-web/src/less/style.less b/debian/missing-sources/ffmpeg-web/src/less/style.less
new file mode 100644
index 0000000000..6588ec7d29
--- /dev/null
+++ b/debian/missing-sources/ffmpeg-web/src/less/style.less
@@ -0,0 +1,507 @@
+/*!
+The MIT License (MIT)
+
+Copyright (c) 2014 Barbara Lepage <db0company@gmail.com>
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in all
+copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+SOFTWARE.
+ */
+// ************************************************************************* //
+// COLORS
+
+// Main black color and its shades.
+@Cmain:                 hsl(0, 0%,    19%);
+@Cmaindark:          darken(@Cmain,    5%);
+@Cmaindarkdark:      darken(@Cmain,   10%);
+@Cborder:            darken(@Cmain,   13%);
+@Cmainlight:        lighten(@Cmain,    5%);
+@Cmainlightlight:   lighten(@Cmain,   10%);
+@Cmainlightlightl:  lighten(@Cmain,   55%);
+
+// Complete invert of the main black theme.
+@Cinvert:               hsl(0, 0%,    90%);
+
+// The green theme colors and its shades.
+@Csecond:                   #4cae4c;
+@Cseconddark:        darken(@Csecond, 10%);
+@Cseconddarkdark:    darken(@Csecond, 20%);
+@Csecondlight:      lighten(@Csecond, 15%);
+@Csecondlightlight: lighten(@Csecond, 35%);
+
+// The red theme color.
+@Cwarning: #ae4c4c;
+
+// ************************************************************************* //
+// SIZES
+
+@Smain: 100%;
+
+// ************************************************************************* //
+// Global
+
+body {
+    background-color: @Cmain;
+    color: @Cinvert;
+    text-align: justify;
+}
+
+body, h1, h2, h3, h4, h5, h6 {
+    font-family: "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", "Helvetica Neue", Helvetica, Verdana, Tahoma, sans-serif;
+}
+
+a {
+    color: @Csecond;
+    strong {
+        color: @Cinvert;
+    }
+    &:hover {
+        color: @Csecondlight;
+        strong {
+            color: @Csecond;
+        }
+    }
+}
+
+ 
+main {
+    width: @Smain !important;
+    min-height: 600px;
+    margin: auto;
+}
+
+h1, h2, h3, h4, h5, h6 {
+    a.anchor {
+        font-size: 18px;
+    }
+}
+
+h1, h2, h3, h4 {
+    font-weight: bold;
+    text-align: left;
+}
+
+h1, h2, h3 {
+    color: @Cmainlightlightl;
+    strong {
+        color: @Cinvert;
+    }
+    a.anchor {
+        color: @Cmainlightlightl;
+    }
+}
+
+h4, h5, h6 {
+    color: @Cseconddark;
+}
+
+h1 {
+  border-bottom: 4px @Cmainlightlightl solid;
+  padding: 20px 2%;
+}
+
+h3 {
+  border-bottom: 2px @Cmainlightlightl solid;
+  padding: 15px 1%;
+}
+
+h4 {
+    border-bottom: 1px solid @Cinvert;
+    padding: 10px 0;
+    margin: 20px 0;
+    color: @Cinvert;
+    a.anchor {
+        color: @Cinvert;
+    }
+}
+
+.list-group {
+    .list-group-item {
+        background-color: @Cmainlight;
+        border-color: black;
+    }
+    &.list-group-big .list-group-item {
+        padding: 25px;
+    }
+    a.list-group-item {
+        color: @Csecondlight;
+        &:hover {
+            background-color: @Cmain;
+            color: @Csecond;
+        }
+    }
+}
+
+
+.well {
+    background-color: @Cmaindark;
+    border-color: black;
+    color: @Cmainlightlightl;
+    strong {
+        color: @Cinvert;
+    }
+    code {
+        background-color: @Cmain;
+    }
+    hr {
+        border-color: @Cseconddark;
+    }
+    h3 {
+        margin: 5px 0 15px 0;
+        border: 0;
+        padding: 0;
+    }
+    a {
+        color: @Csecond;
+    }
+    a.btn {
+        color: white;
+    }
+    small {
+        display: block;
+        padding: 0 10px;
+        font-style: italic;
+    }
+    &.example {
+        padding-top: 40px;
+        margin-bottom: 130px;
+        pre {
+            margin: 50px;
+            margin-bottom: 30px;
+            font-size: 1.5em;
+        }
+        .btn {
+            margin-right: 50px;
+            margin-bottom: 20px;
+        }
+    }
+    &.well-with-icon {
+        min-height: 136px;
+        .pull-right, .pull-left {
+            background-color: @Csecond;
+            color: @Cinvert;
+            padding: 10px;
+            border-radius: 5px;
+            margin: 5px;
+        }
+        .pull-right {
+            margin-left: 20px;
+        }
+        .pull-left {
+            margin-right: 20px;
+        }
+    }
+}
+
+a.well {
+    display: block;
+    &:hover {
+        text-decoration: none;
+        opacity: 0.8;
+    }
+}
+
+.info, .warning {
+    margin: 10px;
+    padding: 10px;
+    background-color: @Cmainlight;
+    color: @Cinvert;
+    code {
+        background-color: @Cmain;
+    }
+}
+
+.info {
+    border-left: 10px @Csecond solid;
+}
+
+.warning {
+    border-left: 10px @Cwarning solid;
+}
+
+.with-icon {
+    padding: 30px;
+    .pull-left {
+        padding-right: 30px;
+    }
+    .pull-right {
+        padding-left: 30px;
+    }
+}
+
+dd {
+    margin-left: 20px;
+}
+
+code {
+    background-color: @Cmaindark;
+    color: @Csecondlight;
+    display: inline-block;
+    margin: 5px;
+}
+
+.table {
+    margin: 20px 0;
+    border-radius: 4px;
+    // Stripes
+    > tbody > tr:nth-child(odd) {
+        > td {
+            background-color: @Cmaindark;
+        }
+        > th {
+            background-color: @Cmain;
+        }
+    }
+    > tbody > tr:nth-child(even) {
+        > td {
+            background-color: @Cmainlight;
+        }
+    }
+    // Cells
+    > thead,
+    > tbody,
+    > tfoot {
+        > tr {
+            > th,
+            > td {
+                border-top: none;
+            }
+            > th {
+                background-color: @Cmainlightlight;
+            }
+        }
+    }
+    // Table headings
+    > thead {
+        > tr {
+            > th {
+                // Bottom align for column headings
+                border-bottom: 2px solid @Cmainlightlightl;
+            }
+        }
+    }
+    > tbody {
+        > tr.table-heading {
+            // These special rules are useful for long headings in <tbody>
+            // Headings in <thead> or row headings are handled already.
+            > th {
+                border-bottom: 2px solid @Cmainlightlightl;
+                background-color: @Cmainlightlight;
+            }
+        }
+    }
+    // Account for multiple tbody instances
+    > tbody + tbody {
+        border-top: 2px solid @Cmaindarkdark;
+    }
+}
+
+// This adds borders to the table elements. Nothing is using it right now so
+// it is commented out.
+/*
+.table-bordered {
+    border: 1px solid @Cmaindarkdark;
+    > thead,
+    > tbody,
+    > tfoot {
+        > tr {
+            > th,
+            > td {
+                border: 1px solid @Cmaindarkdark;
+            }
+            > th {
+                background-color: @Cmainlightlight;
+                // Bottom align for column headings
+                border-bottom: 2px solid @Cmainlightlightl;
+            }
+        }
+    }
+    > thead > tr {
+        > th,
+        > td {
+            border-bottom-width: 2px;
+        }
+    }
+}
+*/
+
+.table-responsive {
+    border: none;
+}
+
+// ************************************************************************* //
+// Menu side bar nav
+
+#sidebar-wrapper, .navbar {
+    background-color: @Cmaindarkdark;
+    overflow-x: hidden;
+    .sidebar-brand, .navbar-brand {
+        img {
+            opacity: 0.6;
+            margin-right: 8px;
+        }
+        &:hover {
+            color: #fff;
+            img {
+                opacity: 1;
+            }
+        }
+    }
+    .sidebar-nav {
+        li ul {
+            list-style-type: none;
+            padding: 0;
+            li {
+                line-height: 20px;
+                a {
+                    padding-left: 20px;
+                }
+            }
+        }
+    }
+}
+
+.content-header {
+    height: auto;
+    background-color: @Cmaindark;
+    h1 {
+        color: @Cinvert;
+        display: block;
+        margin: 0;
+        margin-bottom: 20px;
+        line-height: normal;
+        border-bottom: none;
+    }
+}
+
+// ************************************************************************* //
+// Download & Index page
+
+#download, #index {
+    .btn-download-wrapper {
+        text-align: center;
+        margin: 160px auto;
+        .btn {
+            font-size: 3em;
+            padding: 3%;
+            display: inline-block;
+            margin-bottom: 5px;
+        }
+        small {
+            display: block;
+            font-size: 0.4em;
+        }
+    }
+    h2.description {
+        color: @Cinvert;
+        font-size: 2em;
+        font-weight: bold;
+        margin: 120px 50px;
+        line-height: 2em;
+        .label {
+            font-size: 0.5em;
+        }
+    }
+}
+
+#download {
+
+    h4 {
+        margin-top: 180px;
+    }
+    h4.first {
+        margin-top: 20px;
+        small {
+            color: inherit;
+            font-size: 1em;
+        }
+    }
+
+    .btn-download-wrapper {
+        margin: 40px auto;
+    }
+    .os-selector {
+        text-align: center;
+        color: @Cinvert;
+        margin: 30px 0;
+        a.btn-build {
+            color: @Cinvert;
+            display: block;
+            padding: 20px;
+            border-radius: 2px;
+        }
+        @linuxcolor: #e43;
+        @windowscolor: #06a;
+        @maccolor: darkgrey;
+        .btn-build[href="#build-linux"] {
+            background-color: @linuxcolor;
+            &:hover {
+                color: @linuxcolor;
+                background-color: @Cinvert;
+            }
+        }
+        .btn-build[href="#build-windows"] {
+            background-color: @windowscolor;
+            &:hover {
+                color: @windowscolor;
+                background-color: @Cinvert;
+            }
+        }
+        .btn-build[href="#build-mac"] {
+            background-color: @maccolor;
+            &:hover {
+                color: @maccolor;
+                background-color: @Cinvert;
+            }
+        }
+        .tab-content {
+            margin-top: 20px;
+        }
+        #build-linux {
+            h3 {
+                color: @linuxcolor;
+            }
+        }
+        #build-windows {
+            h3 {
+                color: @windowscolor;
+            }
+        }
+        #build-mac {
+            h3 {
+                color: @maccolor;
+            }
+        }
+    }
+}
+
+// ************************************************************************* //
+// Footer
+
+footer {
+    background-color: @Cmaindark;
+    border-top: 1px @Cborder solid;
+    padding: 20px ((100%-@Smain)/2);
+    a {
+        display: block;
+    }
+    img[alt="FFmpeg"] {
+        width: 50%;
+        display: block;
+        margin: auto;
+    }
+}
diff --git a/debian/patches/0001-arm-thumb2-blx.patch b/debian/patches/0001-arm-thumb2-blx.patch
new file mode 100644
index 0000000000..07025ecfe1
--- /dev/null
+++ b/debian/patches/0001-arm-thumb2-blx.patch
@@ -0,0 +1,80 @@
+Description: Fix SIGBUS on armhf when compiled with binutils 2.29
+ In binutils 2.29, the behavior of the ADR instruction changed so that 1 is
+ added to the address of a Thumb function (previously nothing was added). This
+ allows the loaded address to be passed to a BLX instruction and the correct
+ mode change will occur.
+ .
+ So that the behavior matches in binutils 2.29 and pre-2.29:
+ - Use .eqv to clear the function attribute from a symbol
+ - This allows us to always add 1 to the symbol when in Thumb mode and get the
+   correct result.
+ .
+ See: https://sourceware.org/bugzilla/show_bug.cgi?id=21458
+ Thanks to Jiong Wang for original idea to solve this.
+Author: James Cowgill <jcowgill@debian.org>
+Bug: https://trac.ffmpeg.org/ticket/6571
+Bug-Debian: https://bugs.debian.org/870622
+---
+This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
+--- a/libavcodec/arm/h264idct_neon.S
++++ b/libavcodec/arm/h264idct_neon.S
+@@ -20,6 +20,15 @@
+ 
+ #include "libavutil/arm/asm.S"
+ 
++# These .eqv clear the function attribute allowing the +CONFIG_THUMB hack to
++# work on old and new binutils.
++#
++# See: https://sourceware.org/bugzilla/show_bug.cgi?id=21458
++.eqv wfa_ff_h264_idct_add_neon,     X(ff_h264_idct_add_neon)
++.eqv wfa_ff_h264_idct_dc_add_neon,  X(ff_h264_idct_dc_add_neon)
++.eqv wfa_ff_h264_idct8_add_neon,    X(ff_h264_idct8_add_neon)
++.eqv wfa_ff_h264_idct8_dc_add_neon, X(ff_h264_idct8_dc_add_neon)
++
+ function ff_h264_idct_add_neon, export=1
+         vld1.64         {d0-d3},  [r1,:128]
+         vmov.i16        q15, #0
+@@ -113,8 +122,8 @@ function ff_h264_idct_add16_neon, export
+         movne           lr,  #0
+         cmp             lr,  #0
+         ite             ne
+-        adrne           lr,  X(ff_h264_idct_dc_add_neon) + CONFIG_THUMB
+-        adreq           lr,  X(ff_h264_idct_add_neon)    + CONFIG_THUMB
++        adrne           lr,  wfa_ff_h264_idct_dc_add_neon + CONFIG_THUMB
++        adreq           lr,  wfa_ff_h264_idct_add_neon    + CONFIG_THUMB
+         blx             lr
+ 2:      subs            ip,  ip,  #1
+         add             r1,  r1,  #32
+@@ -138,8 +147,8 @@ function ff_h264_idct_add16intra_neon, e
+         cmp             r8,  #0
+         ldrsh           r8,  [r1]
+         iteet           ne
+-        adrne           lr,  X(ff_h264_idct_add_neon)    + CONFIG_THUMB
+-        adreq           lr,  X(ff_h264_idct_dc_add_neon) + CONFIG_THUMB
++        adrne           lr,  wfa_ff_h264_idct_add_neon    + CONFIG_THUMB
++        adreq           lr,  wfa_ff_h264_idct_dc_add_neon + CONFIG_THUMB
+         cmpeq           r8,  #0
+         blxne           lr
+         subs            ip,  ip,  #1
+@@ -166,8 +175,8 @@ function ff_h264_idct_add8_neon, export=
+         cmp             r8,  #0
+         ldrsh           r8,  [r1]
+         iteet           ne
+-        adrne           lr,  X(ff_h264_idct_add_neon)    + CONFIG_THUMB
+-        adreq           lr,  X(ff_h264_idct_dc_add_neon) + CONFIG_THUMB
++        adrne           lr,  wfa_ff_h264_idct_add_neon    + CONFIG_THUMB
++        adreq           lr,  wfa_ff_h264_idct_dc_add_neon + CONFIG_THUMB
+         cmpeq           r8,  #0
+         blxne           lr
+         add             r12, r12, #1
+@@ -388,8 +397,8 @@ function ff_h264_idct8_add4_neon, export
+         movne           lr,  #0
+         cmp             lr,  #0
+         ite             ne
+-        adrne           lr,  X(ff_h264_idct8_dc_add_neon) + CONFIG_THUMB
+-        adreq           lr,  X(ff_h264_idct8_add_neon)    + CONFIG_THUMB
++        adrne           lr,  wfa_ff_h264_idct8_dc_add_neon + CONFIG_THUMB
++        adreq           lr,  wfa_ff_h264_idct8_add_neon    + CONFIG_THUMB
+         blx             lr
+ 2:      subs            r12, r12, #4
+         add             r1,  r1,  #128
diff --git a/debian/patches/0004-avformat-dashenc-fix-min_seg_duration-option-size.patch b/debian/patches/0004-avformat-dashenc-fix-min_seg_duration-option-size.patch
new file mode 100644
index 0000000000..71d3382202
--- /dev/null
+++ b/debian/patches/0004-avformat-dashenc-fix-min_seg_duration-option-size.patch
@@ -0,0 +1,31 @@
+From 7dff5e53fe875d847edfc82f18ba8e72ec90992c Mon Sep 17 00:00:00 2001
+From: James Cowgill <jcowgill@debian.org>
+Date: Sat, 18 Nov 2017 14:49:31 +0000
+Subject: [PATCH] avformat/dashenc: fix min_seg_duration option size
+
+In the DASHContext structure, min_seg_duration is declared as an int,
+but the AVOption list claimed it was an INT64. Change the option list
+to use the correct size, which should fix some initialization errors
+seen on big-endian platforms.
+
+Signed-off-by: James Cowgill <jcowgill@debian.org>
+---
+ libavformat/dashenc.c | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/libavformat/dashenc.c b/libavformat/dashenc.c
+index d5554d1df0..ddad3351fd 100644
+--- a/libavformat/dashenc.c
++++ b/libavformat/dashenc.c
+@@ -1181,7 +1181,7 @@ static const AVOption options[] = {
+     { "adaptation_sets", "Adaptation sets. Syntax: id=0,streams=0,1,2 id=1,streams=3,4 and so on", OFFSET(adaptation_sets), AV_OPT_TYPE_STRING, { 0 }, 0, 0, AV_OPT_FLAG_ENCODING_PARAM },
+     { "window_size", "number of segments kept in the manifest", OFFSET(window_size), AV_OPT_TYPE_INT, { .i64 = 0 }, 0, INT_MAX, E },
+     { "extra_window_size", "number of segments kept outside of the manifest before removing from disk", OFFSET(extra_window_size), AV_OPT_TYPE_INT, { .i64 = 5 }, 0, INT_MAX, E },
+-    { "min_seg_duration", "minimum segment duration (in microseconds)", OFFSET(min_seg_duration), AV_OPT_TYPE_INT64, { .i64 = 5000000 }, 0, INT_MAX, E },
++    { "min_seg_duration", "minimum segment duration (in microseconds)", OFFSET(min_seg_duration), AV_OPT_TYPE_INT, { .i64 = 5000000 }, 0, INT_MAX, E },
+     { "remove_at_exit", "remove all segments when finished", OFFSET(remove_at_exit), AV_OPT_TYPE_BOOL, { .i64 = 0 }, 0, 1, E },
+     { "use_template", "Use SegmentTemplate instead of SegmentList", OFFSET(use_template), AV_OPT_TYPE_BOOL, { .i64 = 1 }, 0, 1, E },
+     { "use_timeline", "Use SegmentTimeline in SegmentTemplate", OFFSET(use_timeline), AV_OPT_TYPE_BOOL, { .i64 = 1 }, 0, 1, E },
+-- 
+2.15.0
+
diff --git a/debian/patches/0005-float-dsp-i386.patch b/debian/patches/0005-float-dsp-i386.patch
new file mode 100644
index 0000000000..f373167662
--- /dev/null
+++ b/debian/patches/0005-float-dsp-i386.patch
@@ -0,0 +1,57 @@
+Description: Workaround checkasm failures on i386 by forcing x87 FPU precision
+ On i386, the float_dsp.vector_dmul test randomly fails if the x87 FPU
+ calculates a slightly different result compared to the optimized SSE routines.
+ .
+ Workaround these failures by setting the x87 FPCW register to round all results
+ to double precision.
+Author: James Cowgill <jcowgill@debian.org>
+Bug-Debian: https://bugs.debian.org/882075
+---
+This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
+--- a/tests/checkasm/float_dsp.c
++++ b/tests/checkasm/float_dsp.c
+@@ -154,6 +154,20 @@ static void test_vector_fmac_scalar(cons
+     bench_new(odst, src0, src1[0], LEN);
+ }
+ 
++#if defined(__i386__) && !defined(__SSE_MATH__)
++static inline unsigned short get_x86_fpcw(void)
++{
++    unsigned short fpcw;
++    __asm__ volatile ("fstcw %0":"=m"(fpcw));
++    return fpcw;
++}
++
++static inline void set_x86_fpcw(unsigned short fpcw)
++{
++    __asm__ volatile ("fldcw %0"::"m"(fpcw));
++}
++#endif
++
+ static void test_vector_dmul_scalar(const double *src0, const double *src1)
+ {
+     LOCAL_ALIGNED_32(double, cdst, [LEN]);
+@@ -162,8 +176,23 @@ static void test_vector_dmul_scalar(cons
+ 
+     declare_func(void, double *dst, const double *src, double mul, int len);
+ 
++#if defined(__i386__) && !defined(__SSE_MATH__)
++    /*
++     * On x86, if the C code computes the multiplcations using the x87 FPU, and
++     * the optimized version computes them using SSE, results may be different.
++     *
++     * Workaround this by forcing the x87 FPU to round to double precision by
++     * setting the FPCW register.
++     */
++
++    unsigned short old_fpcw = get_x86_fpcw();
++    set_x86_fpcw(0x27F);
++#endif
+     call_ref(cdst, src0, src1[0], LEN);
+     call_new(odst, src0, src1[0], LEN);
++#if defined(__i386__) && !defined(__SSE_MATH__)
++    set_x86_fpcw(old_fpcw);
++#endif
+     for (i = 0; i < LEN; i++) {
+         if (!double_near_abs_eps(cdst[i], odst[i], DBL_EPSILON)) {
+             fprintf(stderr, "%d: %- .12f - %- .12f = % .12g\n", i,
diff --git a/debian/patches/series b/debian/patches/series
new file mode 100644
index 0000000000..d75efb77ce
--- /dev/null
+++ b/debian/patches/series
@@ -0,0 +1,3 @@
+0001-arm-thumb2-blx.patch
+0004-avformat-dashenc-fix-min_seg_duration-option-size.patch
+0005-float-dsp-i386.patch
diff --git a/debian/qt-faststart.1 b/debian/qt-faststart.1
new file mode 100644
index 0000000000..b78da3d351
--- /dev/null
+++ b/debian/qt-faststart.1
@@ -0,0 +1,36 @@
+.\"                                      Hey, EMACS: -*- nroff -*-
+.\" First parameter, NAME, should be all caps
+.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
+.\" other parameters are allowed: see man(7), man(1)
+.TH QT-FASTSTART 1 "May 10, 2009"
+.\" Please adjust this date whenever revising the manpage.
+.\"
+.\" Some roff macros, for reference:
+.\" .nh        disable hyphenation
+.\" .hy        enable hyphenation
+.\" .ad l      left justify
+.\" .ad b      justify to both left and right margins
+.\" .nf        disable filling
+.\" .fi        enable filling
+.\" .br        insert line break
+.\" .sp <n>    insert n+1 empty lines
+.\" for manpage-specific macros, see man(7)
+.SH NAME
+qt-faststart \- utility for Quicktime files
+.SH SYNOPSIS
+.B qt-faststart
+.br
+.SH DESCRIPTION
+\fBqt-faststart\fP is a utility that rearranges a Quicktime file such that the
+moov atom is in front of the data, thus facilitating network streaming.
+.SH OPTIONS
+Options processed by the executable:
+.TP
+\fB\<infile.mov>\fR
+The source Quicktime file.
+.TP
+\fB\<outfile.mov>\fR
+The destination Quicktime file.
+.SH AUTHOR
+This manual page was written by Andres Mejia <mcitadel@gmail.com>
+for the Debian GNU/Linux system, but may be used by others.
diff --git a/debian/rules b/debian/rules
new file mode 100755
index 0000000000..4906d5f0a4
--- /dev/null
+++ b/debian/rules
@@ -0,0 +1,281 @@
+#!/usr/bin/make -f
+
+export V=1
+
+# sets DEBIAN_VERSION variable
+include /usr/share/dpkg/pkg-info.mk
+
+# Get the Debian version revision:
+DEB_REVISION := $(word 2, $(subst -, ,$(DEB_VERSION)))
+
+# sets DEB_HOST_* variables
+include /usr/share/dpkg/architecture.mk
+
+# Ubuntu ld adds -Bsymbolic-functions by default, but that prevents FFmpeg from building.
+export DEB_LDFLAGS_MAINT_STRIP=-Wl,-Bsymbolic-functions
+
+# Package name for the extra flavor.
+EXTRA_PKGS := $(shell sed -nr 's/^Package:[[:space:]]*(.*extra[0-9]+)[[:space:]]*$$/\1/p' debian/control)
+FLAVORS = standard extra static
+
+# Enable as many features as possible, as long as the result is still GPLv2+ (a GPLv3+ variant is built as libavcodec-extra/libavfilter-extra flavor).
+# The following flags (and build-dependencies) are not added, because they would require a libavformat-extra flavor:
+#   --enable-libsmbclient           (libsmbclient-dev [!hurd-i386 !m68k !sparc64])
+# The following flags are not added, because the necessary libraries are not in Debian:
+#   --enable-decklink
+#   --enable-libcelt                (see #676592: removed from Debian as abandoned upstream, replaced by opus)
+#   --enable-libilbc                (see #675959 for the RFP bug)
+#   --enable-libkvazaar
+#   --enable-libmfx
+#   --enable-libopenh264
+#   --enable-libvidstab             (see #709193 for the RFP bug)
+#   --enable-libvmaf
+#   --enable-libxavs
+#   --enable-libzimg
+# The following flags are not added for various reasons:
+#   --enable-librtmp                ffmpeg has better built-in RTMP support with listen mode.
+#   --enable-libmodplug             see #849840: replaced with libopenmpt
+#   --enable-libv4l2                This is only needed for very old devices and may cause problems for others.
+#                                   Should anyone need it, using LD_PRELOAD pointing on libv4l2 has the same effect.
+#   --enable-opencl                 This is considered an experimental API.
+CONFIG := --prefix=/usr \
+	--extra-version="$(DEB_REVISION)" \
+	--toolchain=hardened \
+	--libdir=/usr/lib/$(DEB_HOST_MULTIARCH) \
+	--incdir=/usr/include/$(DEB_HOST_MULTIARCH) \
+	--enable-gpl \
+	--disable-stripping \
+	--enable-avresample \
+	--enable-avisynth \
+	--enable-gnutls \
+	--enable-ladspa \
+	--enable-libass \
+	--enable-libbluray \
+	--enable-libbs2b \
+	--enable-libcaca \
+	--enable-libcdio \
+	--enable-libflite \
+	--enable-libfontconfig \
+	--enable-libfreetype \
+	--enable-libfribidi \
+	--enable-libgme \
+	--enable-libgsm \
+	--enable-libmp3lame \
+	--enable-libopenjpeg \
+	--enable-libopenmpt \
+	--enable-libopus \
+	--enable-libpulse \
+	--enable-librubberband \
+	--enable-librsvg \
+	--enable-libshine \
+	--enable-libsnappy \
+	--enable-libsoxr \
+	--enable-libspeex \
+	--enable-libssh \
+	--enable-libtheora \
+	--enable-libtwolame \
+	--enable-libvorbis \
+	--enable-libvpx \
+	--enable-libwavpack \
+	--enable-libwebp \
+	--enable-libx265 \
+	--enable-libxml2 \
+	--enable-libxvid \
+	--enable-libzmq \
+	--enable-libzvbi \
+	--enable-omx \
+	--enable-openal \
+	--enable-opengl \
+	--enable-sdl2 \
+	--enable-version3 \
+	--enable-rkmpp
+
+# The standard configuration only uses the shared CONFIG.
+CONFIG_standard = --enable-shared
+
+# With these enabled, resulting binaries are effectively licensed as GPLv3+.
+CONFIG_extra = --enable-shared \
+	--enable-version3 \
+	--disable-doc \
+	--disable-programs \
+	--enable-libopencore_amrnb \
+	--enable-libopencore_amrwb \
+	--enable-libtesseract \
+	--enable-libvo_amrwbenc
+
+# The static libraries should not be built with PIC.
+CONFIG_static = --disable-pic \
+	--disable-doc \
+	--disable-programs
+
+# Disable optimizations if requested.
+ifneq (,$(filter $(DEB_BUILD_OPTIONS),noopt))
+	CONFIG += --disable-optimizations
+endif
+
+# Respect CC/CXX from the environment, if they differ from the default.
+# Don't set them if they equal the default, because that disables autodetection needed for cross-building.
+ifneq ($(CC),cc)
+	CONFIG += --cc=$(CC)
+endif
+ifneq ($(CXX),g++)
+	CONFIG += --cxx=$(CXX)
+endif
+
+# Some libraries are built only on linux.
+ifeq ($(DEB_HOST_ARCH_OS),linux)
+	CONFIG += --enable-libdc1394 \
+		--enable-libdrm \
+		--enable-libiec61883
+endif
+
+# ffmpeg is involed in build-dependency cycles with opencv, x264 and chromaprint, so disable them in stage one.
+# Also disable frei0r, which build-depends on opencv.
+ifneq ($(filter stage1,$(DEB_BUILD_PROFILES)),)
+	CONFIG += --disable-frei0r \
+		--disable-chromaprint \
+		--disable-libopencv \
+		--disable-libx264
+else
+	CONFIG += --enable-chromaprint \
+		--enable-frei0r \
+		--enable-libopencv \
+		--enable-libx264
+endif
+
+# Disable altivec optimizations on powerpc, because they are not always available on this architecture.
+ifeq ($(DEB_HOST_ARCH),powerpc)
+	CONFIG += --disable-altivec
+	# Build an altivec flavor of the libraries on powerpc.
+	# This works around the problem that runtime cpu detection on powerpc currently does not work,
+	# because, if altivec is enabled, all files are build with '-maltivec' so that the compiler inserts altivec instructions, wherever it likes.
+	CONFIG_altivec = --enable-shared \
+		--enable-altivec \
+		--disable-doc \
+		--disable-programs
+	CONFIG_altivec-extra = $(CONFIG_altivec) $(CONFIG_extra)
+	FLAVORS += altivec altivec-extra
+endif
+
+# Disable assembly optimizations on x32, because they don't work (yet).
+ifneq (,$(filter $(DEB_HOST_ARCH),x32))
+	CONFIG += --disable-asm
+endif
+
+# Disable some optimizations on mips*, because they are not always available on these architectures
+ifneq (,$(filter $(DEB_HOST_ARCH),mips mipsel mips64 mips64el))
+	CONFIG += --disable-mipsdsp \
+		--disable-mipsdspr2 \
+		--disable-loongson2 \
+		--disable-loongson3 \
+		--disable-mmi \
+		--disable-mips32r5 \
+		--disable-mips32r6 \
+		--disable-mips64r6 \
+		--disable-msa
+endif
+
+# Disable mipsfpu on mips and mipsel, because it is not compatible with the FPXX ABI
+ifneq (,$(filter $(DEB_HOST_ARCH),mips mipsel))
+	CONFIG += --disable-mipsfpu
+endif
+
+# Set cross-build prefix for compiler, pkg-config...
+# Cross-building also requires to manually set architecture/OS.
+ifneq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
+	CONFIG += --cross-prefix=$(DEB_HOST_GNU_TYPE)- \
+		--arch=$(DEB_HOST_ARCH) \
+		--target-os=$(DEB_HOST_ARCH_OS)
+endif
+
+# Use the default debhelper scripts, where possible.
+%:
+	dh $@
+
+# Add configuration options:
+override_dh_auto_configure:
+	$(foreach flavor,$(FLAVORS),mkdir -p debian/$(flavor);)
+	$(foreach flavor,$(FLAVORS),set -e; echo " *** $(flavor) ***"; cd debian/$(flavor); ../../configure $(CONFIG) $(CONFIG_$(flavor)) || (cat config.log && exit 1); cd ../.. ;)
+
+# Remove the subdirectories generated for the flavors.
+override_dh_auto_clean:
+	$(foreach flavor,$(FLAVORS),[ ! -d debian/$(flavor) ] || rm -r debian/$(flavor);)
+
+# Create doxygen documentation:
+override_dh_auto_build-indep:
+	dh_auto_build -i --sourcedirectory=debian/standard -- apidoc
+	# Create the minified CSS files.
+	lessc debian/missing-sources/ffmpeg-web/src/less/style.less | cleancss > debian/standard/doc/style.min.css
+
+override_dh_auto_build-arch:
+	# Copy built object files to avoid building them again for the extra flavor.
+	# Build qt-faststart here, to make it possible to build with 'nocheck'.
+	set -e && for flavor in $(FLAVORS); do \
+		echo " *** $$flavor ***"; \
+		if echo "$$flavor" | grep -q "extra"; then \
+			subdir=`[ "$$flavor" = "extra" ] && echo "debian/standard/" || echo "debian/altivec/"`; \
+			for dir in `cd ./$$subdir; find libavcodec libavdevice libavfilter libavformat libavresample libavutil libpostproc libswscale libswresample -type d`; do \
+				mkdir -p debian/"$$flavor"/"$$dir"; \
+				echo "$$subdir$$dir"/*.o | grep -q '*' || cp "$$subdir$$dir"/*.o debian/"$$flavor"/"$$dir"; \
+			done; \
+			rm debian/"$$flavor"/libavcodec/allcodecs.o; \
+			rm debian/"$$flavor"/libavfilter/allfilters.o; \
+		fi; \
+		if [ "$$flavor" = "standard" ]; then \
+			$(MAKE) -C debian/standard tools/qt-faststart; \
+		fi; \
+		dh_auto_build -a --sourcedirectory=debian/"$$flavor" || (cat debian/"$$flavor"/config.log && exit 1); \
+	done
+
+# Set the library path for the dynamic linker, because the tests otherwise don't find the libraries.
+override_dh_auto_test-arch:
+	export LD_LIBRARY_PATH="libavcodec:libavdevice:libavfilter:libavformat:libavresample:libavutil:libpostproc:libswresample:libswscale"; \
+		dh_auto_test -a --sourcedirectory=debian/standard -- -k
+
+# No tests for indep build.
+override_dh_auto_test-indep:
+
+override_dh_auto_install-arch:
+	dh_auto_install -a --sourcedirectory=debian/standard
+ifeq ($(DEB_HOST_ARCH),powerpc)
+	install -d debian/tmp/usr/lib/$(DEB_HOST_MULTIARCH)/altivec
+	install -m 644 debian/altivec/*/*.so.* debian/tmp/usr/lib/$(DEB_HOST_MULTIARCH)/altivec
+endif
+	dh_auto_install -a --sourcedirectory=debian/extra --destdir=debian/tmp/extra
+ifeq ($(DEB_HOST_ARCH),powerpc)
+	install -d debian/tmp/extra/usr/lib/$(DEB_HOST_MULTIARCH)/altivec
+	install -m 644 debian/altivec-extra/*/*.so.* debian/tmp/extra/usr/lib/$(DEB_HOST_MULTIARCH)/altivec
+endif
+	# Use the static libraries from the --disable-pic build
+	install -m 644 debian/static/*/lib*.a debian/tmp/usr/lib/$(DEB_HOST_MULTIARCH)
+
+override_dh_auto_install-indep:
+	dh_auto_install -i --sourcedirectory=debian/standard
+
+override_dh_install:
+	dh_install $(addprefix -p,$(EXTRA_PKGS)) --sourcedir=debian/tmp/extra
+	dh_install --remaining-packages
+
+override_dh_makeshlibs:
+	set -e && for pkg in $(shell dh_listpackages -a) ; do \
+		case $$pkg in \
+			ffmpeg|*-dev) \
+				continue \
+				;; \
+			*avcodec*) \
+				soversion=$$(echo $$pkg | sed -nr 's/^[^0-9]*([0-9]+)$$/\1/p'); \
+				dh_makeshlibs -p $$pkg -V"libavcodec$$soversion (>= ${DEB_VERSION_EPOCH_UPSTREAM}) | libavcodec-extra$$soversion (>= ${DEB_VERSION_EPOCH_UPSTREAM})" \
+				;; \
+			*avfilter*) \
+				soversion=$$(echo $$pkg | sed -nr 's/^[^0-9]*([0-9]+)$$/\1/p'); \
+				dh_makeshlibs -p $$pkg -V"libavfilter$$soversion (>= ${DEB_VERSION_EPOCH_UPSTREAM}) | libavfilter-extra$$soversion (>= ${DEB_VERSION_EPOCH_UPSTREAM})" \
+				;; \
+			*) \
+				dh_makeshlibs -p $$pkg -V \
+				;; \
+		esac \
+	done
+
+# Don't compress the example source code files.
+override_dh_compress:
+	dh_compress -Xexamples
diff --git a/debian/source/format b/debian/source/format
new file mode 100644
index 0000000000..163aaf8d82
--- /dev/null
+++ b/debian/source/format
@@ -0,0 +1 @@
+3.0 (quilt)
diff --git a/debian/tests/control b/debian/tests/control
new file mode 100644
index 0000000000..96c4a03c28
--- /dev/null
+++ b/debian/tests/control
@@ -0,0 +1,8 @@
+Tests: examples
+Depends: build-essential, ffmpeg-doc, libavdevice-dev, libavformat-dev, libavfilter-dev, libavcodec-dev, libswresample-dev, libswscale-dev, libavutil-dev, pkg-config
+
+Tests: encdec
+Depends: ffmpeg
+
+Tests: encdec-extra
+Depends: ffmpeg, libavcodec-extra
diff --git a/debian/tests/encdec b/debian/tests/encdec
new file mode 100755
index 0000000000..d6d8c157fe
--- /dev/null
+++ b/debian/tests/encdec
@@ -0,0 +1,443 @@
+#!/bin/bash
+
+set -e
+
+# test encoders and decoders
+
+SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
+TEST_NAME="$1"
+[ ! -z $TEST_NAME ] || TEST_NAME=${BASH_SOURCE[0]##*/}
+ENCDECLIST="$SCRIPT_DIR/${TEST_NAME}"_list.txt
+TEST_DIR="$ADTTMP/test"
+
+encode_file() {
+    test=$1
+    dir=$2
+    mux=${test%%;*}
+    tenc=${test##*;}
+    type=${tenc%%=*}
+    enc=${tenc##*=}
+    codec=${enc%%:*}
+    encoder=${enc##*:}
+    file_name="$dir/$encoder.$mux"
+    opts=
+    # some codecs require extra options
+    if [ "$codec" == "avui" ]; then
+        opts="-s 720x486"
+    elif [ "$codec" == "dnxhd" ]; then
+        opts="-s 1280x720 -b:v 90M -pix_fmt yuv422p"
+    elif [ "$codec" == "dvvideo" ]; then
+        opts="-s 720x480 -pix_fmt yuv411p"
+    elif [ "$codec" == "h261" ]; then
+        opts="-s 176x144"
+    elif [ "$codec" == "h263" ]; then
+        opts="-s 128x96"
+    elif [ "$codec" == "hevc" ]; then
+        opts="-s 64x64"
+    elif [ "$codec" == "roq" ]; then
+        opts="-s 128x128"
+    elif [ "$codec" == "xface" ]; then
+        opts="-s 48x48"
+    elif [ "$codec" == "g723_1" ]; then
+        opts="-ar 8000 -b:a 6300"
+    elif [ "$codec" == "gsm" ]; then
+        opts="-ar 8000 -b:a 13000"
+    elif [ "$codec" == "gsm_ms" ]; then
+        opts="-ar 8000 -b:a 13000"
+    elif [ "$codec" == "roq_dpcm" ]; then
+        opts="-ar 22050"
+    elif [ "$codec" == "s302m" ]; then
+        opts="-ac 2"
+    elif [ "$codec" == "vorbis" ]; then
+        opts="-ac 2"
+    fi
+    src=
+    if [ "$type" = "v" ]; then
+        src=testsrc=s=32x32:d=0.1
+    elif [ "$type" = "a" ]; then
+        src=sine=d=0.1
+    else
+        # unknown codec type
+        return 10
+    fi
+    echo -e "trying muxer '$mux' with '$type' encoder '$encoder' for codec '$codec'\n"
+    ret=0
+    CMD="ffmpeg -f lavfi -i $src -strict -2 $opts -c:$type $encoder -f $mux $file_name -y -hide_banner -nostdin"
+    echo $CMD
+    $CMD 2>&1 || ret=$?
+    return $ret
+}
+
+probe_file() {
+    file_name=$1
+    test=$2
+    mux=${test%%;*}
+    tenc=${test##*;}
+    enc=${tenc##*=}
+    codec=${enc%%:*}
+
+    # determine the codec/format
+    ret=0
+    info=$(ffprobe -hide_banner -strict -2 "$file_name" 2>&1) || ret=$?
+    if [ "$ret" != 0 ]; then
+        echo "probing failed: $ret"
+        return "$ret"
+    fi
+    # file formats can be a comma-separated list, e.g. matroska,webm
+    file_formats=$(echo "$info" | grep "Input #" | sed "s/.*Input #[0-9]*, \([^ ]*\), from.*/\1/")
+    file_formats=${file_formats//,/ }
+    # there can be multiple streams, thus multiple codecs
+    file_codecs=$(echo "$info" | grep "Stream #" | sed "s/.*Stream #.*:.*:.*: \([^ ,]*\).*/\1/")
+    same_format=
+    same_codec=
+
+    # test if the file has the correct codec/format
+    for file_format in $file_formats; do
+        if [ "$mux" == "$file_format" ]; then
+            same_format="$file_format"
+        fi
+    done
+    if [ ! "$same_format" ]; then
+        # wrong format
+        echo "file has the wrong format: $file_formats"
+        return 10
+    fi
+    for file_codec in $file_codecs; do
+        if [ "$codec" == "$file_codec" ]; then
+            same_codec="$file_codec"
+        fi
+    done
+    if [ ! "$same_codec" ]; then
+        # wrong codec
+        echo "file has the wrong codec: $file_codecs"
+        return 11
+    fi
+    return 0
+}
+
+decode_file() {
+    file_name=$1
+    ret=0
+    # The option '-t 1' is necessary, because the comfortnoise decoder never stops producing noise.
+    CMD="ffmpeg -strict -2 -i $file_name -t 1 -c:v rawvideo -c:a pcm_s32le -f nut /dev/null -y -hide_banner -nostdin"
+    echo $CMD
+    $CMD 2>&1 || ret=$?
+    return $ret
+}
+
+streamcopy_file() {
+    file_name=$1
+    test=$2
+    mux=${test%%;*}
+    file_name_copy="$file_name.copy.$mux"
+    ret=0
+    # The option '-t 1' is necessary, because the comfortnoise decoder never stops producing noise.
+    CMD="ffmpeg -strict -2 -i $file_name -t 1 -c copy -f $mux $file_name_copy -y -hide_banner -nostdin"
+    echo $CMD
+    $CMD 2>&1 || ret=$?
+    return $ret
+}
+
+list_formats() {
+    match="$1"
+    old_IFS=$IFS
+    # Set the field seperator to a newline
+    IFS="
+"
+    # Get the raw list
+    lines=$(ffmpeg -hide_banner -formats | grep "^ $match")
+    for line in $lines; do
+        item=$(echo "$line" | sed "s/^ [D ][E ] \([^ ]*\) .*/\1/")
+        item=${item%%,*}
+        echo "$item"
+    done
+    IFS=$old_IFS
+}
+
+list_codecs() {
+    what=$1
+    match="$2"
+    type="$3"
+    old_IFS=$IFS
+    # Set the field seperator to a newline
+    IFS="
+"
+    # Get the raw list
+    lines=$(ffmpeg -hide_banner -codecs | grep "^ $match$type")
+    for line in $lines; do
+        items=$(echo "$line" | grep "($what:")
+        codec=$(echo "$line" | sed "s/^ [^ ]* \([^ ]*\) .*/\1/")
+        if [ -z "$items" ]; then
+            echo "${type,,}=$codec"
+        else
+            # de/encoder(s) name(s) differ from codec name
+            items=$(echo "$items" | sed "s/.*($what: \([^)]*\) ).*/\1/")
+            IFS=" "
+            for item in $items; do
+                echo "${type,,}=$codec:$item"
+            done
+            IFS="
+"
+        fi
+    done
+    IFS=$old_IFS
+}
+
+list_muxers() {
+    muxs=$(list_formats ".E [^=]")
+    echo $muxs
+}
+
+list_demuxers() {
+    dems=$(list_formats "D. [^=]")
+    echo $dems
+}
+
+list_video_encoders() {
+    vencs=$(list_codecs encoders ".E" "V")
+    echo $vencs
+}
+
+list_video_decoders() {
+    vdecs=$(list_codecs decoders "D." "V")
+    echo $vdecs
+}
+
+list_audio_encoders() {
+    aencs=$(list_codecs encoders ".E" "A")
+    echo $aencs
+}
+
+list_audio_decoders() {
+    adecs=$(list_codecs decoders "D." "A")
+    echo $adecs
+}
+
+read_tests() {
+    filename=$1
+    old_IFS=$IFS
+    # Set the field seperator to a newline
+    IFS="
+"
+    # Get the raw list
+    lines=$(cat "$filename")
+    for line in $lines; do
+        muxer=${line%%;*}
+        tencs=${line##*;}
+        if [ "$tencs" ]; then
+            IFS=" "
+            for tenc in $tencs; do
+                echo "$muxer;$tenc"
+            done
+            IFS="
+"
+        fi
+    done
+    IFS=$old_IFS
+}
+
+echo "TEST: $TEST_NAME"
+echo -e "ADTTMP directory: $ADTTMP\n\n"
+
+mkdir -p "$TEST_DIR"
+
+ffmpeg -version 2>&1
+
+echo -e "\n"
+
+# determine the supported muxers and encoders
+echo "muxers:"
+muxs=$(list_muxers)
+echo "$muxs"
+echo -e "\n"
+
+vencs=$(list_video_encoders)
+aencs=$(list_audio_encoders)
+echo "encoders:"
+encs="$vencs $aencs"
+echo "$encs"
+echo -e "\n"
+
+for mux in $muxs; do
+    mux_tests=
+    for tenc in $encs; do
+        mux_tests="$mux_tests $mux;$tenc "
+    done
+    possible_tests="$possible_tests$mux_tests"
+done
+
+if [ -f $ENCDECLIST ]; then
+    tests=$(read_tests $ENCDECLIST)
+else
+    # create the list of working tests if it doesn't exist
+    update="true"
+    tests=$possible_tests
+fi
+
+num_tests=$(echo $tests | wc -w)
+echo -e "$num_tests tests\n"
+
+crashes=
+failures=
+skipped=
+
+num_test=0
+num_success=0
+
+for test in $tests; do
+    num_test=$((num_test + 1))
+    echo "Test $num_test:"
+    streamcopy=${test##*|}
+    if [ "$update" ]; then
+        streamcopy=1
+    fi
+    test=${test%%|*}
+    # skip the test, if the muxer/encoder is not available
+    available=$(echo "$possible_tests" | grep " $test ") || true
+    if [ ! "$available" ]; then
+        skipped="${skipped}${test}\n"
+        echo -e "SKIPPED: $test\n\n"
+        continue
+    fi
+    mux=${test%%;*}
+    tenc=${test##*;}
+    ret=0
+    # try encoding a file
+    # this also sets the file_name variable
+    encode_file $test $TEST_DIR || ret=$?
+    echo -e "\n"
+    if [ "$ret" != "0" ]; then
+        errmsg="$test; encoding return code: $ret"
+        if [ "$ret" -gt 128 ]; then
+            crashes="${crashes}${errmsg}\n"
+        else
+            failures="${failures}${errmsg}\n"
+        fi
+        echo -e "\nFAILED: $errmsg\n\n"
+        continue
+    fi
+    ret=0
+    # test if the file has the correct format/codec
+    err=$(probe_file "$file_name" $test) || ret=$?
+    if [ "$ret" != "0" ]; then
+        errmsg="$test; $err"
+        if [ "$ret" -gt 128 ]; then
+            crashes="${crashes}${errmsg}\n"
+        else
+            failures="${failures}${errmsg}\n"
+        fi
+        echo -e "\nFAILED: $errmsg\n\n"
+        continue
+    fi
+    ret=0
+    # test decoding the file
+    decode_file "$file_name" || ret=$?
+    if [ "$ret" != "0" ]; then
+        errmsg="$test; decoding return code: $ret"
+        if [ "$ret" -gt 128 ]; then
+            crashes="${crashes}${errmsg}\n"
+        else
+            failures="${failures}${errmsg}\n"
+        fi
+        echo -e "\nFAILED: $errmsg\n\n"
+        continue
+    fi
+    streamcopy_orig="$streamcopy"
+    if [ "$streamcopy" == "1" ]; then
+        ret=0
+        # test streamcopying the file
+        # this also sets the file_name_copy variable
+        echo -e "\n"
+        streamcopy_file "$file_name" "$test" || ret=$?
+        if [ "$ret" != "0" ]; then
+            errmsg="$test; streamcopy return code: $ret"
+            if [ "$ret" -gt 128 ]; then
+                crashes="${crashes}${errmsg}\n"
+            else
+                failures="${failures}${errmsg}\n"
+            fi
+            echo -e "\nFAILED: $errmsg\n\n"
+            streamcopy=0
+        fi
+    fi
+    if [ "$streamcopy" == "1" ]; then
+        ret=0
+        # test if the file has the correct format/codec
+        err=$(probe_file "$file_name_copy" $test) || ret=$?
+        if [ "$ret" != "0" ]; then
+            errmsg="$test; streamcopy: $err"
+            if [ "$ret" -gt 128 ]; then
+                crashes="${crashes}${errmsg}\n"
+            else
+                failures="${failures}${errmsg}\n"
+            fi
+            echo -e "\nFAILED: $errmsg\n\n"
+            streamcopy=0
+        fi
+    fi
+    works=$([ "$streamcopy" = "1" ] && echo works || echo fails)
+    if [ "$streamcopy_orig" = "$streamcopy" ]; then
+        echo -e "\nSUCCESS: correctly created file with format '$mux' and codec '$tenc'; streamcopying $works\n\n"
+        num_success=$((num_success + 1))
+    fi
+    if [ "$update" ]; then
+        if [ "x$last_mux" != "x$mux" ]; then
+            if [ "$last_mux" ]; then
+                # newline
+                echo "" >> $ENCDECLIST
+            fi
+            echo -n "$mux;" >> $ENCDECLIST
+        fi
+        last_mux=$mux
+        echo -n " $tenc|$streamcopy" >> $ENCDECLIST
+    fi
+done
+
+
+echo "done!"
+
+
+ret=0
+
+num_crashes=0
+num_failures=0
+num_skipped=0
+
+if [ "$crashes" ]; then
+    num_crashes=$(echo -e "$crashes" | wc -l)
+    num_crashes=$((num_crashes - 1))
+fi
+if [ "$failures" ]; then
+    num_failures=$(echo -e "$failures" | wc -l)
+    num_failures=$((num_failures - 1))
+fi
+if [ "$skipped" ]; then
+    num_skipped=$(echo -e "$skipped" | wc -l)
+    num_skipped=$((num_skipped - 1))
+fi
+
+if [ "$num_crashes" != "0" ]; then
+    ret=1
+    echo -e "\n\ncrashes: $num_crashes\n"
+    echo -e "$crashes"
+fi
+
+if [ "$num_failures" != "0" ]; then
+    ret=1
+    echo -e "\n\nfailures: $num_failures\n"
+    echo -e "$failures"
+fi
+
+if [ "$num_skipped" != "0" ]; then
+    echo -e "\n\nskipped: $num_skipped\n"
+    echo -e "$skipped"
+fi
+
+if [ "$num_success" != "0" ]; then
+    echo -e "\n\nsuccess: $num_success\n"
+else
+    ret=1
+    echo -e "\n\nno single success: something is definitely wrong\n"
+fi
+
+exit $ret
diff --git a/debian/tests/encdec-extra b/debian/tests/encdec-extra
new file mode 100755
index 0000000000..be80c748ef
--- /dev/null
+++ b/debian/tests/encdec-extra
@@ -0,0 +1,7 @@
+#!/bin/bash
+
+set -e
+
+SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
+
+"$SCRIPT_DIR"/encdec encdec-extra
diff --git a/debian/tests/encdec-extra_list.txt b/debian/tests/encdec-extra_list.txt
new file mode 100644
index 0000000000..30ebf369cd
--- /dev/null
+++ b/debian/tests/encdec-extra_list.txt
@@ -0,0 +1,13 @@
+3g2; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+3gp; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+amr; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+asf; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+avi; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+caf; a=amr_nb:libopencore_amrnb|1
+ffm; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+matroska; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+mov; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+nut; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+w64; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+wav; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
+wtv; a=amr_nb:libopencore_amrnb|1 a=amr_wb:libvo_amrwbenc|1
diff --git a/debian/tests/encdec_list.txt b/debian/tests/encdec_list.txt
new file mode 100644
index 0000000000..10d47c7a2e
--- /dev/null
+++ b/debian/tests/encdec_list.txt
@@ -0,0 +1,61 @@
+3g2; v=h263:h263|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hap|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=prores:prores|1 v=prores:prores_aw|1 v=prores:prores_ks|1 v=utvideo|1 a=aac|1
+3gp; v=h263:h263|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hap|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=prores:prores|1 v=prores:prores_aw|1 v=prores:prores_ks|1 v=utvideo|1 a=aac|1
+ac3; a=ac3:ac3|1
+adx; a=adpcm_adx|0
+aiff; a=adpcm_ima_qt|1 a=pcm_alaw|1 a=pcm_f32be|1 a=pcm_f64be|1 a=pcm_mulaw|1 a=pcm_s16be|1 a=pcm_s16le|1 a=pcm_s24be|1 a=pcm_s32be|1 a=pcm_s8|1 a=pcm_u8|1
+apng; v=apng|1
+asf; v=amv|1 v=asv1|1 v=asv2|1 v=ayuv|1 v=cinepak|1 v=cljr|1 v=dirac:vc2|1 v=dpx|1 v=dvvideo|1 v=ffv1|1 v=ffvhuff|1 v=flashsv|1 v=flv1:flv|1 v=h261|1 v=h263:h263|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=huffyuv|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=jpegls|1 v=mjpeg:mjpeg|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=msmpeg4v2|1 v=msmpeg4v3:msmpeg4|1 v=msvideo1|1 v=png|1 v=r10k|1 v=r210|1 v=snow|1 v=svq1|1 v=targa|1 v=theora:libtheora|1 v=utvideo|1 v=v210|1 v=v308|1 v=v408|1 v=v410|1 v=vp8:libvpx|1 v=vp9:libvpx-vp9|1 v=wmv1|1 v=wmv2|1 v=y41p|1 v=yuv4|1 v=zlib|1 v=zmbv|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_g722:g722|1 a=adpcm_g726:g726|1 a=adpcm_ima_wav|1 a=adpcm_ms|1 a=adpcm_swf|1 a=adpcm_yamaha|1 a=dts:dca|1 a=eac3|1 a=flac|1 a=g723_1|1 a=gsm_ms:libgsm_ms|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=pcm_alaw|1 a=pcm_f32le|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16le|1 a=pcm_s24le|1 a=pcm_s32le|1 a=pcm_s64le|1 a=pcm_u8|1 a=sonic|1 a=speex:libspeex|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1 a=wmav1|1 a=wmav2|1
+ast; a=pcm_s16be_planar|1
+au; a=adpcm_g722:g722|1 a=adpcm_g726le:g726le|1 a=pcm_alaw|1 a=pcm_f32be|1 a=pcm_f64be|1 a=pcm_mulaw|1 a=pcm_s16be|1 a=pcm_s24be|1 a=pcm_s32be|1 a=pcm_s8|1
+avi; v=amv|1 v=asv1|1 v=asv2|1 v=ayuv|1 v=cinepak|1 v=cljr|1 v=dirac:vc2|1 v=dpx|1 v=dvvideo|1 v=ffv1|1 v=ffvhuff|1 v=flashsv|1 v=flv1:flv|1 v=h261|1 v=h263:h263|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hap|1 v=huffyuv|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=jpegls|1 v=mjpeg:mjpeg|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=msmpeg4v2|1 v=msmpeg4v3:msmpeg4|1 v=msvideo1|1 v=png|1 v=prores:prores|1 v=prores:prores_aw|1 v=prores:prores_ks|1 v=r10k|1 v=r210|1 v=snow|1 v=svq1|1 v=targa|1 v=theora:libtheora|1 v=utvideo|1 v=v210|1 v=v308|1 v=v408|1 v=v410|1 v=vp8:libvpx|1 v=vp9:libvpx-vp9|1 v=wmv1|1 v=wmv2|1 v=y41p|1 v=yuv4|1 v=zlib|1 v=zmbv|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_g722:g722|1 a=adpcm_g726:g726|1 a=adpcm_ima_wav|1 a=adpcm_ms|1 a=adpcm_swf|1 a=adpcm_yamaha|1 a=dts:dca|1 a=eac3|1 a=flac|1 a=g723_1|1 a=gsm_ms:libgsm_ms|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=pcm_alaw|1 a=pcm_f32le|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16le|1 a=pcm_s24le|1 a=pcm_s32le|1 a=pcm_s64le|1 a=pcm_u8|1 a=sonic|1 a=speex:libspeex|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1 a=wmav1|1 a=wmav2|1
+caf; a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_ima_qt|1 a=adpcm_ima_wav|1 a=adpcm_ms|1 a=alac|1 a=gsm:libgsm|1 a=gsm_ms:libgsm_ms|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=pcm_alaw|1 a=pcm_f32be|1 a=pcm_f32le|1 a=pcm_f64be|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16be|1 a=pcm_s16le|1 a=pcm_s24be|1 a=pcm_s24le|1 a=pcm_s32be|1 a=pcm_s32le|1 a=pcm_s8|1
+dash; v=dirac:vc2|0 v=h264:libx264|1 v=h264:libx264rgb|1 v=hap|1 v=hevc:libx265|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=mjpeg:mjpeg|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=png|1 v=prores:prores|1 v=prores:prores_aw|1 v=prores:prores_ks|1 v=utvideo|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=dts:dca|1 a=eac3|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=opus:libopus|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1
+dirac; v=dirac:vc2|1
+dnxhd; v=dnxhd|1
+dts; a=dts:dca|1
+dv; v=dvvideo|1
+eac3; a=eac3|1
+ffm; v=alias_pix|1 v=amv|1 v=asv1|1 v=asv2|1 v=avrp|1 v=avui|1 v=ayuv|1 v=bmp|1 v=cinepak|1 v=cljr|1 v=dirac:vc2|1 v=dnxhd|1 v=dpx|1 v=dvvideo|1 v=ffv1|1 v=ffvhuff|1 v=flashsv|1 v=flashsv2|1 v=flv1:flv|1 v=h261|1 v=h263:h263|1 v=h263p|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hap|1 v=hevc:libx265|1 v=huffyuv|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=jpegls|1 v=mjpeg:mjpeg|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=msmpeg4v2|1 v=msmpeg4v3:msmpeg4|1 v=msvideo1|1 v=pam|1 v=pbm|1 v=pcx|1 v=pgm|1 v=pgmyuv|1 v=png|1 v=ppm|1 v=prores:prores|1 v=prores:prores_aw|1 v=prores:prores_ks|1 v=qtrle|1 v=r10k|1 v=r210|1 v=rawvideo|1 v=roq:roqvideo|1 v=sgi|1 v=snow|1 v=sunrast|1 v=svq1|1 v=targa|1 v=theora:libtheora|1 v=tiff|1 v=utvideo|1 v=v210|1 v=v308|1 v=v408|1 v=v410|1 v=vp8:libvpx|1 v=vp9:libvpx-vp9|1 v=webp:libwebp|1 v=wmv1|1 v=wmv2|1 v=xbm|1 v=xface|1 v=xwd|1 v=y41p|1 v=yuv4|1 v=zlib|1 v=zmbv|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_adx|1 a=adpcm_g722:g722|1 a=adpcm_g726:g726|1 a=adpcm_g726le:g726le|1 a=adpcm_ima_qt|1 a=adpcm_ima_wav|1 a=adpcm_ms|1 a=adpcm_swf|1 a=adpcm_yamaha|1 a=alac|1 a=dts:dca|1 a=eac3|1 a=flac|1 a=g723_1|1 a=gsm:libgsm|1 a=gsm_ms:libgsm_ms|1 a=mlp|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=nellymoser|1 a=opus:libopus|1 a=pcm_alaw|1 a=pcm_f32be|1 a=pcm_f32le|1 a=pcm_f64be|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16be|1 a=pcm_s16be_planar|1 a=pcm_s16le|1 a=pcm_s16le_planar|1 a=pcm_s24be|1 a=pcm_s24daud|1 a=pcm_s24le|1 a=pcm_s24le_planar|1 a=pcm_s32be|1 a=pcm_s32le|1 a=pcm_s32le_planar|1 a=pcm_s64be|1 a=pcm_s64le|1 a=pcm_s8|1 a=pcm_s8_planar|1 a=pcm_u16be|1 a=pcm_u16le|1 a=pcm_u24be|1 a=pcm_u24le|1 a=pcm_u32be|1 a=pcm_u32le|1 a=pcm_u8|1 a=ra_144:real_144|1 a=roq_dpcm|1 a=s302m|1 a=sonic|1 a=speex:libspeex|1 a=truehd|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1 a=wavpack:wavpack|1 a=wavpack:libwavpack|1 a=wmav1|1 a=wmav2|1
+fits; v=fits|1
+flac; a=flac|1
+flv; v=flashsv|1 v=flashsv2|1 v=flv1:flv|1 v=h263:h263|0 v=h264:libx264|1 v=h264:libx264rgb|1 a=aac|1 a=adpcm_swf|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=nellymoser|1 a=pcm_alaw|1 a=pcm_mulaw|1 a=pcm_s16le|1 a=pcm_u8|1
+g722; a=adpcm_g722:g722|1
+g723_1; a=g723_1|1
+gif; v=gif|0
+gsm; a=gsm:libgsm|1
+gxf; v=dvvideo|1
+h261; v=h261|1
+h263; v=h263:h263|1
+h264; v=h264:libx264|1 v=h264:libx264rgb|1
+hevc; v=hevc:libx265|1
+hls; v=dirac:vc2|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hevc:libx265|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=dts:dca|1 a=eac3|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=opus:libopus|1 a=s302m|1
+ircam; a=pcm_alaw|1 a=pcm_f32le|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16le|1 a=pcm_s24le|1 a=pcm_s32le|1 a=pcm_s8|1
+ivf; v=vp8:libvpx|1 v=vp9:libvpx-vp9|1
+m4v; v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1
+matroska; v=amv|1 v=asv1|1 v=asv2|1 v=avrp|1 v=ayuv|1 v=cinepak|1 v=cljr|1 v=dirac:vc2|1 v=dnxhd|1 v=dpx|1 v=dvvideo|1 v=ffv1|1 v=ffvhuff|1 v=flashsv|1 v=flv1:flv|1 v=h261|1 v=h263:h263|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hap|1 v=hevc:libx265|1 v=huffyuv|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=jpegls|1 v=mjpeg:mjpeg|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=msmpeg4v2|1 v=msmpeg4v3:msmpeg4|1 v=msvideo1|1 v=png|1 v=prores:prores|1 v=prores:prores_aw|1 v=prores:prores_ks|1 v=r10k|1 v=r210|1 v=rawvideo|0 v=sgi|1 v=snow|1 v=svq1|1 v=targa|1 v=theora:libtheora|1 v=tiff|1 v=utvideo|1 v=v210|1 v=v308|1 v=v408|1 v=v410|1 v=vp8:libvpx|1 v=vp9:libvpx-vp9|1 v=wmv1|1 v=wmv2|1 v=y41p|1 v=yuv4|1 v=zlib|1 v=zmbv|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_g722:g722|1 a=adpcm_g726:g726|1 a=adpcm_ima_wav|1 a=adpcm_ms|1 a=adpcm_swf|1 a=adpcm_yamaha|1 a=alac|1 a=dts:dca|1 a=eac3|1 a=flac|1 a=g723_1|1 a=gsm_ms:libgsm_ms|1 a=mlp|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=opus:libopus|1 a=pcm_alaw|1 a=pcm_f32le|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16be|1 a=pcm_s16le|1 a=pcm_s24be|1 a=pcm_s24le|1 a=pcm_s32be|1 a=pcm_s32le|1 a=pcm_s64le|1 a=pcm_u8|1 a=ra_144:real_144|1 a=sonic|1 a=speex:libspeex|1 a=truehd|1 a=tta|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1 a=wavpack:wavpack|1 a=wavpack:libwavpack|1 a=wmav1|1 a=wmav2|1
+mjpeg; v=mjpeg:mjpeg|1
+mlp; a=mlp|1
+mmf; a=adpcm_yamaha|1
+mov; v=amv|1 v=asv1|1 v=asv2|1 v=avrp|1 v=avui|1 v=ayuv|1 v=cinepak|1 v=cljr|1 v=dirac:vc2|1 v=dnxhd|1 v=dpx|1 v=dvvideo|1 v=ffv1|1 v=ffvhuff|1 v=flashsv|1 v=flv1:flv|1 v=h261|1 v=h263:h263|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hap|1 v=hevc:libx265|1 v=huffyuv|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=jpegls|1 v=mjpeg:mjpeg|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=msmpeg4v2|1 v=msmpeg4v3:msmpeg4|1 v=msvideo1|1 v=png|1 v=prores:prores|1 v=prores:prores_aw|1 v=prores:prores_ks|1 v=qtrle|1 v=r10k|1 v=r210|1 v=sgi|1 v=snow|1 v=svq1|1 v=targa|1 v=theora:libtheora|1 v=tiff|1 v=utvideo|1 v=v210|1 v=v308|1 v=v408|1 v=v410|1 v=vp8:libvpx|1 v=wmv1|1 v=wmv2|1 v=y41p|1 v=yuv4|1 v=zlib|1 v=zmbv|0 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_g722:g722|1 a=adpcm_g726:g726|1 a=adpcm_ima_qt|1 a=adpcm_ima_wav|0 a=adpcm_ms|0 a=adpcm_swf|1 a=adpcm_yamaha|1 a=alac|1 a=dts:dca|1 a=eac3|1 a=g723_1|1 a=gsm:libgsm|1 a=gsm_ms:libgsm_ms|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=nellymoser|1 a=pcm_alaw|1 a=pcm_f32be|1 a=pcm_f32le|1 a=pcm_f64be|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16be|1 a=pcm_s16le|1 a=pcm_s24be|1 a=pcm_s24le|1 a=pcm_s32be|1 a=pcm_s32le|1 a=pcm_s8|1 a=pcm_u8|1 a=sonic|1 a=speex:libspeex|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1
+mp3; a=mp3:libmp3lame|1 a=mp3:libshine|1
+mp4; v=dirac:vc2|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hap|1 v=hevc:libx265|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=mjpeg:mjpeg|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=png|1 v=prores:prores|1 v=prores:prores_aw|1 v=prores:prores_ks|1 v=utvideo|1 v=vp9:libvpx-vp9|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=dts:dca|1 a=eac3|1 a=flac|0 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=opus:libopus|0 a=vorbis:vorbis|1 a=vorbis:libvorbis|1
+mpeg; v=h264:libx264|1 v=h264:libx264rgb|1 v=hevc:libx265|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=dts:dca|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1
+mpegts; v=dirac:vc2|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hevc:libx265|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=dts:dca|1 a=eac3|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=opus:libopus|1 a=s302m|1
+mpjpeg; v=mjpeg:mjpeg|1
+mxf; v=dnxhd|1 v=dvvideo|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=mpeg2video:mpeg2video|1
+nut; v=amv|1 v=asv1|1 v=asv2|1 v=ayuv|1 v=cinepak|1 v=cljr|1 v=dirac:vc2|0 v=dpx|1 v=dvvideo|1 v=ffv1|1 v=ffvhuff|1 v=flashsv|1 v=flv1:flv|1 v=h261|1 v=h263:h263|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=hap|1 v=hevc:libx265|1 v=huffyuv|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=jpegls|1 v=mjpeg:mjpeg|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=msmpeg4v2|1 v=msmpeg4v3:msmpeg4|1 v=msvideo1|1 v=png|1 v=prores:prores|1 v=prores:prores_aw|1 v=prores:prores_ks|1 v=r10k|1 v=r210|1 v=rawvideo|1 v=snow|1 v=svq1|1 v=targa|1 v=theora:libtheora|1 v=utvideo|1 v=v210|1 v=v308|1 v=v408|1 v=v410|1 v=vp8:libvpx|1 v=vp9:libvpx-vp9|1 v=wmv1|1 v=wmv2|1 v=xface|1 v=y41p|1 v=yuv4|1 v=zlib|1 v=zmbv|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_g722:g722|1 a=adpcm_ima_wav|1 a=adpcm_ms|1 a=adpcm_swf|1 a=adpcm_yamaha|1 a=dts:dca|1 a=flac|1 a=g723_1|1 a=gsm_ms:libgsm_ms|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=opus:libopus|1 a=pcm_alaw|1 a=pcm_f32be|1 a=pcm_f32le|1 a=pcm_f64be|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16be|1 a=pcm_s16be_planar|1 a=pcm_s16le|1 a=pcm_s16le_planar|1 a=pcm_s24be|1 a=pcm_s24le|1 a=pcm_s24le_planar|1 a=pcm_s32be|1 a=pcm_s32le|1 a=pcm_s32le_planar|1 a=pcm_s8|1 a=pcm_s8_planar|1 a=pcm_u16be|1 a=pcm_u16le|1 a=pcm_u24be|1 a=pcm_u24le|1 a=pcm_u32be|1 a=pcm_u32le|1 a=pcm_u8|1 a=sonic|1 a=speex:libspeex|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1 a=wavpack:wavpack|1 a=wavpack:libwavpack|1
+ogg; v=theora:libtheora|1 v=vp8:libvpx|1 a=flac|1 a=opus:libopus|1 a=speex:libspeex|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1
+rm; v=rv10|1 v=rv20|1 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=ra_144:real_144|1
+roq; v=roq:roqvideo|0 a=roq_dpcm|1
+rso; a=pcm_u8|1
+smjpeg; v=mjpeg:mjpeg|1 a=pcm_s16le|1
+sox; a=pcm_s32be|1 a=pcm_s32le|1
+spdif; a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=mp3:libmp3lame|1 a=mp3:libshine|1
+swf; v=flv1:flv|0 v=mjpeg:mjpeg|1 a=mp3:libmp3lame|1 a=mp3:libshine|1
+tta; a=tta|1
+voc; a=pcm_alaw|1 a=pcm_mulaw|1 a=pcm_s16le|1 a=pcm_u8|1
+w64; a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_g722:g722|1 a=adpcm_g726:g726|1 a=adpcm_ima_wav|1 a=adpcm_ms|1 a=adpcm_swf|1 a=adpcm_yamaha|1 a=dts:dca|1 a=eac3|1 a=flac|1 a=g723_1|1 a=gsm_ms:libgsm_ms|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=pcm_alaw|1 a=pcm_f32le|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16le|1 a=pcm_s24le|1 a=pcm_s32le|1 a=pcm_s64le|1 a=pcm_u8|1 a=sonic|1 a=speex:libspeex|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1 a=wmav1|1 a=wmav2|1
+wav; a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_g722:g722|1 a=adpcm_g726:g726|1 a=adpcm_ima_wav|1 a=adpcm_ms|1 a=adpcm_swf|1 a=adpcm_yamaha|1 a=dts:dca|1 a=eac3|1 a=flac|1 a=g723_1|1 a=gsm_ms:libgsm_ms|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=pcm_alaw|1 a=pcm_f32le|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16le|1 a=pcm_s24le|1 a=pcm_s32le|1 a=pcm_s64le|1 a=pcm_u8|1 a=sonic|1 a=speex:libspeex|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1 a=wmav1|1 a=wmav2|1
+webm; v=vp8:libvpx|1 v=vp9:libvpx-vp9|1 a=opus:libopus|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1
+wtv; v=amv|1 v=asv1|1 v=asv2|1 v=ayuv|1 v=cinepak|0 v=cljr|1 v=dirac:vc2|1 v=dpx|1 v=dvvideo|1 v=ffv1|0 v=ffvhuff|1 v=flashsv|0 v=flv1:flv|0 v=h261|1 v=h263:h263|1 v=h264:libx264|1 v=h264:libx264rgb|1 v=huffyuv|1 v=jpeg2000:jpeg2000|1 v=jpeg2000:libopenjpeg|1 v=jpegls|1 v=mpeg1video|1 v=mpeg2video:mpeg2video|1 v=mpeg4:mpeg4|1 v=mpeg4:libxvid|1 v=msmpeg4v2|0 v=msmpeg4v3:msmpeg4|0 v=msvideo1|0 v=png|0 v=r10k|1 v=r210|1 v=snow|0 v=svq1|0 v=targa|1 v=v210|1 v=v308|1 v=v408|1 v=v410|1 v=vp8:libvpx|1 v=vp9:libvpx-vp9|1 v=wmv1|0 v=wmv2|0 v=y41p|1 v=yuv4|1 v=zmbv|0 a=aac|1 a=ac3:ac3|1 a=ac3:ac3_fixed|1 a=adpcm_g722:g722|1 a=adpcm_g726:g726|1 a=adpcm_ima_wav|1 a=adpcm_ms|1 a=adpcm_swf|1 a=adpcm_yamaha|1 a=dts:dca|1 a=eac3|1 a=flac|1 a=g723_1|1 a=gsm_ms:libgsm_ms|1 a=mp2:mp2|1 a=mp2:mp2fixed|1 a=mp2:libtwolame|1 a=mp3:libmp3lame|1 a=mp3:libshine|1 a=pcm_alaw|1 a=pcm_f32le|1 a=pcm_f64le|1 a=pcm_mulaw|1 a=pcm_s16le|1 a=pcm_s24le|1 a=pcm_s32le|1 a=pcm_s64le|1 a=pcm_u8|1 a=sonic|1 a=speex:libspeex|1 a=vorbis:vorbis|1 a=vorbis:libvorbis|1 a=wmav1|1 a=wmav2|1
+wv; a=wavpack:wavpack|1 a=wavpack:libwavpack|1
diff --git a/debian/tests/examples b/debian/tests/examples
new file mode 100755
index 0000000000..385c29aacd
--- /dev/null
+++ b/debian/tests/examples
@@ -0,0 +1,19 @@
+#!/bin/sh
+
+set -e
+
+# build the examples
+
+echo "ADTTMP directory: $ADTTMP"
+cd "$ADTTMP"
+
+cp -r /usr/share/doc/ffmpeg/examples ./
+cd examples
+
+echo "building the examples..."
+ret=0
+make -k examples 2>&1
+ret=$?
+echo "done!"
+
+exit $ret
diff --git a/debian/upstream/signing-key.asc b/debian/upstream/signing-key.asc
new file mode 100644
index 0000000000..26df880076
--- /dev/null
+++ b/debian/upstream/signing-key.asc
@@ -0,0 +1,32 @@
+-----BEGIN PGP PUBLIC KEY BLOCK-----
+Version: GnuPG v2.0.22 (GNU/Linux)
+
+mQENBE22rV0BCAC3DzRmA2XlhrqYv9HKoEvNHHf+PzosmCTHmYhWHDqvBxPkSvCl
+ipkbvJ4pBnVvcX6mW5QyKhspHm5j1X5ibe9Bt9/chS/obnIobmvF8shSUgjQ0qRW
+9c1aWOjvT26SxYQ1y9TmYCFwixeydGFHYKjAim+evGUccni5KMlfPoT3VTPtim78
+ufkr3E9Nco/Mobn/8APO0NmLEGWAM6ln/8J/c9h6a1QKnQyBqWfT0YnAaebafFaZ
+YwOtRdDG54VbJ4xwcHbCj5cKhTABk/QtBzDvnW4bG+uSpqdHbFZEY2JpURDuj/T3
+NudKQGzn0bYNpY1XY2l0pqs/btKHnBW0fVMjABEBAAG0NEZGbXBlZyByZWxlYXNl
+IHNpZ25pbmcga2V5IDxmZm1wZWctZGV2ZWxAZmZtcGVnLm9yZz6JATgEEwECACIF
+Ak22rV0CGwMGCwkIBwMCBhUIAgkKCwQWAgMBAh4BAheAAAoJELQyLwTWdljYKxUH
+/1fqzl7SKie2g4t4PJbqUbkLuMsC+CP6gp0dcVZOHkuUYAoD3PM3iVxpLBVyKIXI
+g7wMSTAtlIcYnzhWIpnoCBes6/O2Mrq6xHgGeTp6CDcm3LmmSYR1f5KdD8KUaA+l
+c/M/1fEnwrSs/UGDk6R6iUmbqwxPsbozlOvmUHOLbDZBnKrk9XfAJdUhAuFACrSA
+T+KF1jniz0OfNGd23SaHWRCphoRW9pXDc5FfkdaueBUvBvGv19ZNcDhcxT3/u6z2
+DaUFC0rLWqk8obo951jVvi/zOhB94Pw6u1SLvcTq3V1q5URWJtgSbpih9VRqxUbQ
+NbXduKGzbHz6Vwpkupz4JReIRgQTEQIABgUCTgEHnAAKCRBhHseHBAsPq9gBAJ4u
+MZ8XQlo9cZICzqHjRZDwbTE/AgCfQzxSHCj37I7PQdvAAtjHKd0oTlG5AQ0ETbat
+XQEIANjYrygJi/fn1nlSg5Mz0l9KHDm4yfWtaOrXUjJcyiGe4G0XXJLGh45qxJ0D
+OKzi9id+9W4jby+kKuzG9O6Vn0iDeODOaOGnz4ua7Vu6d0AbYfNXZPWge/GCodo/
+ZD/qri1tPkLmRtT/sniahwy6LruPNHfFSRoNIjwbcD/IL+EbY1pL1/IFSzEAA1ZZ
+amgmHgB7o9pwDIkK6HuvHMR/Y5MsoMfVfWV3ZGtA6v9z51CvnHsHPsADRSnUp7aY
+tR412SiAO4XodMLTA92L3LxgYhI4ma7DXZ8jgKg4JkKO+DXmoU63HtRdq/HZjeXJ
+Kk1JGJF3zCvP3DyIzZ8LWIjN8t0AEQEAAYkBHwQYAQIACQUCTbatXQIbDAAKCRC0
+Mi8E1nZY2LS8B/0bMoUAl4X9D0WQbL4lU0czCIOKOsvbHpIxivjCnOQxU23+PV5W
+ZdoCCpSuAHGv+2OHzhNrij++P9BNTJeQskxdS9FH4MZwy1IRSPrxegSxbCUpBI1r
+d0Zf7qb9BNPrHPTueWFV1uExOSB2ApsvWrKo2D8mR0uZAPYfYl2ToFVoa5PR7/+i
+i9WiJr/flF6qm7hoLpI5Bm4VcZh2GPsJ9Vo/8x/qOGwtdWHqBykYloKsrwD4U69r
+jn+d9feLoPBRgoVroXWQttt0sUnyoudz+x8ETJgPoNK3kQoDagApj4qAt83Ayac3
+HzNIuEJ7LdvfINIOprujnJ9vH4n04XLgI4EZ
+=rOF4
+-----END PGP PUBLIC KEY BLOCK-----
diff --git a/debian/watch b/debian/watch
new file mode 100644
index 0000000000..650a0fcb7e
--- /dev/null
+++ b/debian/watch
@@ -0,0 +1,3 @@
+version=3
+opts="pgpsigurlmangle=s/$/.asc/" \
+  https://ffmpeg.org/releases/ffmpeg-([0-9.]+)\.tar\.xz
-- 
2.15.1

